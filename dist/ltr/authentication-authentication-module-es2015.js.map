{"version":3,"sources":["./src/app/authentication/locked/locked.component.ts","./src/app/authentication/locked/locked.component.html","./src/app/authentication/verify-email/verify-email.component.ts","./src/app/authentication/verify-email/verify-email.component.html","./src/app/authentication/page500/page500.component.ts","./src/app/authentication/page500/page500.component.html","./src/app/authentication/authentication.module.ts","./src/app/authentication/signin/signin.component.ts","./src/app/authentication/signin/signin.component.html","./src/app/authentication/authentication-routing.module.ts","./src/app/authentication/signup/signup.component.ts","./src/app/authentication/signup/signup.component.html","./src/app/authentication/forgot-password/forgot-password.component.ts","./src/app/authentication/forgot-password/forgot-password.component.html"],"names":[],"mappings":"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","file":"authentication-authentication-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n// import { AuthService } from 'src/app/core/service/auth.service';\r\nimport {AuthService} from '../../core/service/auth.service';\r\nimport { Role } from 'src/app/core/models/role';\r\n@Component({\r\n  selector: 'app-locked',\r\n  templateUrl: './locked.component.html',\r\n  styleUrls: ['./locked.component.scss'],\r\n})\r\nexport class LockedComponent implements OnInit {\r\n  authForm: FormGroup;\r\n  submitted = false;\r\n  userImg: string;\r\n  userFullName: string;\r\n  hide = true;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {}\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      password: ['', Validators.required],\r\n    });\r\n    this.userImg = this.authService.currentUserValue.img;\r\n    this.userFullName =\r\n      this.authService.currentUserValue.firstName +\r\n      ' ' +\r\n      this.authService.currentUserValue.lastName;\r\n  }\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.authForm.invalid) {\r\n      return;\r\n    } else {\r\n      const role = this.authService.currentUserValue.role;\r\n      if (role === Role.All || role === Role.Admin) {\r\n        this.router.navigate(['/admin/dashboard/main']);\r\n      } else if (role === Role.Teacher) {\r\n        this.router.navigate(['/teacher/dashboard']);\r\n      } else if (role === Role.Student) {\r\n        this.router.navigate(['/student/dashboard']);\r\n      } else {\r\n        this.router.navigate(['/authentication/signin']);\r\n      }\r\n    }\r\n  }\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/bg-01.png);\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"auth-locked\">\r\n              <div class=\"image\">\r\n                <img src={{userImg}} alt=\"User\">\r\n              </div>\r\n            </div>\r\n            <span class=\"auth-locked-title p-b-34 p-t-27\">\r\n              {{userFullName}}\r\n            </span>\r\n            <div class=\"text-center\">\r\n              <p class=\"txt1 p-b-20\">\r\n                Locked\r\n              </p>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <span class=\"error-subheader2 p-t-20 p-b-15\">\r\n                  Enter your password here.\r\n                </span>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Password</mat-label>\r\n                  <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\" required>\r\n                  <mat-icon matSuffix (click)=\"hide = !hide\">\r\n                    {{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('password').hasError('required')\">\r\n                    Password is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"container-auth-form-btn mt-5\">\r\n              <button mat-flat-button color=\"primary\" class=\"auth-form-btn\" [disabled]=\"!authForm.valid \"\r\n                type=\"submit\">\r\n                Reset My Password\r\n              </button>\r\n            </div>\r\n            <div class=\"w-full p-t-15 p-b-15 text-center\">\r\n              <div>\r\n                <a routerLink=\"/authentication/signin\" class=\"txt1\">\r\n                  Need Help?\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import { AuthService } from 'src/app/core/service/auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-verify-email',\n  templateUrl: './verify-email.component.html',\n  styleUrls: ['./verify-email.component.sass']\n})\nexport class VerifyEmailComponent implements OnInit {\n  userEmail: string;\n\n  constructor(\n    public authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    if(this.authService.currentUserValue) {\n      this.userEmail = this.authService.currentUserValue[\"email\"];\n    }\n  }\n\n}\n","<div class=\"auth-container\">\n  <div class=\"row auth-main\">\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\n      <div\n        class=\"left-img\"\n        style=\"background-image: url(assets/images/pages/bg-02.png);\"\n      ></div>\n    </div>\n    <div class=\"col-sm-6 auth-form-section\">\n      <div class=\"form-section\">\n        <div class=\"auth-wrapper\">\n          <h2 class=\"welcome-msg\">Thank You For Registering</h2>\n          <p class=\"auth-signup-text text-muted\">\n            We have sent a confirmation email to <strong>{{userEmail}}</strong>.\n            Please check your email and click on the link to verfiy your email address.\n          </p>\n          <form\n            class=\"validate-form\"\n          >\n            <div class=\"container-auth-form-btn\">\n              <button\n                mat-flat-button\n                color=\"primary\"\n                class=\"auth-form-btn\"\n                (click)=\"authService.SendVerificationMail()\"\n                >\n                Resend Verification Email\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\n@Component({\r\n  selector: 'app-page500',\r\n  templateUrl: './page500.component.html',\r\n  styleUrls: ['./page500.component.scss'],\r\n})\r\nexport class Page500Component implements OnInit {\r\n  constructor() {}\r\n  ngOnInit() {}\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/bg-05.png);\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <form>\r\n            <span class=\"error-header p-b-45\">\r\n              500\r\n            </span>\r\n            <span class=\"error-subheader2 p-b-5\">\r\n              Oops, Something went wrong. Please try after some times.\r\n            </span>\r\n            <div class=\"container-auth-form-btn mt-5\">\r\n              <button mat-flat-button color=\"primary\" class=\"auth-form-btn\" type=\"submit\">\r\n                Go To Home Page\r\n              </button>\r\n            </div>\r\n            <div class=\"w-full p-t-15 p-b-15 text-center\">\r\n              <div>\r\n                <a routerLink=\"/authentication/signin\" class=\"txt1\">\r\n                  Need Help?\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\r\nimport { Page500Component } from './page500/page500.component';\r\nimport { Page404Component } from './page404/page404.component';\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { LockedComponent } from './locked/locked.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\nimport { VerifyEmailComponent } from './verify-email/verify-email.component';\r\n@NgModule({\r\n  declarations: [\r\n    Page500Component,\r\n    Page404Component,\r\n    SigninComponent,\r\n    SignupComponent,\r\n    LockedComponent,\r\n    ForgotPasswordComponent,\r\n    VerifyEmailComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AuthenticationRoutingModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule\r\n  ]\r\n})\r\nexport class AuthenticationModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n// import { AuthService } from 'src/app/core/service/auth.service';\r\nimport { AuthService } from '../../core/service/auth.service';\r\nimport { Role } from 'src/app/core/models/role';\r\n@Component({\r\n  selector: 'app-signin',\r\n  templateUrl: './signin.component.html',\r\n  styleUrls: ['./signin.component.scss'],\r\n})\r\nexport class SigninComponent implements OnInit {\r\n  authForm: FormGroup;\r\n  submitted = false;\r\n  error = '';\r\n  hide = true;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    // private authService: AuthService\r\n    public authService: AuthService\r\n  ) {}\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  // adminSet() {\r\n  //   this.authForm.get('username').setValue('admin@school.org');\r\n  //   this.authForm.get('password').setValue('admin@123');\r\n  // }\r\n  // teacherSet() {\r\n  //   this.authForm.get('username').setValue('teacher@school.org');\r\n  //   this.authForm.get('password').setValue('teacher@123');\r\n  // }\r\n  // studentSet() {\r\n  //   this.authForm.get('username').setValue('student@school.org');\r\n  //   this.authForm.get('password').setValue('student@123');\r\n  // }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    this.error = '';\r\n    if (this.authForm.invalid) {\r\n      this.error = 'Username and Password not valid !';\r\n      return;\r\n    } else {\r\n      // this.authService\r\n      //   .login(this.f.username.value, this.f.password.value)\r\n      //   .subscribe(\r\n      //     (res) => {\r\n      //       if (res) {\r\n      //         const role = this.authService.currentUserValue.role;\r\n      //         if (role === Role.All || role === Role.Admin) {\r\n      //           this.router.navigate(['/admin/dashboard/main']);\r\n      //         } else if (role === Role.Teacher) {\r\n      //           this.router.navigate(['/teacher/dashboard']);\r\n      //         } else if (role === Role.Student) {\r\n      //           this.router.navigate(['/student/dashboard']);\r\n      //         } else {\r\n      //           this.router.navigate(['/authentication/signin']);\r\n      //         }\r\n      //       } else {\r\n      //         this.error = 'Invalid Login';\r\n      //       }\r\n      //     },\r\n      //     (error) => {\r\n      //       this.error = error;\r\n      //       this.submitted = false;\r\n      //     }\r\n      //   );\r\n    }\r\n  }\r\n}\r\n","<div class=\"auth-container\" style=\"background: url(assets/images/sign.jpg); background-size: 90% 100%; background-repeat: no-repeat;\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-8 px-0 d-none d-sm-block\">\r\n      <!-- <div\r\n        class=\"left-img\"\r\n      ></div> -->\r\n    </div>\r\n    <div class=\"col-sm-4 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <!-- <h2 class=\"welcome-msg\"> Welcome to Smart </h2> -->\r\n          <p class=\"auth-signup-text text-muted\">\r\n            Need an account?<a\r\n              routerLink=\"/authentication/signup\"\r\n              class=\"sign-up-link\"\r\n              >Sign Up\r\n            </a>\r\n          </p>\r\n          <!-- <div class=\"d-flex justify-content-between lbl-alert mb-3\">\r\n            <div>\r\n              <button mat-raised-button color=\"primary\" type=\"button\" (click)=\"adminSet();\">Admin</button>\r\n            </div>\r\n            <div>\r\n              <button mat-raised-button color=\"accent\" type=\"button\" (click)=\"teacherSet();\">Teacher</button>\r\n            </div>\r\n            <div>\r\n              <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"studentSet();\">Student</button>\r\n            </div>\r\n          </div> -->\r\n          <h2 class=\"login-title\">Sign in</h2>\r\n          <form\r\n            class=\"validate-form\"\r\n            [formGroup]=\"authForm\"\r\n            (ngSubmit)=\"onSubmit()\"\r\n          >\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Username</mat-label>\r\n                  <input matInput formControlName=\"username\" #userName />\r\n                  <mat-icon matSuffix>face</mat-icon>\r\n                  <mat-error\r\n                    *ngIf=\"authForm.get('username').hasError('required')\"\r\n                  >\r\n                    Username is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Password</mat-label>\r\n                  <input\r\n                    matInput\r\n                    [type]=\"hide ? 'password' : 'text'\"\r\n                    formControlName=\"password\"\r\n                    #userPassword\r\n                  />\r\n                  <a\r\n                    class=\"show-pwd-icon\"\r\n                    href=\"#\"\r\n                    onClick=\"return false;\"\r\n                    matSuffix\r\n                    (click)=\"hide = !hide\"\r\n                    [attr.aria-label]=\"'Hide password'\"\r\n                    [attr.aria-pressed]=\"hide\"\r\n                  >\r\n                    <mat-icon\r\n                      >{{hide ? 'visibility_off' : 'visibility'}}</mat-icon\r\n                    >\r\n                  </a>\r\n                  <mat-error\r\n                    *ngIf=\"authForm.get('password').hasError('required')\"\r\n                  >\r\n                    Password is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"d-flex justify-content-between align-items-center mb-5\">\r\n              <div class=\"form-check\">\r\n                <label class=\"form-check-label\">\r\n                  <input class=\"form-check-input\" type=\"checkbox\" value=\"\" />\r\n                  Remember me\r\n                  <span class=\"form-check-sign\">\r\n                    <span class=\"check\"></span>\r\n                  </span>\r\n                </label>\r\n              </div>\r\n              <a class=\"txt1\" routerLink=\"/authentication/forgot-password\"\r\n                >Forgot Password?</a\r\n              >\r\n            </div>\r\n            <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">\r\n              {{error}}\r\n            </div>\r\n            <div class=\"container-auth-form-btn\">\r\n              <button\r\n                mat-flat-button\r\n                color=\"primary\"\r\n                class=\"auth-form-btn\"\r\n                [disabled]=\"!authForm.valid \"\r\n                (click)=\"authService.login(userName.value, userPassword.value)\"\r\n              >\r\n                Login\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <!-- <h6 class=\"social-login-title\">OR</h6>\r\n          <ul class=\"list-unstyled social-icon mb-0 mt-3\">\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                <i class=\"fab fa-google\"></i>\r\n              </a></li>\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded flex-c-m\">\r\n                <i class=\"fab fa-facebook-f\"></i>\r\n              </a></li>\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                <i class=\"fab fa-twitter\"></i>\r\n              </a></li>\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                <i class=\"fab fa-linkedin-in\"></i>\r\n              </a></li>\r\n          </ul> -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { VerifyEmailComponent } from './verify-email/verify-email.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { LockedComponent } from './locked/locked.component';\r\nimport { Page404Component } from './page404/page404.component';\r\nimport { Page500Component } from './page500/page500.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'signin',\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: 'signin',\r\n    component: SigninComponent,\r\n  },\r\n  {\r\n    path: 'signup',\r\n    component: SignupComponent,\r\n  },\r\n  {\r\n    path: 'verify-email-address',\r\n    component: VerifyEmailComponent\r\n  },\r\n  {\r\n    path: 'forgot-password',\r\n    component: ForgotPasswordComponent,\r\n  },\r\n  {\r\n    path: 'locked',\r\n    component: LockedComponent,\r\n  },\r\n  {\r\n    path: 'page404',\r\n    component: Page404Component,\r\n  },\r\n  {\r\n    path: 'page500',\r\n    component: Page500Component,\r\n  },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthenticationRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../core/service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss'],\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  authForm: FormGroup;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  hide = true;\r\n  chide = true;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    public authService: AuthService\r\n  ) {}\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      // username: ['', Validators.required],\r\n      email: [\r\n        '',\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n      password: ['', Validators.required],\r\n      // cpassword: ['', Validators.required],\r\n    });\r\n    // get return url from route parameters or default to '/'\r\n    // this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.authForm.invalid) {\r\n      return;\r\n    } else {\r\n      // this.router.navigate(['/admin/dashboard/main']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div\r\n        class=\"left-img\"\r\n        style=\"background-image: url(assets/images/pages/bg-02.png);\"\r\n      ></div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <h2 class=\"welcome-msg\">Sign Up</h2>\r\n          <p class=\"auth-signup-text text-muted\">\r\n            Enter details to create your account\r\n          </p>\r\n          <form\r\n            class=\"validate-form\"\r\n            [formGroup]=\"authForm\"\r\n            (ngSubmit)=\"onSubmit()\"\r\n          >\r\n            <!-- <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Username</mat-label>\r\n                  <input matInput formControlName=\"username\" #userName required>\r\n                  <mat-icon matSuffix>face</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('username').hasError('required')\">\r\n                    Username is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div> -->\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Email</mat-label>\r\n                  <input matInput formControlName=\"email\" #userEmail required />\r\n                  <mat-icon matSuffix>mail</mat-icon>\r\n                  <mat-error\r\n                    *ngIf=\"authForm.get('email').hasError('required') || authForm.get('email').touched\"\r\n                  >\r\n                    Please enter a valid email address\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Password</mat-label>\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"password\"\r\n                    [type]=\"hide ? 'password' : 'text'\"\r\n                    #userPwd\r\n                    required\r\n                  />\r\n                  <mat-icon matSuffix (click)=\"hide = !hide\">\r\n                    {{hide ? 'visibility_off' : 'visibility'}}</mat-icon\r\n                  >\r\n                  <mat-error\r\n                    *ngIf=\"authForm.get('password').hasError('required')\"\r\n                  >\r\n                    Password is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <!-- <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Confirm Password</mat-label>\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"cpassword\"\r\n                    [type]=\"chide ? 'password' : 'text'\"\r\n                    required\r\n                  />\r\n                  <mat-icon matSuffix (click)=\"chide = !chide\">\r\n                    {{chide ? 'visibility_off' : 'visibility'}}</mat-icon\r\n                  >\r\n                  <mat-error\r\n                    *ngIf=\"authForm.get('cpassword').hasError('required')\"\r\n                  >\r\n                    Confirm Password is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div> -->\r\n            <div class=\"flex-sb-m w-full  p-b-20\">\r\n              <div>\r\n                <span\r\n                  >Already Registered?\r\n                  <a routerLink=\"/authentication/signin\">\r\n                    Login\r\n                  </a></span\r\n                >\r\n              </div>\r\n            </div>\r\n            <div class=\"container-auth-form-btn\">\r\n              <button\r\n                mat-flat-button\r\n                color=\"primary\"\r\n                class=\"auth-form-btn\"\r\n                [disabled]=\"!authForm.valid \"\r\n                (click)=\"authService.SignUp(userEmail.value, userPwd.value)\"\r\n                >\r\n                Register\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <!-- <h6 class=\"social-login-title\">OR</h6>\r\n          <ul class=\"list-unstyled social-icon mb-0 mt-3\">\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                <i class=\"fab fa-google\"></i>\r\n              </a></li>\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded flex-c-m\">\r\n                <i class=\"fab fa-facebook-f\"></i>\r\n              </a></li>\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                <i class=\"fab fa-twitter\"></i>\r\n              </a></li>\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                <i class=\"fab fa-linkedin-in\"></i>\r\n              </a></li>\r\n          </ul> -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { AuthService } from 'src/app/core/service/auth.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss'],\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  authForm: FormGroup;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    public authService: AuthService\r\n  ) {}\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      email: [\r\n        '',\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n    });\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.authForm.invalid) {\r\n      return;\r\n    } else {\r\n      // this.router.navigate(['/dashboard/main']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div\r\n        class=\"left-img\"\r\n        style=\"background-image: url(assets/images/pages/bg-03.png);\"\r\n      ></div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <h2 class=\"welcome-msg\">Reset Password</h2>\r\n          <p class=\"auth-signup-text text-muted\">Let Us Help You</p>\r\n          <form\r\n            class=\"validate-form\"\r\n            [formGroup]=\"authForm\"\r\n            (ngSubmit)=\"onSubmit()\"\r\n          >\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <span class=\"error-subheader2 p-t-20 p-b-15\">\r\n                  Enter your registered email address.\r\n                </span>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Email</mat-label>\r\n                  <input matInput formControlName=\"email\" #passwordResetEmail required />\r\n                  <mat-icon matSuffix>mail</mat-icon>\r\n                  <mat-error\r\n                    *ngIf=\"authForm.get('email').hasError('required') || authForm.get('email').touched\"\r\n                  >\r\n                    Please enter a valid email address\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"container-auth-form-btn mt-5\">\r\n              <button\r\n                mat-flat-button\r\n                color=\"primary\"\r\n                class=\"auth-form-btn\"\r\n                [disabled]=\"!authForm.valid\"\r\n                (click)=\"authService.ForgotPassword(passwordResetEmail.value)\"\r\n              >\r\n                Reset My Password\r\n              </button>\r\n            </div>\r\n            <div class=\"w-full p-t-25 text-center\">\r\n              <div>\r\n                <a routerLink=\"/authentication/signin\" class=\"txt1\">\r\n                  Login?\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}