{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/autocomplete.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/slider.js"],"names":["_c0","MatAutocomplete_ng_template_0_Template","rf","ctx","ctx_r0","id","_classList","_c1","_uniqueAutocompleteIdCounter","MatAutocompleteSelectedEvent","source","option","MatAutocompleteBase","_MatAutocompleteMixinBase","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS","providedIn","factory","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY","autoActiveFirstOption","_MatAutocompleteBase","_changeDetectorRef","_elementRef","defaults","_activeOptionChanges","EMPTY","showPanel","_isOpen","displayWith","optionSelected","opened","closed","optionActivated","_autoActiveFirstOption","_keyManager","options","withWrap","change","subscribe","index","emit","toArray","_setVisibility","unsubscribe","scrollTop","panel","nativeElement","length","_setVisibilityClasses","markForCheck","event","classList","_visibleClass","_hiddenClass","value","split","reduce","className","trim","ɵfac","_MatAutocompleteBase_Factory","t","ɵdir","type","viewQuery","_MatAutocompleteBase_Query","_t","template","first","inputs","panelWidth","outputs","features","ctorParameters","undefined","decorators","args","propDecorators","MatAutocomplete","arguments","MatAutocomplete_Factory","ɵMatAutocomplete_BaseFactory","ɵcmp","selectors","contentQueries","MatAutocomplete_ContentQueries","dirIndex","optionGroups","hostAttrs","disableRipple","exportAs","provide","useExisting","ngContentSelectors","decls","vars","consts","MatAutocomplete_Template","directives","styles","encapsulation","changeDetection","descendants","selector","None","OnPush","host","providers","_MatAutocompleteOriginBase","elementRef","_MatAutocompleteOriginBase_Factory","MatAutocompleteOrigin","MatAutocompleteOrigin_Factory","ɵMatAutocompleteOrigin_BaseFactory","AUTOCOMPLETE_OPTION_HEIGHT","AUTOCOMPLETE_PANEL_HEIGHT","MAT_AUTOCOMPLETE_SCROLL_STRATEGY","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","MAT_AUTOCOMPLETE_VALUE_ACCESSOR","MatAutocompleteTrigger","multi","getMatAutocompleteMissingPanelError","Error","_MatAutocompleteTriggerBase","_element","_overlay","_viewContainerRef","_zone","scrollStrategy","_dir","_formField","_document","_viewportRuler","_componentDestroyed","_autocompleteDisabled","_manuallyFloatingLabel","_viewportSubscription","_canOpenOnNextFocus","_closeKeyEventStream","_windowBlurHandler","activeElement","panelOpen","_onChange","_onTouched","position","autocompleteAttribute","_overlayAttached","optionSelections","autocomplete","map","onSelectionChange","onStable","pipe","_scrollStrategy","window","_getWindow","runOutsideAngular","addEventListener","changes","_positionStrategy","_setStrategyPositions","_overlayRef","updatePosition","removeEventListener","_destroyPanel","complete","_attachOverlay","_floatLabel","_resetLabel","hasAttached","detach","_closingActionsSubscription","detectChanges","clickTarget","_isInsideShadowRoot","composedPath","target","formField","customOrigin","connectedTo","contains","overlayElement","Promise","resolve","then","_setTriggerValue","fn","isDisabled","disabled","keyCode","preventDefault","activeOption","_selectViaInteraction","_resetActiveItem","prevActiveItem","activeItem","isArrowKey","onKeydown","_canOpen","openPanel","_scrollToOption","activeItemIndex","parseFloat","_previousValue","shouldAnimate","floatLabel","_animateAndLockLabel","firstStable","optionChanges","reapplyLastPosition","wasOpen","panelClosingActions","_setValueAndClose","closePanel","dispose","toDisplay","inputValue","_control","_clearPreviousSelectedOption","focus","_emitSelectEvent","skip","forEach","selected","deselect","ngDevMode","overlayRef","_portal","create","_getOverlayConfig","keydownEvents","next","stopPropagation","updateSize","width","_getPanelWidth","setOrigin","_getConnectedElement","attach","_subscribeToClosingActions","positionStrategy","_getOverlayPosition","direction","strategy","flexibleConnectedTo","withFlexibleDimensions","withPush","belowPositions","originX","originY","overlayX","overlayY","panelClass","_aboveClass","abovePositions","positions","withPositions","getConnectedOverlayOrigin","_getHostWidth","getBoundingClientRect","setActiveItem","element","readOnly","_a","defaultView","labelCount","_setScrollTop","_getHostElement","newScrollPosition","offsetTop","offsetHeight","_getScrollTop","tabOut","_getOutsideClickStream","detachments","_MatAutocompleteTriggerBase_Factory","autocompleteDisabled","MatAutocompleteTrigger_Factory","ɵMatAutocompleteTrigger_BaseFactory","hostVars","hostBindings","MatAutocompleteTrigger_HostBindings","MatAutocompleteTrigger_focusin_HostBindingHandler","_handleFocus","MatAutocompleteTrigger_blur_HostBindingHandler","MatAutocompleteTrigger_input_HostBindingHandler","$event","_handleInput","MatAutocompleteTrigger_keydown_HostBindingHandler","_handleKeydown","toString","MatAutocompleteModule","ɵmod","ɵinj","MatAutocompleteModule_Factory","imports","ngJitMode","declarations","exports","activeEventOptions","passive","MIN_AUTO_TICK_SEPARATION","DISABLED_THUMB_GAP","MIN_VALUE_NONACTIVE_THUMB_GAP","MIN_VALUE_ACTIVE_THUMB_GAP","MAT_SLIDER_VALUE_ACCESSOR","MatSlider","MatSliderChange","MatSliderBase","_MatSliderMixinBase","_focusMonitor","tabIndex","_ngZone","_animationMode","_invert","_max","_min","_step","_thumbLabel","_tickInterval","_value","_vertical","input","valueChange","onTouched","_percent","_isSliding","_isActive","_tickIntervalPercent","_sliderDimensions","_controlValueAccessorChangeFn","_dirChangeSubscription","_pointerDown","isTouchEvent","button","run","oldValue","pointerPosition","getPointerPositionOnPage","_lastPointerEvent","_focusHostElement","_onMouseenter","_bindGlobalEvents","_updateValueFromPosition","_valueOnSlideStart","_emitInputEvent","_pointerMove","_pointerUp","_removeGlobalEvents","_emitChangeEvent","_windowBlur","parseInt","_blurHostElement","vertical","invert","percent","_isMinValue","thumbLabel","axis","scale","sign","_shouldInvertMouseCoords","transform","_getThumbGap","display","_getDirection","offset","tickSize","backgroundSize","rotate","shouldInvertAxis","_shouldInvertAxis","side","invertOffset","monitor","origin","stopMonitoring","_getSliderDimensions","_updateTickIntervalPercent","_increment","max","min","triggerEvent","document","isTouch","moveEventName","endEventName","numSteps","_clamp","step","pos","top","left","size","height","posComponent","y","x","exactValue","_calculateValue","closestValue","Math","round","_createChangeEvent","tickInterval","trackSize","pixelsPerStep","stepsPerTick","ceil","pixelsPerTick","percentage","_sliderWrapper","blur","v","_calculatePercentage","_roundToDecimal","pop","toFixed","MatSlider_Factory","MatSlider_Query","MatSlider_HostBindings","MatSlider_focus_HostBindingHandler","_onFocus","MatSlider_blur_HostBindingHandler","_onBlur","MatSlider_keydown_HostBindingHandler","_onKeydown","MatSlider_keyup_HostBindingHandler","_onKeyup","MatSlider_mouseenter_HostBindingHandler","MatSlider_selectstart_HostBindingHandler","color","MatSlider_Template","_getTrackBackgroundStyles","_getTrackFillStyles","_getTicksContainerStyles","_getTicksStyles","_getThumbContainerStyles","displayValue","String","point","touches","changedTouches","clientX","clientY","MatSliderModule","MatSliderModule_Factory"],"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","file":"default~forms-forms-module~ui-ui-module-es5.js","sourcesContent":["import { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, EventEmitter, Directive, ChangeDetectorRef, ElementRef, Inject, ViewChild, TemplateRef, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, forwardRef, ViewContainerRef, NgZone, Optional, Host, NgModule } from '@angular/core';\nimport { mixinDisableRipple, MAT_OPTION_PARENT_COMPONENT, MAT_OPTGROUP, MatOption, MatOptionSelectionChange, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { Subscription, Subject, defer, merge, of, fromEvent } from 'rxjs';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ESCAPE, hasModifierKey, ENTER, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { _getShadowRoot } from '@angular/cdk/platform';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatFormField, MAT_FORM_FIELD } from '@angular/material/form-field';\nimport { take, switchMap, filter, map, tap, delay } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/cdk/overlay';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/cdk/scrolling';\nimport * as ɵngcc5 from '@angular/material/form-field';\n\nconst _c0 = [\"panel\"];\nfunction MatAutocomplete_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.id)(\"ngClass\", ctx_r0._classList);\n} }\nconst _c1 = [\"*\"];\nlet _uniqueAutocompleteIdCounter = 0;\n/** Event object that is emitted when an autocomplete option is selected. */\nclass MatAutocompleteSelectedEvent {\n    constructor(\n    /** Reference to the autocomplete panel that emitted the event. */\n    source, \n    /** Option that was selected. */\n    option) {\n        this.source = source;\n        this.option = option;\n    }\n}\n// Boilerplate for applying mixins to MatAutocomplete.\n/** @docs-private */\nclass MatAutocompleteBase {\n}\nconst _MatAutocompleteMixinBase = mixinDisableRipple(MatAutocompleteBase);\n/** Injection token to be used to override the default options for `mat-autocomplete`. */\nconst MAT_AUTOCOMPLETE_DEFAULT_OPTIONS = new InjectionToken('mat-autocomplete-default-options', {\n    providedIn: 'root',\n    factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY() {\n    return { autoActiveFirstOption: false };\n}\n/** Base class with all of the `MatAutocomplete` functionality. */\nclass _MatAutocompleteBase extends _MatAutocompleteMixinBase {\n    constructor(_changeDetectorRef, _elementRef, defaults) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._activeOptionChanges = Subscription.EMPTY;\n        /** Whether the autocomplete panel should be visible, depending on option length. */\n        this.showPanel = false;\n        this._isOpen = false;\n        /** Function that maps an option's control value to its display value in the trigger. */\n        this.displayWith = null;\n        /** Event that is emitted whenever an option from the list is selected. */\n        this.optionSelected = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is opened. */\n        this.opened = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is closed. */\n        this.closed = new EventEmitter();\n        /** Emits whenever an option is activated using the keyboard. */\n        this.optionActivated = new EventEmitter();\n        this._classList = {};\n        /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\n        this.id = `mat-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n        this._autoActiveFirstOption = !!defaults.autoActiveFirstOption;\n    }\n    /** Whether the autocomplete panel is open. */\n    get isOpen() { return this._isOpen && this.showPanel; }\n    /**\n     * Whether the first option should be highlighted when the autocomplete panel is opened.\n     * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\n     */\n    get autoActiveFirstOption() { return this._autoActiveFirstOption; }\n    set autoActiveFirstOption(value) {\n        this._autoActiveFirstOption = coerceBooleanProperty(value);\n    }\n    /**\n     * Takes classes set on the host mat-autocomplete element and applies them to the panel\n     * inside the overlay container to allow for easy styling.\n     */\n    set classList(value) {\n        if (value && value.length) {\n            this._classList = value.split(' ').reduce((classList, className) => {\n                classList[className.trim()] = true;\n                return classList;\n            }, {});\n        }\n        else {\n            this._classList = {};\n        }\n        this._setVisibilityClasses(this._classList);\n        this._elementRef.nativeElement.className = '';\n    }\n    ngAfterContentInit() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n        this._activeOptionChanges = this._keyManager.change.subscribe(index => {\n            this.optionActivated.emit({ source: this, option: this.options.toArray()[index] || null });\n        });\n        // Set the initial visibility state.\n        this._setVisibility();\n    }\n    ngOnDestroy() {\n        this._activeOptionChanges.unsubscribe();\n    }\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     */\n    _setScrollTop(scrollTop) {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    }\n    /** Returns the panel's scrollTop. */\n    _getScrollTop() {\n        return this.panel ? this.panel.nativeElement.scrollTop : 0;\n    }\n    /** Panel should hide itself when the option list is empty. */\n    _setVisibility() {\n        this.showPanel = !!this.options.length;\n        this._setVisibilityClasses(this._classList);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits the `select` event. */\n    _emitSelectEvent(option) {\n        const event = new MatAutocompleteSelectedEvent(this, option);\n        this.optionSelected.emit(event);\n    }\n    /** Sets the autocomplete visibility classes on a classlist based on the panel is visible. */\n    _setVisibilityClasses(classList) {\n        classList[this._visibleClass] = this.showPanel;\n        classList[this._hiddenClass] = !this.showPanel;\n    }\n}\n_MatAutocompleteBase.ɵfac = function _MatAutocompleteBase_Factory(t) { return new (t || _MatAutocompleteBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS)); };\n_MatAutocompleteBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatAutocompleteBase, viewQuery: function _MatAutocompleteBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n    } }, inputs: { displayWith: \"displayWith\", autoActiveFirstOption: \"autoActiveFirstOption\", classList: [\"class\", \"classList\"], panelWidth: \"panelWidth\" }, outputs: { optionSelected: \"optionSelected\", opened: \"opened\", closed: \"closed\", optionActivated: \"optionActivated\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatAutocompleteBase.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS,] }] }\n];\n_MatAutocompleteBase.propDecorators = {\n    template: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    displayWith: [{ type: Input }],\n    autoActiveFirstOption: [{ type: Input }],\n    panelWidth: [{ type: Input }],\n    optionSelected: [{ type: Output }],\n    opened: [{ type: Output }],\n    closed: [{ type: Output }],\n    optionActivated: [{ type: Output }],\n    classList: [{ type: Input, args: ['class',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatAutocompleteBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n            }] }]; }, { displayWith: [{\n            type: Input\n        }], optionSelected: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], closed: [{\n            type: Output\n        }], optionActivated: [{\n            type: Output\n        }], autoActiveFirstOption: [{\n            type: Input\n        }], classList: [{\n            type: Input,\n            args: ['class']\n        }], template: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], panelWidth: [{\n            type: Input\n        }] }); })();\nclass MatAutocomplete extends _MatAutocompleteBase {\n    constructor() {\n        super(...arguments);\n        this._visibleClass = 'mat-autocomplete-visible';\n        this._hiddenClass = 'mat-autocomplete-hidden';\n    }\n}\nMatAutocomplete.ɵfac = function MatAutocomplete_Factory(t) { return ɵMatAutocomplete_BaseFactory(t || MatAutocomplete); };\nMatAutocomplete.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatAutocomplete, selectors: [[\"mat-autocomplete\"]], contentQueries: function MatAutocomplete_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    } }, hostAttrs: [1, \"mat-autocomplete\"], inputs: { disableRipple: \"disableRipple\" }, exportAs: [\"matAutocomplete\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"role\", \"listbox\", 1, \"mat-autocomplete-panel\", 3, \"id\", \"ngClass\"], [\"panel\", \"\"]], template: function MatAutocomplete_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatAutocomplete_ng_template_0_Template, 3, 2, \"ng-template\");\n    } }, directives: [ɵngcc1.NgClass], styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatAutocomplete.propDecorators = {\n    optionGroups: [{ type: ContentChildren, args: [MAT_OPTGROUP, { descendants: true },] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }]\n};\nconst ɵMatAutocomplete_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAutocomplete);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocomplete, [{\n        type: Component,\n        args: [{\n                selector: 'mat-autocomplete',\n                template: \"<ng-template>\\n  <div class=\\\"mat-autocomplete-panel\\\" role=\\\"listbox\\\" [id]=\\\"id\\\" [ngClass]=\\\"_classList\\\" #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'matAutocomplete',\n                inputs: ['disableRipple'],\n                host: {\n                    'class': 'mat-autocomplete'\n                },\n                providers: [\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n                ],\n                styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"]\n            }]\n    }], null, { optionGroups: [{\n            type: ContentChildren,\n            args: [MAT_OPTGROUP, { descendants: true }]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Base class containing all of the functionality for `MatAutocompleteOrigin`. */\nclass _MatAutocompleteOriginBase {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n}\n_MatAutocompleteOriginBase.ɵfac = function _MatAutocompleteOriginBase_Factory(t) { return new (t || _MatAutocompleteOriginBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\n_MatAutocompleteOriginBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatAutocompleteOriginBase });\n_MatAutocompleteOriginBase.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatAutocompleteOriginBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\nclass MatAutocompleteOrigin extends _MatAutocompleteOriginBase {\n}\nMatAutocompleteOrigin.ɵfac = function MatAutocompleteOrigin_Factory(t) { return ɵMatAutocompleteOrigin_BaseFactory(t || MatAutocompleteOrigin); };\nMatAutocompleteOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteOrigin, selectors: [[\"\", \"matAutocompleteOrigin\", \"\"]], exportAs: [\"matAutocompleteOrigin\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatAutocompleteOrigin_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAutocompleteOrigin);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[matAutocompleteOrigin]',\n                exportAs: 'matAutocompleteOrigin'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the scrollTop of the panel. Because we are not\n * actually focusing the active item, scroll must be handled manually.\n */\n/**\n * The height of each autocomplete option.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 11.0.0\n */\nconst AUTOCOMPLETE_OPTION_HEIGHT = 48;\n/**\n * The total height of the autocomplete panel.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 11.0.0\n */\nconst AUTOCOMPLETE_PANEL_HEIGHT = 256;\n/** Injection token that determines the scroll handling while the autocomplete panel is open. */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY = new InjectionToken('mat-autocomplete-scroll-strategy');\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatAutocompleteTrigger),\n    multi: true\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * @docs-private\n */\nfunction getMatAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' +\n        'Make sure that the id passed to the `matAutocomplete` is correct and that ' +\n        'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\n/** Base class with all of the `MatAutocompleteTrigger` functionality. */\nclass _MatAutocompleteTriggerBase {\n    constructor(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, scrollStrategy, _dir, _formField, _document, _viewportRuler) {\n        this._element = _element;\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._zone = _zone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._formField = _formField;\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        this._componentDestroyed = false;\n        this._autocompleteDisabled = false;\n        /** Whether or not the label state is being overridden. */\n        this._manuallyFloatingLabel = false;\n        /** Subscription to viewport size changes. */\n        this._viewportSubscription = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n         * closed autocomplete from being reopened if the user switches to another browser tab and then\n         * comes back.\n         */\n        this._canOpenOnNextFocus = true;\n        /** Stream of keyboard events that can close the panel. */\n        this._closeKeyEventStream = new Subject();\n        /**\n         * Event handler for when the window is blurred. Needs to be an\n         * arrow function in order to preserve the context.\n         */\n        this._windowBlurHandler = () => {\n            // If the user blurred the window while the autocomplete is focused, it means that it'll be\n            // refocused when they come back. In this case we want to skip the first focus event, if the\n            // pane was closed, in order to avoid reopening it unintentionally.\n            this._canOpenOnNextFocus =\n                this._document.activeElement !== this._element.nativeElement || this.panelOpen;\n        };\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when autocomplete has been touched` */\n        this._onTouched = () => { };\n        /**\n         * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n         * will render the panel underneath the trigger if there is enough space for it to fit in\n         * the viewport, otherwise the panel will be shown above it. If the position is set to\n         * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n         * whether it fits completely in the viewport.\n         */\n        this.position = 'auto';\n        /**\n         * `autocomplete` attribute to be set on the input element.\n         * @docs-private\n         */\n        this.autocompleteAttribute = 'off';\n        this._overlayAttached = false;\n        /** Stream of autocomplete option selections. */\n        this.optionSelections = defer(() => {\n            if (this.autocomplete && this.autocomplete.options) {\n                return merge(...this.autocomplete.options.map(option => option.onSelectionChange));\n            }\n            // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n            // Return a stream that we'll replace with the real one once everything is in place.\n            return this._zone.onStable\n                .pipe(take(1), switchMap(() => this.optionSelections));\n        });\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Whether the autocomplete is disabled. When disabled, the element will\n     * act as a regular input and the user won't be able to open the panel.\n     */\n    get autocompleteDisabled() { return this._autocompleteDisabled; }\n    set autocompleteDisabled(value) {\n        this._autocompleteDisabled = coerceBooleanProperty(value);\n    }\n    ngAfterViewInit() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            this._zone.runOutsideAngular(() => window.addEventListener('blur', this._windowBlurHandler));\n        }\n    }\n    ngOnChanges(changes) {\n        if (changes['position'] && this._positionStrategy) {\n            this._setStrategyPositions(this._positionStrategy);\n            if (this.panelOpen) {\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    ngOnDestroy() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('blur', this._windowBlurHandler);\n        }\n        this._viewportSubscription.unsubscribe();\n        this._componentDestroyed = true;\n        this._destroyPanel();\n        this._closeKeyEventStream.complete();\n    }\n    /** Whether or not the autocomplete panel is open. */\n    get panelOpen() {\n        return this._overlayAttached && this.autocomplete.showPanel;\n    }\n    /** Opens the autocomplete suggestion panel. */\n    openPanel() {\n        this._attachOverlay();\n        this._floatLabel();\n    }\n    /** Closes the autocomplete suggestion panel. */\n    closePanel() {\n        this._resetLabel();\n        if (!this._overlayAttached) {\n            return;\n        }\n        if (this.panelOpen) {\n            // Only emit if the panel was visible.\n            this.autocomplete.closed.emit();\n        }\n        this.autocomplete._isOpen = this._overlayAttached = false;\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n            this._closingActionsSubscription.unsubscribe();\n        }\n        // Note that in some cases this can end up being called after the component is destroyed.\n        // Add a check to ensure that we don't try to run change detection on a destroyed view.\n        if (!this._componentDestroyed) {\n            // We need to trigger change detection manually, because\n            // `fromEvent` doesn't seem to do it at the proper time.\n            // This ensures that the label is reset when the\n            // user clicks outside.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n     * within the viewport.\n     */\n    updatePosition() {\n        if (this._overlayAttached) {\n            this._overlayRef.updatePosition();\n        }\n    }\n    /**\n     * A stream of actions that should close the autocomplete panel, including\n     * when an option is selected, on blur, and when TAB is pressed.\n     */\n    get panelClosingActions() {\n        return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter(() => this._overlayAttached)), this._closeKeyEventStream, this._getOutsideClickStream(), this._overlayRef ?\n            this._overlayRef.detachments().pipe(filter(() => this._overlayAttached)) :\n            of()).pipe(\n        // Normalize the output so we return a consistent type.\n        map(event => event instanceof MatOptionSelectionChange ? event : null));\n    }\n    /** The currently active option, coerced to MatOption type. */\n    get activeOption() {\n        if (this.autocomplete && this.autocomplete._keyManager) {\n            return this.autocomplete._keyManager.activeItem;\n        }\n        return null;\n    }\n    /** Stream of clicks outside of the autocomplete panel. */\n    _getOutsideClickStream() {\n        return merge(fromEvent(this._document, 'click'), fromEvent(this._document, 'touchend'))\n            .pipe(filter(event => {\n            // If we're in the Shadow DOM, the event target will be the shadow root, so we have to\n            // fall back to check the first element in the path of the click event.\n            const clickTarget = (this._isInsideShadowRoot && event.composedPath ? event.composedPath()[0] :\n                event.target);\n            const formField = this._formField ? this._formField._elementRef.nativeElement : null;\n            const customOrigin = this.connectedTo ? this.connectedTo.elementRef.nativeElement : null;\n            return this._overlayAttached && clickTarget !== this._element.nativeElement &&\n                (!formField || !formField.contains(clickTarget)) &&\n                (!customOrigin || !customOrigin.contains(clickTarget)) &&\n                (!!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget));\n        }));\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        Promise.resolve(null).then(() => this._setTriggerValue(value));\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this._element.nativeElement.disabled = isDisabled;\n    }\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        // Prevent the default action on all escape key presses. This is here primarily to bring IE\n        // in line with other browsers. By default, pressing escape on IE will cause it to revert\n        // the input value to the one that it had on focus, however it won't dispatch any events\n        // which means that the model value will be out of sync with the view.\n        if (keyCode === ESCAPE && !hasModifierKey(event)) {\n            event.preventDefault();\n        }\n        if (this.activeOption && keyCode === ENTER && this.panelOpen) {\n            this.activeOption._selectViaInteraction();\n            this._resetActiveItem();\n            event.preventDefault();\n        }\n        else if (this.autocomplete) {\n            const prevActiveItem = this.autocomplete._keyManager.activeItem;\n            const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n            if (this.panelOpen || keyCode === TAB) {\n                this.autocomplete._keyManager.onKeydown(event);\n            }\n            else if (isArrowKey && this._canOpen()) {\n                this.openPanel();\n            }\n            if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n                this._scrollToOption(this.autocomplete._keyManager.activeItemIndex || 0);\n            }\n        }\n    }\n    _handleInput(event) {\n        let target = event.target;\n        let value = target.value;\n        // Based on `NumberValueAccessor` from forms.\n        if (target.type === 'number') {\n            value = value == '' ? null : parseFloat(value);\n        }\n        // If the input has a placeholder, IE will fire the `input` event on page load,\n        // focus and blur, in addition to when the user actually changed the value. To\n        // filter out all of the extra events, we save the value on focus and between\n        // `input` events, and we check whether it changed.\n        // See: https://connect.microsoft.com/IE/feedback/details/885747/\n        if (this._previousValue !== value) {\n            this._previousValue = value;\n            this._onChange(value);\n            if (this._canOpen() && this._document.activeElement === event.target) {\n                this.openPanel();\n            }\n        }\n    }\n    _handleFocus() {\n        if (!this._canOpenOnNextFocus) {\n            this._canOpenOnNextFocus = true;\n        }\n        else if (this._canOpen()) {\n            this._previousValue = this._element.nativeElement.value;\n            this._attachOverlay();\n            this._floatLabel(true);\n        }\n    }\n    /**\n     * In \"auto\" mode, the label will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the label until the panel can be closed.\n     * @param shouldAnimate Whether the label should be animated when it is floated.\n     */\n    _floatLabel(shouldAnimate = false) {\n        if (this._formField && this._formField.floatLabel === 'auto') {\n            if (shouldAnimate) {\n                this._formField._animateAndLockLabel();\n            }\n            else {\n                this._formField.floatLabel = 'always';\n            }\n            this._manuallyFloatingLabel = true;\n        }\n    }\n    /** If the label has been manually elevated, return it to its normal state. */\n    _resetLabel() {\n        if (this._manuallyFloatingLabel) {\n            this._formField.floatLabel = 'auto';\n            this._manuallyFloatingLabel = false;\n        }\n    }\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     */\n    _subscribeToClosingActions() {\n        const firstStable = this._zone.onStable.pipe(take(1));\n        const optionChanges = this.autocomplete.options.changes.pipe(tap(() => this._positionStrategy.reapplyLastPosition()), \n        // Defer emitting to the stream until the next tick, because changing\n        // bindings in here will cause \"changed after checked\" errors.\n        delay(0));\n        // When the zone is stable initially, and when the option list changes...\n        return merge(firstStable, optionChanges)\n            .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap(() => {\n            const wasOpen = this.panelOpen;\n            this._resetActiveItem();\n            this.autocomplete._setVisibility();\n            if (this.panelOpen) {\n                this._overlayRef.updatePosition();\n                // If the `panelOpen` state changed, we need to make sure to emit the `opened`\n                // event, because we may not have emitted it when the panel was attached. This\n                // can happen if the users opens the panel and there are no options, but the\n                // options come in slightly later or as a result of the value changing.\n                if (wasOpen !== this.panelOpen) {\n                    this.autocomplete.opened.emit();\n                }\n            }\n            return this.panelClosingActions;\n        }), \n        // when the first closing event occurs...\n        take(1))\n            // set the value, close the panel, and complete.\n            .subscribe(event => this._setValueAndClose(event));\n    }\n    /** Destroys the autocomplete suggestion panel. */\n    _destroyPanel() {\n        if (this._overlayRef) {\n            this.closePanel();\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    }\n    _setTriggerValue(value) {\n        const toDisplay = this.autocomplete && this.autocomplete.displayWith ?\n            this.autocomplete.displayWith(value) :\n            value;\n        // Simply falling back to an empty string if the display value is falsy does not work properly.\n        // The display value can also be the number zero and shouldn't fall back to an empty string.\n        const inputValue = toDisplay != null ? toDisplay : '';\n        // If it's used within a `MatFormField`, we should set it through the property so it can go\n        // through change detection.\n        if (this._formField) {\n            this._formField._control.value = inputValue;\n        }\n        else {\n            this._element.nativeElement.value = inputValue;\n        }\n        this._previousValue = inputValue;\n    }\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     */\n    _setValueAndClose(event) {\n        if (event && event.source) {\n            this._clearPreviousSelectedOption(event.source);\n            this._setTriggerValue(event.source.value);\n            this._onChange(event.source.value);\n            this._element.nativeElement.focus();\n            this.autocomplete._emitSelectEvent(event.source);\n        }\n        this.closePanel();\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     */\n    _clearPreviousSelectedOption(skip) {\n        this.autocomplete.options.forEach(option => {\n            if (option !== skip && option.selected) {\n                option.deselect();\n            }\n        });\n    }\n    _attachOverlay() {\n        if (!this.autocomplete && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatAutocompleteMissingPanelError();\n        }\n        // We want to resolve this once, as late as possible so that we can be\n        // sure that the element has been moved into its final place in the DOM.\n        if (this._isInsideShadowRoot == null) {\n            this._isInsideShadowRoot = !!_getShadowRoot(this._element.nativeElement);\n        }\n        let overlayRef = this._overlayRef;\n        if (!overlayRef) {\n            this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);\n            overlayRef = this._overlay.create(this._getOverlayConfig());\n            this._overlayRef = overlayRef;\n            // Use the `keydownEvents` in order to take advantage of\n            // the overlay event targeting provided by the CDK overlay.\n            overlayRef.keydownEvents().subscribe(event => {\n                // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n                // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n                if ((event.keyCode === ESCAPE && !hasModifierKey(event)) ||\n                    (event.keyCode === UP_ARROW && hasModifierKey(event, 'altKey'))) {\n                    this._resetActiveItem();\n                    this._closeKeyEventStream.next();\n                    // We need to stop propagation, otherwise the event will eventually\n                    // reach the input itself and cause the overlay to be reopened.\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n            });\n            this._viewportSubscription = this._viewportRuler.change().subscribe(() => {\n                if (this.panelOpen && overlayRef) {\n                    overlayRef.updateSize({ width: this._getPanelWidth() });\n                }\n            });\n        }\n        else {\n            // Update the trigger, panel width and direction, in case anything has changed.\n            this._positionStrategy.setOrigin(this._getConnectedElement());\n            overlayRef.updateSize({ width: this._getPanelWidth() });\n        }\n        if (overlayRef && !overlayRef.hasAttached()) {\n            overlayRef.attach(this._portal);\n            this._closingActionsSubscription = this._subscribeToClosingActions();\n        }\n        const wasOpen = this.panelOpen;\n        this.autocomplete._setVisibility();\n        this.autocomplete._isOpen = this._overlayAttached = true;\n        // We need to do an extra `panelOpen` check in here, because the\n        // autocomplete won't be shown if there are no options.\n        if (this.panelOpen && wasOpen !== this.panelOpen) {\n            this.autocomplete.opened.emit();\n        }\n    }\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._getOverlayPosition(),\n            scrollStrategy: this._scrollStrategy(),\n            width: this._getPanelWidth(),\n            direction: this._dir\n        });\n    }\n    _getOverlayPosition() {\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._getConnectedElement())\n            .withFlexibleDimensions(false)\n            .withPush(false);\n        this._setStrategyPositions(strategy);\n        this._positionStrategy = strategy;\n        return strategy;\n    }\n    /** Sets the positions on a position strategy based on the directive's input state. */\n    _setStrategyPositions(positionStrategy) {\n        // Note that we provide horizontal fallback positions, even though by default the dropdown\n        // width matches the input, because consumers can override the width. See #18854.\n        const belowPositions = [\n            { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n            { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' }\n        ];\n        // The overlay edge connected to the trigger should have squared corners, while\n        // the opposite end has rounded corners. We apply a CSS class to swap the\n        // border-radius based on the overlay position.\n        const panelClass = this._aboveClass;\n        const abovePositions = [\n            { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom', panelClass },\n            { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom', panelClass }\n        ];\n        let positions;\n        if (this.position === 'above') {\n            positions = abovePositions;\n        }\n        else if (this.position === 'below') {\n            positions = belowPositions;\n        }\n        else {\n            positions = [...belowPositions, ...abovePositions];\n        }\n        positionStrategy.withPositions(positions);\n    }\n    _getConnectedElement() {\n        if (this.connectedTo) {\n            return this.connectedTo.elementRef;\n        }\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n    }\n    _getPanelWidth() {\n        return this.autocomplete.panelWidth || this._getHostWidth();\n    }\n    /** Returns the width of the input element, so the panel width can match it. */\n    _getHostWidth() {\n        return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    /**\n     * Resets the active item to -1 so arrow events will activate the\n     * correct options, or to 0 if the consumer opted into it.\n     */\n    _resetActiveItem() {\n        this.autocomplete._keyManager.setActiveItem(this.autocomplete.autoActiveFirstOption ? 0 : -1);\n    }\n    /** Determines whether the panel can be opened. */\n    _canOpen() {\n        const element = this._element.nativeElement;\n        return !element.readOnly && !element.disabled && !this._autocompleteDisabled;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        var _a;\n        return ((_a = this._document) === null || _a === void 0 ? void 0 : _a.defaultView) || window;\n    }\n    /** Scrolls to a particular option in the list. */\n    _scrollToOption(index) {\n        // Given that we are not actually focusing active options, we must manually adjust scroll\n        // to reveal options below the fold. First, we find the offset of the option from the top\n        // of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n        // the panel height + the option height, so the active option will be just visible at the\n        // bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n        // will become the offset. If that offset is visible within the panel already, the scrollTop is\n        // not adjusted.\n        const autocomplete = this.autocomplete;\n        const labelCount = _countGroupLabelsBeforeOption(index, autocomplete.options, autocomplete.optionGroups);\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            autocomplete._setScrollTop(0);\n        }\n        else {\n            const option = autocomplete.options.toArray()[index];\n            if (option) {\n                const element = option._getHostElement();\n                const newScrollPosition = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, autocomplete._getScrollTop(), autocomplete.panel.nativeElement.offsetHeight);\n                autocomplete._setScrollTop(newScrollPosition);\n            }\n        }\n    }\n}\n_MatAutocompleteTriggerBase.ɵfac = function _MatAutocompleteTriggerBase_Factory(t) { return new (t || _MatAutocompleteTriggerBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 9), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ViewportRuler)); };\n_MatAutocompleteTriggerBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatAutocompleteTriggerBase, inputs: { position: [\"matAutocompletePosition\", \"position\"], autocompleteAttribute: [\"autocomplete\", \"autocompleteAttribute\"], autocompleteDisabled: [\"matAutocompleteDisabled\", \"autocompleteDisabled\"], autocomplete: [\"matAutocomplete\", \"autocomplete\"], connectedTo: [\"matAutocompleteConnectedTo\", \"connectedTo\"] }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n_MatAutocompleteTriggerBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Overlay },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }, { type: Host }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ViewportRuler }\n];\n_MatAutocompleteTriggerBase.propDecorators = {\n    autocomplete: [{ type: Input, args: ['matAutocomplete',] }],\n    position: [{ type: Input, args: ['matAutocompletePosition',] }],\n    connectedTo: [{ type: Input, args: ['matAutocompleteConnectedTo',] }],\n    autocompleteAttribute: [{ type: Input, args: ['autocomplete',] }],\n    autocompleteDisabled: [{ type: Input, args: ['matAutocompleteDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatAutocompleteTriggerBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.Overlay }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }, {\n                type: Host\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc4.ViewportRuler }]; }, { position: [{\n            type: Input,\n            args: ['matAutocompletePosition']\n        }], autocompleteAttribute: [{\n            type: Input,\n            args: ['autocomplete']\n        }], autocompleteDisabled: [{\n            type: Input,\n            args: ['matAutocompleteDisabled']\n        }], autocomplete: [{\n            type: Input,\n            args: ['matAutocomplete']\n        }], connectedTo: [{\n            type: Input,\n            args: ['matAutocompleteConnectedTo']\n        }] }); })();\nclass MatAutocompleteTrigger extends _MatAutocompleteTriggerBase {\n    constructor() {\n        super(...arguments);\n        this._aboveClass = 'mat-autocomplete-panel-above';\n    }\n}\nMatAutocompleteTrigger.ɵfac = function MatAutocompleteTrigger_Factory(t) { return ɵMatAutocompleteTrigger_BaseFactory(t || MatAutocompleteTrigger); };\nMatAutocompleteTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteTrigger, selectors: [[\"input\", \"matAutocomplete\", \"\"], [\"textarea\", \"matAutocomplete\", \"\"]], hostAttrs: [1, \"mat-autocomplete-trigger\"], hostVars: 7, hostBindings: function MatAutocompleteTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focusin\", function MatAutocompleteTrigger_focusin_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatAutocompleteTrigger_blur_HostBindingHandler() { return ctx._onTouched(); })(\"input\", function MatAutocompleteTrigger_input_HostBindingHandler($event) { return ctx._handleInput($event); })(\"keydown\", function MatAutocompleteTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"autocomplete\", ctx.autocompleteAttribute)(\"role\", ctx.autocompleteDisabled ? null : \"combobox\")(\"aria-autocomplete\", ctx.autocompleteDisabled ? null : \"list\")(\"aria-activedescendant\", ctx.panelOpen && ctx.activeOption ? ctx.activeOption.id : null)(\"aria-expanded\", ctx.autocompleteDisabled ? null : ctx.panelOpen.toString())(\"aria-owns\", ctx.autocompleteDisabled || !ctx.panelOpen ? null : ctx.autocomplete == null ? null : ctx.autocomplete.id)(\"aria-haspopup\", !ctx.autocompleteDisabled);\n    } }, exportAs: [\"matAutocompleteTrigger\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_AUTOCOMPLETE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatAutocompleteTrigger_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAutocompleteTrigger);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n                host: {\n                    'class': 'mat-autocomplete-trigger',\n                    '[attr.autocomplete]': 'autocompleteAttribute',\n                    '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n                    '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n                    '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n                    '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n                    '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n                    '[attr.aria-haspopup]': '!autocompleteDisabled',\n                    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n                    // a little earlier. This avoids issues where IE delays the focusing of the input.\n                    '(focusin)': '_handleFocus()',\n                    '(blur)': '_onTouched()',\n                    '(input)': '_handleInput($event)',\n                    '(keydown)': '_handleKeydown($event)'\n                },\n                exportAs: 'matAutocompleteTrigger',\n                providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatAutocompleteModule {\n}\nMatAutocompleteModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatAutocompleteModule });\nMatAutocompleteModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatAutocompleteModule_Factory(t) { return new (t || MatAutocompleteModule)(); }, providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n            CommonModule\n        ], CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatAutocompleteModule, { declarations: function () { return [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin]; }, imports: function () { return [OverlayModule,\n        MatOptionModule,\n        MatCommonModule,\n        CommonModule]; }, exports: function () { return [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin, CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                    CommonModule\n                ],\n                exports: [\n                    MatAutocomplete,\n                    MatAutocompleteTrigger,\n                    MatAutocompleteOrigin,\n                    CdkScrollableModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n                providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTOCOMPLETE_OPTION_HEIGHT, AUTOCOMPLETE_PANEL_HEIGHT, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocomplete, MatAutocompleteModule, MatAutocompleteOrigin, MatAutocompleteSelectedEvent, MatAutocompleteTrigger, _MatAutocompleteBase, _MatAutocompleteOriginBase, _MatAutocompleteTriggerBase, getMatAutocompleteMissingPanelError };\n\n//# sourceMappingURL=autocomplete.js.map","import { DOCUMENT, CommonModule } from '@angular/common';\nimport { forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Attribute, NgZone, Inject, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, DOWN_ARROW, RIGHT_ARROW, UP_ARROW, LEFT_ARROW, HOME, END, PAGE_DOWN, PAGE_UP } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { Subscription } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/common';\n\nconst _c0 = [\"sliderWrapper\"];\nconst activeEventOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\nconst MIN_AUTO_TICK_SEPARATION = 30;\n/** The thumb gap size for a disabled slider. */\nconst DISABLED_THUMB_GAP = 7;\n/** The thumb gap size for a non-active slider at its minimum value. */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/** The thumb gap size for an active slider at its minimum value. */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * @docs-private\n */\nconst MAT_SLIDER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlider),\n    multi: true\n};\n/** A simple change event emitted by the MatSlider component. */\nclass MatSliderChange {\n}\n// Boilerplate for applying mixins to MatSlider.\n/** @docs-private */\nclass MatSliderBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatSliderMixinBase = mixinTabIndex(mixinColor(mixinDisabled(MatSliderBase), 'accent'));\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider extends _MatSliderMixinBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, _dir, tabIndex, _ngZone, _document, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        this._invert = false;\n        this._max = 100;\n        this._min = 0;\n        this._step = 1;\n        this._thumbLabel = false;\n        this._tickInterval = 0;\n        this._value = null;\n        this._vertical = false;\n        /** Event emitted when the slider value has changed. */\n        this.change = new EventEmitter();\n        /** Event emitted when the slider thumb moves. */\n        this.input = new EventEmitter();\n        /**\n         * Emits when the raw value of the slider changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this.onTouched = () => { };\n        this._percent = 0;\n        /**\n         * Whether or not the thumb is sliding.\n         * Used to determine if there should be a transition for the thumb and fill track.\n         */\n        this._isSliding = false;\n        /**\n         * Whether or not the slider is active (clicked or sliding).\n         * Used to shrink and grow the thumb as according to the Material Design spec.\n         */\n        this._isActive = false;\n        /** The size of a tick interval as a percentage of the size of the track. */\n        this._tickIntervalPercent = 0;\n        /** The dimensions of the slider. */\n        this._sliderDimensions = null;\n        this._controlValueAccessorChangeFn = () => { };\n        /** Subscription to the Directionality change EventEmitter. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Called when the user has put their pointer down on the slider. */\n        this._pointerDown = (event) => {\n            // Don't do anything if the slider is disabled or the\n            // user is using anything other than the main mouse button.\n            if (this.disabled || this._isSliding || (!isTouchEvent(event) && event.button !== 0)) {\n                return;\n            }\n            this._ngZone.run(() => {\n                const oldValue = this.value;\n                const pointerPosition = getPointerPositionOnPage(event);\n                this._isSliding = true;\n                this._lastPointerEvent = event;\n                event.preventDefault();\n                this._focusHostElement();\n                this._onMouseenter(); // Simulate mouseenter in case this is a mobile device.\n                this._bindGlobalEvents(event);\n                this._focusHostElement();\n                this._updateValueFromPosition(pointerPosition);\n                this._valueOnSlideStart = oldValue;\n                // Emit a change and input event if the value changed.\n                if (oldValue != this.value) {\n                    this._emitInputEvent();\n                }\n            });\n        };\n        /**\n         * Called when the user has moved their pointer after\n         * starting to drag. Bound on the document level.\n         */\n        this._pointerMove = (event) => {\n            if (this._isSliding) {\n                // Prevent the slide from selecting anything else.\n                event.preventDefault();\n                const oldValue = this.value;\n                this._lastPointerEvent = event;\n                this._updateValueFromPosition(getPointerPositionOnPage(event));\n                // Native range elements always emit `input` events when the value changed while sliding.\n                if (oldValue != this.value) {\n                    this._emitInputEvent();\n                }\n            }\n        };\n        /** Called when the user has lifted their pointer. Bound on the document level. */\n        this._pointerUp = (event) => {\n            if (this._isSliding) {\n                event.preventDefault();\n                this._removeGlobalEvents();\n                this._isSliding = false;\n                if (this._valueOnSlideStart != this.value && !this.disabled) {\n                    this._emitChangeEvent();\n                }\n                this._valueOnSlideStart = this._lastPointerEvent = null;\n            }\n        };\n        /** Called when the window has lost focus. */\n        this._windowBlur = () => {\n            // If the window is blurred while dragging we need to stop dragging because the\n            // browser won't dispatch the `mouseup` and `touchend` events anymore.\n            if (this._lastPointerEvent) {\n                this._pointerUp(this._lastPointerEvent);\n            }\n        };\n        this._document = _document;\n        this.tabIndex = parseInt(tabIndex) || 0;\n        _ngZone.runOutsideAngular(() => {\n            const element = elementRef.nativeElement;\n            element.addEventListener('mousedown', this._pointerDown, activeEventOptions);\n            element.addEventListener('touchstart', this._pointerDown, activeEventOptions);\n        });\n    }\n    /** Whether the slider is inverted. */\n    get invert() { return this._invert; }\n    set invert(value) {\n        this._invert = coerceBooleanProperty(value);\n    }\n    /** The maximum value that the slider can have. */\n    get max() { return this._max; }\n    set max(v) {\n        this._max = coerceNumberProperty(v, this._max);\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The minimum value that the slider can have. */\n    get min() { return this._min; }\n    set min(v) {\n        this._min = coerceNumberProperty(v, this._min);\n        // If the value wasn't explicitly set by the user, set it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The values at which the thumb will snap. */\n    get step() { return this._step; }\n    set step(v) {\n        this._step = coerceNumberProperty(v, this._step);\n        if (this._step % 1 !== 0) {\n            this._roundToDecimal = this._step.toString().split('.').pop().length;\n        }\n        // Since this could modify the label, we need to notify the change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether or not to show the thumb label. */\n    get thumbLabel() { return this._thumbLabel; }\n    set thumbLabel(value) { this._thumbLabel = coerceBooleanProperty(value); }\n    /**\n     * How often to show ticks. Relative to the step so that a tick always appears on a step.\n     * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n     */\n    get tickInterval() { return this._tickInterval; }\n    set tickInterval(value) {\n        if (value === 'auto') {\n            this._tickInterval = 'auto';\n        }\n        else if (typeof value === 'number' || typeof value === 'string') {\n            this._tickInterval = coerceNumberProperty(value, this._tickInterval);\n        }\n        else {\n            this._tickInterval = 0;\n        }\n    }\n    /** Value of the slider. */\n    get value() {\n        // If the value needs to be read and it is still uninitialized, initialize it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        return this._value;\n    }\n    set value(v) {\n        if (v !== this._value) {\n            let value = coerceNumberProperty(v);\n            // While incrementing by a decimal we can end up with values like 33.300000000000004.\n            // Truncate it to ensure that it matches the label and to make it easier to work with.\n            if (this._roundToDecimal) {\n                value = parseFloat(value.toFixed(this._roundToDecimal));\n            }\n            this._value = value;\n            this._percent = this._calculatePercentage(this._value);\n            // Since this also modifies the percentage, we need to let the change detection know.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the slider is vertical. */\n    get vertical() { return this._vertical; }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** The value to be used for display purposes. */\n    get displayValue() {\n        if (this.displayWith) {\n            // Value is never null but since setters and getters cannot have\n            // different types, the value getter is also typed to return null.\n            return this.displayWith(this.value);\n        }\n        // Note that this could be improved further by rounding something like 0.999 to 1 or\n        // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n        // every change detection cycle.\n        if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n            return this.value.toFixed(this._roundToDecimal);\n        }\n        return this.value || 0;\n    }\n    /** set focus to the host element */\n    focus(options) {\n        this._focusHostElement(options);\n    }\n    /** blur the host element */\n    blur() {\n        this._blurHostElement();\n    }\n    /** The percentage of the slider that coincides with the value. */\n    get percent() { return this._clamp(this._percent); }\n    /**\n     * Whether the axis of the slider is inverted.\n     * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n     */\n    _shouldInvertAxis() {\n        // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n        // top. However from a y-axis standpoint this is inverted.\n        return this.vertical ? !this.invert : this.invert;\n    }\n    /** Whether the slider is at its minimum value. */\n    _isMinValue() {\n        return this.percent === 0;\n    }\n    /**\n     * The amount of space to leave between the slider thumb and the track fill & track background\n     * elements.\n     */\n    _getThumbGap() {\n        if (this.disabled) {\n            return DISABLED_THUMB_GAP;\n        }\n        if (this._isMinValue() && !this.thumbLabel) {\n            return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n        }\n        return 0;\n    }\n    /** CSS styles for the track background element. */\n    _getTrackBackgroundStyles() {\n        const axis = this.vertical ? 'Y' : 'X';\n        const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n        const sign = this._shouldInvertMouseCoords() ? '-' : '';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`\n        };\n    }\n    /** CSS styles for the track fill element. */\n    _getTrackFillStyles() {\n        const percent = this.percent;\n        const axis = this.vertical ? 'Y' : 'X';\n        const scale = this.vertical ? `1, ${percent}, 1` : `${percent}, 1, 1`;\n        const sign = this._shouldInvertMouseCoords() ? '' : '-';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`,\n            // iOS Safari has a bug where it won't re-render elements which start of as `scale(0)` until\n            // something forces a style recalculation on it. Since we'll end up with `scale(0)` when\n            // the value of the slider is 0, we can easily get into this situation. We force a\n            // recalculation by changing the element's `display` when it goes from 0 to any other value.\n            display: percent === 0 ? 'none' : ''\n        };\n    }\n    /** CSS styles for the ticks container element. */\n    _getTicksContainerStyles() {\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the ticks container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n        let offset = this._tickIntervalPercent / 2 * 100;\n        return {\n            'transform': `translate${axis}(${sign}${offset}%)`\n        };\n    }\n    /** CSS styles for the ticks element. */\n    _getTicksStyles() {\n        let tickSize = this._tickIntervalPercent * 100;\n        let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n        let axis = this.vertical ? 'Y' : 'X';\n        // Depending on the direction we pushed the ticks container, push the ticks the opposite\n        // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n        // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n        let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n        let styles = {\n            'backgroundSize': backgroundSize,\n            // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n            'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\n        };\n        if (this._isMinValue() && this._getThumbGap()) {\n            const shouldInvertAxis = this._shouldInvertAxis();\n            let side;\n            if (this.vertical) {\n                side = shouldInvertAxis ? 'Bottom' : 'Top';\n            }\n            else {\n                side = shouldInvertAxis ? 'Right' : 'Left';\n            }\n            styles[`padding${side}`] = `${this._getThumbGap()}px`;\n        }\n        return styles;\n    }\n    _getThumbContainerStyles() {\n        const shouldInvertAxis = this._shouldInvertAxis();\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the thumb container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        let invertOffset = (this._getDirection() == 'rtl' && !this.vertical) ? !shouldInvertAxis : shouldInvertAxis;\n        let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n        return {\n            'transform': `translate${axis}(-${offset}%)`\n        };\n    }\n    /**\n     * Whether mouse events should be converted to a slider position by calculating their distance\n     * from the right or bottom edge of the slider as opposed to the top or left.\n     */\n    _shouldInvertMouseCoords() {\n        const shouldInvertAxis = this._shouldInvertAxis();\n        return (this._getDirection() == 'rtl' && !this.vertical) ? !shouldInvertAxis : shouldInvertAxis;\n    }\n    /** The language direction for this slider element. */\n    _getDirection() {\n        return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\n    }\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((origin) => {\n            this._isActive = !!origin && origin !== 'keyboard';\n            this._changeDetectorRef.detectChanges();\n        });\n        if (this._dir) {\n            this._dirChangeSubscription = this._dir.change.subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    ngOnDestroy() {\n        const element = this._elementRef.nativeElement;\n        element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);\n        element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);\n        this._lastPointerEvent = null;\n        this._removeGlobalEvents();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._dirChangeSubscription.unsubscribe();\n    }\n    _onMouseenter() {\n        if (this.disabled) {\n            return;\n        }\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    _onFocus() {\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    _onBlur() {\n        this.onTouched();\n    }\n    _onKeydown(event) {\n        if (this.disabled || hasModifierKey(event)) {\n            return;\n        }\n        const oldValue = this.value;\n        switch (event.keyCode) {\n            case PAGE_UP:\n                this._increment(10);\n                break;\n            case PAGE_DOWN:\n                this._increment(-10);\n                break;\n            case END:\n                this.value = this.max;\n                break;\n            case HOME:\n                this.value = this.min;\n                break;\n            case LEFT_ARROW:\n                // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n                // inverted slider the thumb moves in that direction. However for a blind user, nothing\n                // about the slider indicates that it is inverted. They will expect left to be decrement,\n                // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n                // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n                // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n                // sighted users, therefore we do not swap the meaning.\n                this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n                break;\n            case UP_ARROW:\n                this._increment(1);\n                break;\n            case RIGHT_ARROW:\n                // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n                this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n                break;\n            case DOWN_ARROW:\n                this._increment(-1);\n                break;\n            default:\n                // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n                // it.\n                return;\n        }\n        if (oldValue != this.value) {\n            this._emitInputEvent();\n            this._emitChangeEvent();\n        }\n        this._isSliding = true;\n        event.preventDefault();\n    }\n    _onKeyup() {\n        this._isSliding = false;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /**\n     * Binds our global move and end events. They're bound at the document level and only while\n     * dragging so that the user doesn't have to keep their pointer exactly over the slider\n     * as they're swiping across the screen.\n     */\n    _bindGlobalEvents(triggerEvent) {\n        // Note that we bind the events to the `document`, because it allows us to capture\n        // drag cancel events where the user's pointer is outside the browser window.\n        const document = this._document;\n        const isTouch = isTouchEvent(triggerEvent);\n        const moveEventName = isTouch ? 'touchmove' : 'mousemove';\n        const endEventName = isTouch ? 'touchend' : 'mouseup';\n        document.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n        document.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n        if (isTouch) {\n            document.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        }\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.addEventListener('blur', this._windowBlur);\n        }\n    }\n    /** Removes any global event listeners that we may have added. */\n    _removeGlobalEvents() {\n        const document = this._document;\n        document.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n        document.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n        document.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n        document.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n        document.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.removeEventListener('blur', this._windowBlur);\n        }\n    }\n    /** Increments the slider by the given number of steps (negative number decrements). */\n    _increment(numSteps) {\n        this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n    }\n    /** Calculate the new value from the new physical location. The value will always be snapped. */\n    _updateValueFromPosition(pos) {\n        if (!this._sliderDimensions) {\n            return;\n        }\n        let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n        let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n        let posComponent = this.vertical ? pos.y : pos.x;\n        // The exact value is calculated from the event and used to find the closest snap value.\n        let percent = this._clamp((posComponent - offset) / size);\n        if (this._shouldInvertMouseCoords()) {\n            percent = 1 - percent;\n        }\n        // Since the steps may not divide cleanly into the max value, if the user\n        // slid to 0 or 100 percent, we jump to the min/max value. This approach\n        // is slightly more intuitive than using `Math.ceil` below, because it\n        // follows the user's pointer closer.\n        if (percent === 0) {\n            this.value = this.min;\n        }\n        else if (percent === 1) {\n            this.value = this.max;\n        }\n        else {\n            const exactValue = this._calculateValue(percent);\n            // This calculation finds the closest step by finding the closest\n            // whole number divisible by the step relative to the min.\n            const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n            // The value needs to snap to the min and max.\n            this.value = this._clamp(closestValue, this.min, this.max);\n        }\n    }\n    /** Emits a change event if the current value is different from the last emitted value. */\n    _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.value);\n        this.valueChange.emit(this.value);\n        this.change.emit(this._createChangeEvent());\n    }\n    /** Emits an input event when the current value is different from the last emitted value. */\n    _emitInputEvent() {\n        this.input.emit(this._createChangeEvent());\n    }\n    /** Updates the amount of space between ticks as a percentage of the width of the slider. */\n    _updateTickIntervalPercent() {\n        if (!this.tickInterval || !this._sliderDimensions) {\n            return;\n        }\n        if (this.tickInterval == 'auto') {\n            let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n            let pixelsPerStep = trackSize * this.step / (this.max - this.min);\n            let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n            let pixelsPerTick = stepsPerTick * this.step;\n            this._tickIntervalPercent = pixelsPerTick / trackSize;\n        }\n        else {\n            this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n        }\n    }\n    /** Creates a slider change object from the specified value. */\n    _createChangeEvent(value = this.value) {\n        let event = new MatSliderChange();\n        event.source = this;\n        event.value = value;\n        return event;\n    }\n    /** Calculates the percentage of the slider that a value is. */\n    _calculatePercentage(value) {\n        return ((value || 0) - this.min) / (this.max - this.min);\n    }\n    /** Calculates the value a percentage of the slider corresponds to. */\n    _calculateValue(percentage) {\n        return this.min + percentage * (this.max - this.min);\n    }\n    /** Return a number between two numbers. */\n    _clamp(value, min = 0, max = 1) {\n        return Math.max(min, Math.min(value, max));\n    }\n    /**\n     * Get the bounding client rect of the slider track element.\n     * The track is used rather than the native element to ignore the extra space that the thumb can\n     * take up.\n     */\n    _getSliderDimensions() {\n        return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n    }\n    /**\n     * Focuses the native element.\n     * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n     */\n    _focusHostElement(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Blurs the native element. */\n    _blurHostElement() {\n        this._elementRef.nativeElement.blur();\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Registers a callback to be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the component is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets whether the component should be disabled.\n     * Implemented as part of ControlValueAccessor.\n     * @param isDisabled\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n}\nMatSlider.ɵfac = function MatSlider_Factory(t) { return new (t || MatSlider)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlider.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSlider, selectors: [[\"mat-slider\"]], viewQuery: function MatSlider_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._sliderWrapper = _t.first);\n    } }, hostAttrs: [\"role\", \"slider\", 1, \"mat-slider\", \"mat-focus-indicator\"], hostVars: 28, hostBindings: function MatSlider_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSlider_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSlider_blur_HostBindingHandler() { return ctx._onBlur(); })(\"keydown\", function MatSlider_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); })(\"keyup\", function MatSlider_keyup_HostBindingHandler() { return ctx._onKeyup(); })(\"mouseenter\", function MatSlider_mouseenter_HostBindingHandler() { return ctx._onMouseenter(); })(\"selectstart\", function MatSlider_selectstart_HostBindingHandler($event) { return $event.preventDefault(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-valuemax\", ctx.max)(\"aria-valuemin\", ctx.min)(\"aria-valuenow\", ctx.value)(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-slider-disabled\", ctx.disabled)(\"mat-slider-has-ticks\", ctx.tickInterval)(\"mat-slider-horizontal\", !ctx.vertical)(\"mat-slider-axis-inverted\", ctx._shouldInvertAxis())(\"mat-slider-invert-mouse-coords\", ctx._shouldInvertMouseCoords())(\"mat-slider-sliding\", ctx._isSliding)(\"mat-slider-thumb-label-showing\", ctx.thumbLabel)(\"mat-slider-vertical\", ctx.vertical)(\"mat-slider-min-value\", ctx._isMinValue())(\"mat-slider-hide-last-tick\", ctx.disabled || ctx._isMinValue() && ctx._getThumbGap() && ctx._shouldInvertAxis())(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", color: \"color\", tabIndex: \"tabIndex\", invert: \"invert\", max: \"max\", min: \"min\", value: \"value\", step: \"step\", thumbLabel: \"thumbLabel\", tickInterval: \"tickInterval\", vertical: \"vertical\", displayWith: \"displayWith\" }, outputs: { change: \"change\", input: \"input\", valueChange: \"valueChange\" }, exportAs: [\"matSlider\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDER_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 13, vars: 6, consts: [[1, \"mat-slider-wrapper\"], [\"sliderWrapper\", \"\"], [1, \"mat-slider-track-wrapper\"], [1, \"mat-slider-track-background\", 3, \"ngStyle\"], [1, \"mat-slider-track-fill\", 3, \"ngStyle\"], [1, \"mat-slider-ticks-container\", 3, \"ngStyle\"], [1, \"mat-slider-ticks\", 3, \"ngStyle\"], [1, \"mat-slider-thumb-container\", 3, \"ngStyle\"], [1, \"mat-slider-focus-ring\"], [1, \"mat-slider-thumb\"], [1, \"mat-slider-thumb-label\"], [1, \"mat-slider-thumb-label-text\"]], template: function MatSlider_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3);\n        ɵngcc0.ɵɵelement(4, \"div\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelement(6, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelement(9, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11);\n        ɵngcc0.ɵɵtext(12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTrackBackgroundStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTrackFillStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTicksContainerStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTicksStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getThumbContainerStyles());\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵtextInterpolate(ctx.displayValue);\n    } }, directives: [ɵngcc3.NgStyle], styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSlider.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlider.propDecorators = {\n    invert: [{ type: Input }],\n    max: [{ type: Input }],\n    min: [{ type: Input }],\n    step: [{ type: Input }],\n    thumbLabel: [{ type: Input }],\n    tickInterval: [{ type: Input }],\n    value: [{ type: Input }],\n    displayWith: [{ type: Input }],\n    vertical: [{ type: Input }],\n    change: [{ type: Output }],\n    input: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    _sliderWrapper: [{ type: ViewChild, args: ['sliderWrapper',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlider, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slider',\n                exportAs: 'matSlider',\n                providers: [MAT_SLIDER_VALUE_ACCESSOR],\n                host: {\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)',\n                    '(keyup)': '_onKeyup()',\n                    '(mouseenter)': '_onMouseenter()',\n                    // On Safari starting to slide temporarily triggers text selection mode which\n                    // show the wrong cursor. We prevent it by stopping the `selectstart` event.\n                    '(selectstart)': '$event.preventDefault()',\n                    'class': 'mat-slider mat-focus-indicator',\n                    'role': 'slider',\n                    '[tabIndex]': 'tabIndex',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.aria-valuemax]': 'max',\n                    '[attr.aria-valuemin]': 'min',\n                    '[attr.aria-valuenow]': 'value',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-slider-disabled]': 'disabled',\n                    '[class.mat-slider-has-ticks]': 'tickInterval',\n                    '[class.mat-slider-horizontal]': '!vertical',\n                    '[class.mat-slider-axis-inverted]': '_shouldInvertAxis()',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if mouse coordinates need to be inverted.\n                    '[class.mat-slider-invert-mouse-coords]': '_shouldInvertMouseCoords()',\n                    '[class.mat-slider-sliding]': '_isSliding',\n                    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n                    '[class.mat-slider-vertical]': 'vertical',\n                    '[class.mat-slider-min-value]': '_isMinValue()',\n                    '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue() && _getThumbGap() && _shouldInvertAxis()',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper>\\n  <div class=\\\"mat-slider-track-wrapper\\\">\\n    <div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_getTrackBackgroundStyles()\\\"></div>\\n    <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_getTrackFillStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_getTicksContainerStyles()\\\">\\n    <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_getTicksStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_getThumbContainerStyles()\\\">\\n    <div class=\\\"mat-slider-focus-ring\\\"></div>\\n    <div class=\\\"mat-slider-thumb\\\"></div>\\n    <div class=\\\"mat-slider-thumb-label\\\">\\n      <span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['disabled', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { change: [{\n            type: Output\n        }], input: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], invert: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], step: [{\n            type: Input\n        }], thumbLabel: [{\n            type: Input\n        }], tickInterval: [{\n            type: Input\n        }], vertical: [{\n            type: Input\n        }], displayWith: [{\n            type: Input\n        }], _sliderWrapper: [{\n            type: ViewChild,\n            args: ['sliderWrapper']\n        }] }); })();\n/** Returns whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/** Gets the coordinates of a touch or mouse event relative to the viewport. */\nfunction getPointerPositionOnPage(event) {\n    // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n    const point = isTouchEvent(event) ? (event.touches[0] || event.changedTouches[0]) : event;\n    return { x: point.clientX, y: point.clientY };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSliderModule {\n}\nMatSliderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSliderModule });\nMatSliderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSliderModule_Factory(t) { return new (t || MatSliderModule)(); }, imports: [[CommonModule, MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSliderModule, { declarations: function () { return [MatSlider]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatSlider, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSliderModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatSlider, MatCommonModule],\n                declarations: [MatSlider]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDER_VALUE_ACCESSOR, MatSlider, MatSliderChange, MatSliderModule };\n\n//# sourceMappingURL=slider.js.map"]}