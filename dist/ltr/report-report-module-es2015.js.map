{"version":3,"sources":["./src/app/report/dialogs/delete/delete.component.ts","./src/app/report/dialogs/delete/delete.component.html","./src/app/report/teachers.service.ts","./src/app/report/report.module.ts","./src/app/report/report-routing.module.ts","./src/app/report/teachers.model.ts","./src/app/report/dialogs/form-dialog/form-dialog.component.ts","./src/app/report/dialogs/form-dialog/form-dialog.component.html","./src/app/report/report.component.ts","./src/app/report/report.component.html"],"names":[],"mappings":"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","file":"report-report-module-es2015.js","sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { TeachersService } from '../../teachers.service';\n\n@Component({\n  selector: 'app-delete',\n  templateUrl: './delete.component.html',\n  styleUrls: ['./delete.component.sass']\n})\nexport class DeleteDialogComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public teachersService: TeachersService\n  ) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  confirmDelete(): void {\n    this.teachersService.deleteTeachers(this.data.id);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <h3 mat-dialog-title>Are you sure?</h3>\n  <div mat-dialog-content>\n    <ul class=\"clearfix\">\n      <li>\n        <p><span class=\"font-weight-bold\"> Invested Amount: </span>{{data.investedAmount}}</p>\n      </li>\n      <li>\n        <p><span class=\"font-weight-bold\"> percentage: </span>{{ data.percentage }}</p>\n      </li>\n    </ul>\n  </div>\n  <div mat-dialog-actions class=\"mb-1\">\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\n      Delete\n    </button>\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Teachers } from './teachers.model';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\n@Injectable()\r\nexport class TeachersService {\r\n  private readonly API_URL = 'assets/data/investments.json';\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<Teachers[]> = new BehaviorSubject<Teachers[]>([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {}\r\n  get data(): Teachers[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllTeacherss(): void {\r\n    this.httpClient.get<Teachers[]>(this.API_URL).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + ' ' + error.message);\r\n      }\r\n    );\r\n  }\r\n  addTeachers(teachers: Teachers): void {\r\n    this.dialogData = teachers;\r\n\r\n    /*  this.httpClient.post(this.API_URL, teachers).subscribe(data => {\r\n      this.dialogData = teachers;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updateTeachers(teachers: Teachers): void {\r\n    this.dialogData = teachers;\r\n\r\n    /* this.httpClient.put(this.API_URL + teachers.id, teachers).subscribe(data => {\r\n      this.dialogData = teachers;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deleteTeachers(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ReportRoutingModule } from './report-routing.module';\nimport { ReportComponent } from './report.component';\n\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { NgxEchartsModule } from 'ngx-echarts';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { DeleteDialogComponent } from './dialogs/delete/delete.component';\nimport { FormDialogComponent } from './dialogs/form-dialog/form-dialog.component';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { TeachersService } from './teachers.service';\n\n\n@NgModule({\n  declarations: [ReportComponent, DeleteDialogComponent, FormDialogComponent],\n  imports: [\n    CommonModule,\n    ReportRoutingModule,\n\n    NgxEchartsModule.forRoot({\n      echarts: () => import('echarts'),\n    }),\n    PerfectScrollbarModule,\n    NgApexchartsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDialogModule,\n    MatSortModule,\n    MatToolbarModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatCheckboxModule,\n    MatTabsModule,\n    MaterialFileInputModule,\n    MatMenuModule,\n    MatProgressSpinnerModule,\n  ],\n  providers: [TeachersService],\n})\nexport class ReportModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReportComponent } from './report.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ReportComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ReportRoutingModule { }\n","import { formatDate } from '@angular/common';\r\nexport class Teachers {\r\n  id: number;\r\n  sno: string;\r\n  date: string;\r\n  investedAmount: string;\r\n  percentage: string;\r\n  constructor(teachers) {\r\n    {\r\n      this.id = teachers.id || this.getRandomID();\r\n      this.sno = teachers.sno || '';\r\n      this.date = teachers.date || formatDate(new Date(), 'yyyy-MM-dd', 'en');\r\n      this.investedAmount = teachers.investedAmount || '';\r\n      this.percentage = teachers.percentage || '';\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { TeachersService } from '../../teachers.service';\nimport {\n  FormControl,\n  Validators,\n  FormGroup,\n  FormBuilder,\n} from '@angular/forms';\nimport { Teachers } from '../../teachers.model';\nimport { formatDate } from '@angular/common';\n\n@Component({\n  selector: 'app-form-dialog',\n  templateUrl: './form-dialog.component.html',\n  styleUrls: ['./form-dialog.component.sass']\n})\nexport class FormDialogComponent implements OnInit {\n  action: string;\n  dialogTitle: string;\n  proForm: FormGroup;\n  teachers: Teachers;\n\n  constructor(\n    public dialogRef: MatDialogRef<FormDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public teachersService: TeachersService,\n    private fb: FormBuilder\n  ) {\n    // Set the defaults\n    this.action = data.action;\n    if (this.action === 'edit') {\n      this.dialogTitle = data.teachers.investedAmount;\n      this.teachers = data.teachers;\n    } else {\n      this.dialogTitle = 'New Investment Amount';\n      this.teachers = new Teachers({});\n    }\n    this.proForm = this.createContactForm();\n  }\n  formControl = new FormControl('', [\n    Validators.required,\n    // Validators.email,\n  ]);\n  getErrorMessage() {\n    return this.formControl.hasError('required')\n      ? 'Required field'\n      : this.formControl.hasError('email')\n      ? 'Not a valid email'\n      : '';\n  }\n  createContactForm(): FormGroup {\n    return this.fb.group({\n      id: [this.teachers.id],\n      sno: [this.teachers.sno],\n      // email: [\n      //   this.teachers.email,\n      //   [Validators.required, Validators.email, Validators.minLength(5)],\n      // ],\n      date: [\n        formatDate(this.teachers.date, 'yyyy-MM-dd', 'en'),\n        [Validators.required],\n      ],\n      clientName: [this.teachers.investedAmount],\n      investedAmount: [this.teachers.percentage],\n    });\n  }\n  submit() {\n    // emppty stuff\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  public confirmAdd(): void {\n    this.teachersService.addTeachers(this.proForm.getRawValue());\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"addContainer\">\n  <div class=\"modalHeader\">\n    <div class=\"editRowModal\">\n      <div class=\"modalHeader clearfix\">\n        <!-- <img [src]='teachers.img' alt=\"avatar\"> -->\n        <div class=\"modal-about\">\n          <div class=\"font-weight-bold p-t-5 font-17\">\n            {{dialogTitle}}</div>\n        </div>\n      </div>\n    </div>\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n  <div mat-dialog-content>\n    <form class=\"register-form m-4\" [formGroup]=\"proForm\" (ngSubmit)=\"submit\">\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>S.NO</mat-label>\n            <input matInput formControlName=\"sno\" required>\n            <mat-icon matSuffix>note</mat-icon>\n            <mat-error *ngIf=\"proForm.get('sno')\">\n              sno is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Date</mat-label>\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"date\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n            <mat-error *ngIf=\"proForm.get('date')\">\n              Please select date\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Invested Amount</mat-label>\n            <input matInput formControlName=\"investedAmount\" required>\n            <mat-icon matSuffix>face</mat-icon>\n            <mat-error *ngIf=\"proForm.get('investedAmount')\">\n              Invested Amount is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Percentage</mat-label>\n            <input matInput formControlName=\"percentage\" required>\n            <mat-icon matSuffix>money</mat-icon>\n            <mat-error *ngIf=\"proForm.get('percentage')\">\n              Percentage Amount is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n          <div class=\"example-button-row\">\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!proForm.valid\" [mat-dialog-close]=\"1\"\n              (click)=\"confirmAdd()\">Save</button>\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { TeachersService } from './teachers.service';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { Teachers } from './teachers.model';\nimport { DataSource } from '@angular/cdk/collections';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FormDialogComponent } from './dialogs/form-dialog/form-dialog.component';\nimport { DeleteDialogComponent } from './dialogs/delete/delete.component';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport {\n  ChartComponent,\n  ApexAxisChartSeries,\n  ApexChart,\n  ApexXAxis,\n  ApexDataLabels,\n  ApexTooltip,\n  ApexYAxis,\n  ApexPlotOptions,\n  ApexStroke,\n  ApexLegend,\n  ApexFill,\n} from 'ng-apexcharts';\nexport type areaChartOptions = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  xaxis: ApexXAxis;\n  yaxis: ApexYAxis;\n  stroke: ApexStroke;\n  tooltip: ApexTooltip;\n  dataLabels: ApexDataLabels;\n  legend: ApexLegend;\n  colors: string[];\n};\n\nexport type barChartOptions1 = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  dataLabels: ApexDataLabels;\n  plotOptions: ApexPlotOptions;\n  yaxis: ApexYAxis;\n  xaxis: ApexXAxis;\n  fill: ApexFill;\n  colors: string[];\n};\n\nexport type barChartOptions2 = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  dataLabels: ApexDataLabels;\n  plotOptions: ApexPlotOptions;\n  yaxis: ApexYAxis;\n  xaxis: ApexXAxis;\n  fill: ApexFill;\n  colors: string[];\n};\n\n@Component({\n  selector: 'app-report',\n  templateUrl: './report.component.html',\n  styleUrls: ['./report.component.sass']\n})\nexport class ReportComponent implements OnInit {\n  displayedColumns = [\n    'select',\n    'sno',\n    'date',\n    'investedAmount',\n    'percentage',\n    'actions',\n  ];\n  exampleDatabase: TeachersService | null;\n  dataSource: ExampleDataSource | null;\n  selection = new SelectionModel<Teachers>(true, []);\n  id: number;\n  teachers: Teachers | null;\n\n  @ViewChild('chart') chart: ChartComponent;\n  public areaChartOptions: Partial<areaChartOptions>;\n  public barChartOptions1: Partial<barChartOptions1>;\n  public barChartOptions2: Partial<barChartOptions2>;\n\n\n  proForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    public httpClient: HttpClient,\n    public dialog: MatDialog,\n    public teachersService: TeachersService,\n    private snackBar: MatSnackBar\n  ) {\n    this.proForm = this.fb.group({\n      from: ['', [Validators.required, Validators.pattern('[a-zA-Z]+')]],\n      to: [''],\n    });\n  }\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild('filter', { static: true }) filter: ElementRef;\n  @ViewChild(MatMenuTrigger)\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: '0px', y: '0px' };\n\n  onSubmit() {\n    console.log('Form Value', this.proForm.value);\n  }\n\n  ngOnInit(): void {\n    this.loadData();\n    this.chart1();\n    this.chart2();\n  }\n\n  addNew() {\n    const dialogRef = this.dialog.open(FormDialogComponent, {\n      data: {\n        teachers: this.teachers,\n        action: 'add',\n      },\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        // After dialog is closed we're doing frontend updates\n        // For add we're just pushing a new row inside DataServicex\n        this.exampleDatabase.dataChange.value.unshift(\n          this.teachersService.getDialogData()\n        );\n        this.refreshTable();\n        this.showNotification(\n          'snackbar-success',\n          'Add Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  editCall(row) {\n    this.id = row.id;\n    const dialogRef = this.dialog.open(FormDialogComponent, {\n      data: {\n        teachers: row,\n        action: 'edit',\n      },\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        // When using an edit things are little different, firstly we find record inside DataService by id\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          (x) => x.id === this.id\n        );\n        // Then you update that record using data from dialogData (values you enetered)\n        this.exampleDatabase.dataChange.value[\n          foundIndex\n        ] = this.teachersService.getDialogData();\n        // And lastly refresh table\n        this.refreshTable();\n        this.showNotification(\n          'black',\n          'Edit Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  deleteItem(row) {\n    this.id = row.id;\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: row,\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          (x) => x.id === this.id\n        );\n        // for delete we use splice in order to remove single object from DataService\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\n        this.refreshTable();\n        this.showNotification(\n          'snackbar-danger',\n          'Delete Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  private refreshTable() {\n    this.paginator._changePageSize(this.paginator.pageSize);\n  }\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.renderedData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selection.clear()\n      : this.dataSource.renderedData.forEach((row) =>\n          this.selection.select(row)\n        );\n  }\n  removeSelectedRows() {\n    const totalSelect = this.selection.selected.length;\n    this.selection.selected.forEach((item) => {\n      const index: number = this.dataSource.renderedData.findIndex(\n        (d) => d === item\n      );\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\n      this.exampleDatabase.dataChange.value.splice(index, 1);\n      this.refreshTable();\n      this.selection = new SelectionModel<Teachers>(true, []);\n    });\n    this.showNotification(\n      'snackbar-danger',\n      totalSelect + ' Record Delete Successfully...!!!',\n      'bottom',\n      'center'\n    );\n  }\n  public loadData() {\n    this.exampleDatabase = new TeachersService(this.httpClient);\n    console.log(\"exampleDatabase\", this.exampleDatabase);\n    this.dataSource = new ExampleDataSource(\n      this.exampleDatabase,\n      this.paginator,\n      this.sort\n    );\n    console.log(\"dataSource\", this.dataSource);\n    fromEvent(this.filter.nativeElement, 'keyup').subscribe(() => {\n      if (!this.dataSource) {\n        return;\n      }\n      this.dataSource.filter = this.filter.nativeElement.value;\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this.snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName,\n    });\n  }\n  // context menu\n  onContextMenu(event: MouseEvent, item: Teachers) {\n    event.preventDefault();\n    this.contextMenuPosition.x = event.clientX + 'px';\n    this.contextMenuPosition.y = event.clientY + 'px';\n    // this.contextMenu.menuData = { item: item };\n    // this.contextMenu.menu.focusFirstItem('mouse');\n    // this.contextMenu.openMenu();\n  }\n\n  private chart1() {\n    this.barChartOptions1 = {\n      series: [\n        {\n          name: 'Investment',\n          data: [150000, 0, 30000, 0, 0, 50000, 0, 0, 0, 70000],\n        },\n      ],\n      chart: {\n        height: 320,\n        type: 'bar',\n        toolbar: {\n          show: false,\n        },\n        foreColor: '#9aa0ac',\n      },\n      plotOptions: {\n        bar: {\n          dataLabels: {\n            position: 'top', // top, center, bottom\n          },\n        },\n      },\n      dataLabels: {\n        enabled: false,\n        formatter: function (val) {\n          return val + '%';\n        },\n        offsetY: -20,\n        style: {\n          fontSize: '12px',\n          colors: ['#9aa0ac'],\n        },\n      },\n\n      xaxis: {\n        categories: [\n          'Jan-01',\n          'Jan-03',\n          'Jan-05',\n          'Jan-07',\n          'Jan-09',\n          'Jan-11',\n          'Jan-13',\n          'Jan-15',\n          'Jan-17',\n          'Jan-19',\n        ],\n        position: 'bottom',\n        labels: {\n          offsetY: 0,\n        },\n        axisBorder: {\n          show: false,\n        },\n        axisTicks: {\n          show: false,\n        },\n        crosshairs: {\n          fill: {\n            type: 'gradient',\n            gradient: {\n              colorFrom: '#D8E3F0',\n              colorTo: '#BED1E6',\n              stops: [0, 100],\n              opacityFrom: 0.4,\n              opacityTo: 0.5,\n            },\n          },\n        },\n        tooltip: {\n          enabled: true,\n          offsetY: -35,\n        },\n      },\n      fill: {\n        type: 'gradient',\n        colors: ['#4F86F8', '#4F86F8'],\n        gradient: {\n          shade: 'light',\n          type: 'horizontal',\n          shadeIntensity: 0.25,\n          gradientToColors: undefined,\n          inverseColors: true,\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [50, 0, 100, 100],\n        },\n      },\n      yaxis: {\n        axisBorder: {\n          show: false,\n        },\n        axisTicks: {\n          show: false,\n        },\n        labels: {\n          show: true,\n          formatter: function (val) {\n            return val + '';\n          },\n        },\n      },\n    };\n  }\n\n  private chart2() {\n    this.barChartOptions2 = {\n      series: [\n        {\n          name: 'Investment',\n          data: [150000, 30000, 50000, 70000],\n        },\n      ],\n      chart: {\n        height: 320,\n        type: 'bar',\n        toolbar: {\n          show: false,\n        },\n        foreColor: '#9aa0ac',\n      },\n      plotOptions: {\n        bar: {\n          dataLabels: {\n            position: 'top', // top, center, bottom\n          },\n        },\n      },\n      dataLabels: {\n        enabled: false,\n        formatter: function (val) {\n          return val + '%';\n        },\n        offsetY: -20,\n        style: {\n          fontSize: '12px',\n          colors: ['#9aa0ac'],\n        },\n      },\n\n      xaxis: {\n        categories: [\n          'Jan',\n          'Feb',\n          'Mar',\n          'April',\n        ],\n        position: 'bottom',\n        labels: {\n          offsetY: 0,\n        },\n        axisBorder: {\n          show: false,\n        },\n        axisTicks: {\n          show: false,\n        },\n        crosshairs: {\n          fill: {\n            type: 'gradient',\n            gradient: {\n              colorFrom: '#D8E3F0',\n              colorTo: '#BED1E6',\n              stops: [0, 100],\n              opacityFrom: 0.4,\n              opacityTo: 0.5,\n            },\n          },\n        },\n        tooltip: {\n          enabled: true,\n          offsetY: -35,\n        },\n      },\n      fill: {\n        type: 'gradient',\n        colors: ['#4F86F8', '#4F86F8'],\n        gradient: {\n          shade: 'light',\n          type: 'horizontal',\n          shadeIntensity: 0.25,\n          gradientToColors: undefined,\n          inverseColors: true,\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [50, 0, 100, 100],\n        },\n      },\n      yaxis: {\n        axisBorder: {\n          show: false,\n        },\n        axisTicks: {\n          show: false,\n        },\n        labels: {\n          show: true,\n          formatter: function (val) {\n            return val + '';\n          },\n        },\n      },\n    };\n  }\n}\n\nexport class ExampleDataSource extends DataSource<Teachers> {\n  filterChange = new BehaviorSubject('');\n  get filter(): string {\n    return this.filterChange.value;\n  }\n  set filter(filter: string) {\n    this.filterChange.next(filter);\n  }\n  filteredData: Teachers[] = [];\n  renderedData: Teachers[] = [];\n  constructor(\n    public exampleDatabase: TeachersService,\n    public paginator: MatPaginator,\n    public _sort: MatSort\n  ) {\n    super();\n    // Reset to the first page when the user changes the filter.\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\n  }\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<Teachers[]> {\n    // Listen for any changes in the base data, sorting, filtering, or pagination\n    const displayDataChanges = [\n      this.exampleDatabase.dataChange,\n      this._sort.sortChange,\n      this.filterChange,\n      this.paginator.page,\n    ];\n    this.exampleDatabase.getAllTeacherss();\n    return merge(...displayDataChanges).pipe(\n      map(() => {\n        // Filter data\n        this.filteredData = this.exampleDatabase.data\n          .slice()\n          .filter((teachers: Teachers) => {\n            const searchStr = (\n              teachers.date +\n              teachers.investedAmount +\n              teachers.percentage\n            ).toLowerCase();\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\n          });\n        // Sort filtered data\n        const sortedData = this.sortData(this.filteredData.slice());\n        // Grab the page's slice of the filtered sorted data.\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        this.renderedData = sortedData.splice(\n          startIndex,\n          this.paginator.pageSize\n        );\n        return this.renderedData;\n      })\n    );\n  }\n  disconnect() {}\n  /** Returns a sorted copy of the database data. */\n  sortData(data: Teachers[]): Teachers[] {\n    if (!this._sort.active || this._sort.direction === '') {\n      return data;\n    }\n    return data.sort((a, b) => {\n      let propertyA: number | string = '';\n      let propertyB: number | string = '';\n      switch (this._sort.active) {\n        case 'id':\n          [propertyA, propertyB] = [a.id, b.id];\n          break;\n        case 'sno':\n          [propertyA, propertyB] = [a.sno, b.sno];\n          break;\n        case 'date':\n          [propertyA, propertyB] = [a.date, b.date];\n          break;\n        case 'investedAmount':\n          [propertyA, propertyB] = [a.investedAmount, b.investedAmount];\n          break;\n        case 'percentage':\n          [propertyA, propertyB] = [a.percentage, b.percentage];\n          break;\n      }\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n      return (\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\n      );\n    });\n  }\n}\n","<section class=\"content\" style=\"margin-top: 10px\">\n  <div class=\"container-fluid\">\n    <div class=\"block-header\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n          <ul class=\"breadcrumb breadcrumb-style \">\n            <li class=\"breadcrumb-item\">\n              <h4 class=\"page-title\">Report</h4>\n            </li>\n            <li class=\"breadcrumb-item bcrumb-1\">\n              <a routerLink=\"/admin/dashboard/main\">\n                <i class=\"fas fa-home\"></i></a>\n            </li>\n            <a class=\"active\" style=\"color: #444444; padding: 3px 0;\">Report</a>\n          </ul>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <mat-tab-group>\n          <mat-tab>\n            <ng-template mat-tab-label>\n              <i class=\"material-icons-two-tone pr-3\">list_alt</i>\n              Investment Amount\n            </ng-template>\n            <div class=\"mt-5\">\n              <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n                  <div class=\"body\">\n                    <div class=\"table-responsive\">\n                      <div class=\"materialTableHeader\" style=\"min-width: unset;\">\n                        <div class=\"row\">\n                          <div class=\"col-7\">\n                            <ul class=\"header-buttons-left ml-0\">\n                              <!-- <li class=\"dropdown\">\n                                <h2>\n                                  <strong>Teachers</strong></h2>\n                              </li> -->\n                              <li class=\"dropdown m-l-20\">\n                                <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                                <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\n                                  aria-label=\"Search box\">\n                              </li>\n                              <!-- <li>\n                                <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\n                                  <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\n                                    <mat-icon class=\"col-white\">delete\n                                    </mat-icon>\n                                  </button>\n                                </div>\n                              </li> -->\n                            </ul>\n                          </div>\n                          <div class=\"col-4\">\n                            <ul class=\"header-buttons\">\n                              <!-- <li>\n                                <div class=\"icon-button-demo\">\n                                  <button mat-raised-button color=\"primary\" (click)=\"addNew()\">\n                                    <mat-icon class=\"col-white\" style=\"font-size: 16px; padding: 3px;\">add</mat-icon>Add\n                                  </button>\n                                </div>\n                              </li> -->\n                              <!-- <li>\n                                <div class=\"icon-button-demo\">\n                                  <button mat-mini-fab color=\"primary\">\n                                    <mat-icon class=\"col-white\">refresh\n                                    </mat-icon>\n                                  </button>\n                                </div>\n                              </li> -->\n                            </ul>\n                          </div>\n                        </div>\n                      </div>\n                      <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\n                        <!-- Checkbox Column -->\n                        <ng-container matColumnDef=\"select\">\n                          <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-10'\">\n                            <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                              [checked]=\"selection.hasValue() && isAllSelected()\"\n                              [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\n                            </mat-checkbox>\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-10'\">\n                            <mat-checkbox (click)=\"$event.stopPropagation()\"\n                              (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\n                              [ngClass]=\"'tbl-checkbox'\">\n                            </mat-checkbox>\n                          </mat-cell>\n                        </ng-container>\n                        <!-- ID Column -->\n                        <ng-container matColumnDef=\"id\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header>Id\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"sno\">\n                          <mat-header-cell mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-10'\"> S.NO\n                          </mat-header-cell>\n                          <mat-cell mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"\n                          class=\"table-img tbl-col-width-per-10\"> {{row.sno}}\n                          </mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"date\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-16'\">Date\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\" [ngClass]=\"'tbl-col-width-per-16'\"> {{row.date}}\n                          </mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"investedAmount\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-20'\">Invested Amount\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\" [ngClass]=\"'tbl-col-width-per-20'\">\n                            {{row.investedAmount}}</mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"percentage\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-14'\">Percentage\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\" [ngClass]=\"'tbl-col-width-per-14'\"> {{row.percentage}}\n                          </mat-cell>\n                        </ng-container>\n                        <!-- actions -->\n                        <ng-container matColumnDef=\"actions\">\n                          <mat-header-cell class=\"pr-0\" *matHeaderCellDef>Actions\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\n                            <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\n                              (click)=\"editCall(row)\">\n                              <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\n                            </button>\n                            <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\n                              (click)=\"deleteItem(row)\">\n                              <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\n                            </button>\n                          </mat-cell>\n                        </ng-container>\n                        <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                        </mat-header-row>\n                        <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\n                        <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\n                          [style.cursor]=\"'pointer'\" matRipple>\n                        </mat-row>\n                      </mat-table>\n                      <!-- Loading spinner -->\n                      <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\n                        <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                        </mat-progress-spinner>\n                      </div>\n                      <!-- context menu start -->\n                      <div style=\"visibility: hidden; position: fixed\" [style.left]=\"contextMenuPosition.x\"\n                        [style.top]=\"contextMenuPosition.y\" [matMenuTriggerFor]=\"contextMenu\">\n                      </div>\n                      <mat-menu #contextMenu=\"matMenu\">\n                        <ng-template matMenuContent let-item=\"item\">\n                          <button mat-menu-item (click)=\"addNew()\">\n                            <mat-icon>add_box</mat-icon>\n                            <span>Add Record</span>\n                          </button>\n                          <button mat-menu-item (click)=\"editCall(item)\">\n                            <mat-icon>create</mat-icon>\n                            <span>Edit Record</span>\n                          </button>\n                          <button mat-menu-item (click)=\"deleteItem(item)\">\n                            <mat-icon>delete</mat-icon>\n                            <span>Delete Record</span>\n                          </button>\n                          <button mat-menu-item (click)=\"refresh()\">\n                            <mat-icon>refresh</mat-icon>\n                            <span>Refresh Record</span>\n                          </button>\n                          <button mat-menu-item disabled>\n                            <mat-icon>no_encryption</mat-icon>\n                            <span>Disable</span>\n                          </button>\n                          <button mat-menu-item [matMenuTriggerFor]=\"nestedmenu\">\n                            <mat-icon>list_alt</mat-icon>\n                            <span> Nested Menu</span>\n                          </button>\n                        </ng-template>\n                      </mat-menu>\n                      <mat-menu #nestedmenu=\"matMenu\">\n                        <button mat-menu-item>\n                          <mat-icon>mail_outline</mat-icon>\n                          <span>Item 1</span>\n                        </button>\n                        <button mat-menu-item>\n                          <mat-icon>call</mat-icon>\n                          <span>Item 2</span>\n                        </button>\n                        <button mat-menu-item>\n                          <mat-icon>chat</mat-icon>\n                          <span>Item 3</span>\n                        </button>\n                      </mat-menu>\n                      <!-- context menu end -->\n                      <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\n                        [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\n                        No results\n                      </div>\n                      <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\"\n                        [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\">\n                      </mat-paginator>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <div class=\"card\">\n                  <div class=\"header\">\n                    <h2>Invested Amount</h2>\n                    <!-- <button mat-button [matMenuTriggerFor]=\"menu\" class=\"header-dropdown\">\n                      <mat-icon>more_vert</mat-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                      <button mat-menu-item>Action</button>\n                      <button mat-menu-item>Another action</button>\n                      <button mat-menu-item>Something else here</button>\n                    </mat-menu> -->\n                  </div>\n                  <div class=\"body\">\n                    <apx-chart [series]=\"barChartOptions1.series\" [chart]=\"barChartOptions1.chart\"\n                      [dataLabels]=\"barChartOptions1.dataLabels\" [plotOptions]=\"barChartOptions1.plotOptions\"\n                      [yaxis]=\"barChartOptions1.yaxis\" [xaxis]=\"barChartOptions1.xaxis\" [fill]=\"barChartOptions1.fill\"></apx-chart>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </mat-tab>\n          <mat-tab>\n            <ng-template mat-tab-label>\n              <i class=\"material-icons-two-tone pr-3\">grid_on</i>\n              Withdrwan Amount\n            </ng-template>\n            <div class=\"row\">\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                <div class=\"card\">\n                  <div class=\"body\">\n                    <div class=\"table-responsive\">\n                      <div class=\"materialTableHeader\" style=\"min-width: unset;\">\n                        <div class=\"row\">\n                          <div class=\"col-5\">\n                            <ul class=\"header-buttons-left ml-0\">\n                              <!-- <li class=\"dropdown\">\n                                <h2>\n                                  <strong>Teachers</strong></h2>\n                              </li> -->\n                              <li class=\"dropdown m-l-20\">\n                                <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                                <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\n                                  aria-label=\"Search box\">\n                              </li>\n                              <!-- <li>\n                                <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\n                                  <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\n                                    <mat-icon class=\"col-white\">delete\n                                    </mat-icon>\n                                  </button>\n                                </div>\n                              </li> -->\n                            </ul>\n                          </div>\n                          <div class=\"col-4\">\n                            <ul class=\"header-buttons\">\n                              <!-- <li>\n                                <div class=\"icon-button-demo\">\n                                  <button mat-raised-button color=\"primary\" (click)=\"addNew()\">\n                                    <mat-icon class=\"col-white\" style=\"font-size: 16px; padding: 3px;\">add</mat-icon>Add\n                                  </button>\n                                </div>\n                              </li> -->\n                              <!-- <li>\n                                <div class=\"icon-button-demo\">\n                                  <button mat-mini-fab color=\"primary\">\n                                    <mat-icon class=\"col-white\">refresh\n                                    </mat-icon>\n                                  </button>\n                                </div>\n                              </li> -->\n                            </ul>\n                          </div>\n                        </div>\n                      </div>\n                      <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\n                        <!-- Checkbox Column -->\n                        <ng-container matColumnDef=\"select\">\n                          <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-14'\">\n                            <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                              [checked]=\"selection.hasValue() && isAllSelected()\"\n                              [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\n                            </mat-checkbox>\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-14'\">\n                            <mat-checkbox (click)=\"$event.stopPropagation()\"\n                              (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\n                              [ngClass]=\"'tbl-checkbox'\">\n                            </mat-checkbox>\n                          </mat-cell>\n                        </ng-container>\n                        <!-- ID Column -->\n                        <ng-container matColumnDef=\"id\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header>Id\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"sno\">\n                          <mat-header-cell mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-12'\"> S.NO\n                          </mat-header-cell>\n                          <mat-cell mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"\n                          class=\"table-img tbl-col-width-per-12\"> {{row.sno}}\n                          </mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"date\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-20'\">Date\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\" [ngClass]=\"'tbl-col-width-per-20'\"> {{row.date}}\n                          </mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"investedAmount\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-20'\">Invested Amount\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\" [ngClass]=\"'tbl-col-width-per-20'\">\n                            {{row.investedAmount}}</mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"percentage\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-164'\">Percentage\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\" [ngClass]=\"'tbl-col-width-per-16'\"> {{row.percentage}}\n                          </mat-cell>\n                        </ng-container>\n                        <!-- actions -->\n                        <ng-container matColumnDef=\"actions\">\n                          <mat-header-cell class=\"pr-0\" *matHeaderCellDef>Actions\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\n                            <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\n                              (click)=\"editCall(row)\">\n                              <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\n                            </button>\n                            <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\n                              (click)=\"deleteItem(row)\">\n                              <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\n                            </button>\n                          </mat-cell>\n                        </ng-container>\n                        <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                        </mat-header-row>\n                        <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\n                        <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\n                          [style.cursor]=\"'pointer'\" matRipple>\n                        </mat-row>\n                      </mat-table>\n                      <!-- Loading spinner -->\n                      <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\n                        <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                        </mat-progress-spinner>\n                      </div>\n                      <!-- context menu start -->\n                      <div style=\"visibility: hidden; position: fixed\" [style.left]=\"contextMenuPosition.x\"\n                        [style.top]=\"contextMenuPosition.y\" [matMenuTriggerFor]=\"contextMenu\">\n                      </div>\n                      <mat-menu #contextMenu=\"matMenu\">\n                        <ng-template matMenuContent let-item=\"item\">\n                          <button mat-menu-item (click)=\"addNew()\">\n                            <mat-icon>add_box</mat-icon>\n                            <span>Add Record</span>\n                          </button>\n                          <button mat-menu-item (click)=\"editCall(item)\">\n                            <mat-icon>create</mat-icon>\n                            <span>Edit Record</span>\n                          </button>\n                          <button mat-menu-item (click)=\"deleteItem(item)\">\n                            <mat-icon>delete</mat-icon>\n                            <span>Delete Record</span>\n                          </button>\n                          <button mat-menu-item (click)=\"refresh()\">\n                            <mat-icon>refresh</mat-icon>\n                            <span>Refresh Record</span>\n                          </button>\n                          <button mat-menu-item disabled>\n                            <mat-icon>no_encryption</mat-icon>\n                            <span>Disable</span>\n                          </button>\n                          <button mat-menu-item [matMenuTriggerFor]=\"nestedmenu\">\n                            <mat-icon>list_alt</mat-icon>\n                            <span> Nested Menu</span>\n                          </button>\n                        </ng-template>\n                      </mat-menu>\n                      <mat-menu #nestedmenu=\"matMenu\">\n                        <button mat-menu-item>\n                          <mat-icon>mail_outline</mat-icon>\n                          <span>Item 1</span>\n                        </button>\n                        <button mat-menu-item>\n                          <mat-icon>call</mat-icon>\n                          <span>Item 2</span>\n                        </button>\n                        <button mat-menu-item>\n                          <mat-icon>chat</mat-icon>\n                          <span>Item 3</span>\n                        </button>\n                      </mat-menu>\n                      <!-- context menu end -->\n                      <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\n                        [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\n                        No results\n                      </div>\n                      <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\"\n                        [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\">\n                      </mat-paginator>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <div class=\"card\">\n                  <div class=\"header\">\n                    <h2>Withdrwan Amount</h2>\n                    <!-- <button mat-button [matMenuTriggerFor]=\"menu\" class=\"header-dropdown\">\n                      <mat-icon>more_vert</mat-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                      <button mat-menu-item>Action</button>\n                      <button mat-menu-item>Another action</button>\n                      <button mat-menu-item>Something else here</button>\n                    </mat-menu> -->\n                  </div>\n                  <div class=\"body\">\n                    <apx-chart [series]=\"barChartOptions2.series\" [chart]=\"barChartOptions2.chart\"\n                      [dataLabels]=\"barChartOptions2.dataLabels\" [plotOptions]=\"barChartOptions2.plotOptions\"\n                      [yaxis]=\"barChartOptions2.yaxis\" [xaxis]=\"barChartOptions2.xaxis\" [fill]=\"barChartOptions2.fill\"></apx-chart>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </mat-tab>\n        </mat-tab-group>\n      </div>\n    </div>\n  </div>\n</section>\n"],"sourceRoot":"webpack:///"}