{"version":3,"sources":["webpack:///src/app/admin/departments/all-departments/department.service.ts","webpack:///src/app/admin/departments/departments.module.ts","webpack:///src/app/admin/departments/all-departments/dialogs/delete/delete.component.ts","webpack:///src/app/admin/departments/all-departments/dialogs/delete/delete.component.html","webpack:///src/app/admin/departments/all-departments/dialogs/form-dialog/form-dialog.component.ts","webpack:///src/app/admin/departments/all-departments/dialogs/form-dialog/form-dialog.component.html","webpack:///src/app/admin/departments/departments-routing.module.ts","webpack:///src/app/admin/departments/all-departments/all-departments.component.ts","webpack:///src/app/admin/departments/all-departments/all-departments.component.html","webpack:///src/app/admin/departments/edit-department/edit-department.component.ts","webpack:///src/app/admin/departments/edit-department/edit-department.component.html","webpack:///src/app/admin/departments/all-departments/department.model.ts","webpack:///src/app/admin/departments/add-department/add-department.component.ts","webpack:///src/app/admin/departments/add-department/add-department.component.html"],"names":["DepartmentService","httpClient","API_URL","isTblLoading","dataChange","dialogData","get","subscribe","data","next","error","console","log","name","message","department","id","value","DepartmentsModule","declarations","imports","providers","DeleteDialogComponent","dialogRef","departmentService","close","deleteDepartment","confirmDelete","onNoClick","selector","templateUrl","styleUrls","FormDialogComponent","fb","formControl","required","action","dialogTitle","dName","departmentForm","createContactForm","hasError","group","hod","phone","email","minLength","sYear","sCapacity","addDepartment","getRawValue","provide","useValue","confirmAdd","routes","path","component","DepartmentsRoutingModule","forChild","exports","$event","stopPropagation","selection","AllDepartmentsComponent","dialog","snackBar","displayedColumns","contextMenuPosition","x","y","loadData","open","afterClosed","result","exampleDatabase","unshift","getDialogData","refreshTable","showNotification","row","foundIndex","findIndex","splice","paginator","_changePageSize","pageSize","numSelected","selected","length","numRows","dataSource","renderedData","isAllSelected","clear","forEach","select","totalSelect","item","index","d","ExampleDataSource","sort","filter","nativeElement","colorName","text","placementFrom","placementAlign","duration","verticalPosition","horizontalPosition","panelClass","event","preventDefault","clientX","clientY","contextMenu","menuData","menu","focusFirstItem","openMenu","removeSelectedRows","addNew","refresh","_sort","filterChange","filteredData","pageIndex","displayDataChanges","sortChange","page","getAllDepartments","pipe","slice","searchStr","toLowerCase","indexOf","sortedData","sortData","startIndex","active","direction","a","b","propertyA","propertyB","valueA","isNaN","valueB","EditDepartmentComponent","formdata","details","onSubmit","Department","getRandomID","S4","Math","random","toString","substring","AddDepartmentComponent"],"mappings":"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","file":"departments-departments-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Department } from './department.model';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\n@Injectable()\r\nexport class DepartmentService {\r\n  private readonly API_URL = 'assets/data/department.json';\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<Department[]> = new BehaviorSubject<Department[]>(\r\n    []\r\n  );\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {}\r\n  get data(): Department[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllDepartments(): void {\r\n    this.httpClient.get<Department[]>(this.API_URL).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + ' ' + error.message);\r\n      }\r\n    );\r\n  }\r\n  addDepartment(department: Department): void {\r\n    this.dialogData = department;\r\n\r\n    /*  this.httpClient.post(this.API_URL, department).subscribe(data => {\r\n      this.dialogData = department;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updateDepartment(department: Department): void {\r\n    this.dialogData = department;\r\n\r\n    /* this.httpClient.put(this.API_URL + department.id, department).subscribe(data => {\r\n      this.dialogData = department;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deleteDepartment(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\n\r\nimport { DepartmentsRoutingModule } from './departments-routing.module';\r\nimport { AddDepartmentComponent } from './add-department/add-department.component';\r\nimport { EditDepartmentComponent } from './edit-department/edit-department.component';\r\nimport { AllDepartmentsComponent } from './all-departments/all-departments.component';\r\nimport { DeleteDialogComponent } from './all-departments/dialogs/delete/delete.component';\r\nimport { FormDialogComponent } from './all-departments/dialogs/form-dialog/form-dialog.component';\r\nimport { DepartmentService } from './all-departments/department.service';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AddDepartmentComponent,\r\n    EditDepartmentComponent,\r\n    AllDepartmentsComponent,\r\n    DeleteDialogComponent,\r\n    FormDialogComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSortModule,\r\n    MatCheckboxModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatSelectModule,\r\n    MaterialFileInputModule,\r\n    MatDatepickerModule,\r\n    MatMenuModule,\r\n    DepartmentsRoutingModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  providers: [DepartmentService],\r\n})\r\nexport class DepartmentsModule {}\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { DepartmentService } from '../../department.service';\r\n@Component({\r\n  selector: 'app-delete',\r\n  templateUrl: './delete.component.html',\r\n  styleUrls: ['./delete.component.sass']\r\n})\r\nexport class DeleteDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public departmentService: DepartmentService\r\n  ) {}\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    this.departmentService.deleteDepartment(this.data.id);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <h3 mat-dialog-title>Are you sure?</h3>\r\n    <div mat-dialog-content>\r\n        <ul class=\"clearfix\">\r\n            <li>\r\n                <p><span class=\"font-weight-bold\"> Department Name: </span>{{data.dName}}</p>\r\n            </li>\r\n            <li>\r\n                <p><span class=\"font-weight-bold\"> HOD: </span>{{ data.hod }}</p>\r\n            </li>\r\n            <li>\r\n                <p>\r\n                    <span class=\"font-weight-bold\">Mobile: </span>{{data.phone}}\r\n                </p>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div mat-dialog-actions class=\"mb-1\">\r\n        <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\r\n            Delete\r\n        </button>\r\n        <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n    </div>\r\n</div>","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { DepartmentService } from '../../department.service';\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormGroup,\r\n  FormBuilder\r\n} from '@angular/forms';\r\nimport { Department } from '../../department.model';\r\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\r\n@Component({\r\n  selector: 'app-form-dialog',\r\n  templateUrl: './form-dialog.component.html',\r\n  styleUrls: ['./form-dialog.component.sass'],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: 'en-GB' }]\r\n})\r\nexport class FormDialogComponent {\r\n  action: string;\r\n  dialogTitle: string;\r\n  departmentForm: FormGroup;\r\n  department: Department;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public departmentService: DepartmentService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === 'edit') {\r\n      this.dialogTitle = data.department.dName;\r\n      this.department = data.department;\r\n    } else {\r\n      this.dialogTitle = 'New Department';\r\n      this.department = new Department({});\r\n    }\r\n    this.departmentForm = this.createContactForm();\r\n  }\r\n  formControl = new FormControl('', [\r\n    Validators.required\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError('required')\r\n      ? 'Required field'\r\n      : this.formControl.hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      id: [this.department.id],\r\n      dName: [this.department.dName, [Validators.required]],\r\n      hod: [this.department.hod, [Validators.required]],\r\n      phone: [this.department.phone, [Validators.required]],\r\n      email: [\r\n        this.department.email,\r\n        [Validators.required, Validators.email, Validators.minLength(5)]\r\n      ],\r\n      sYear: [this.department.sYear, [Validators.required]],\r\n      sCapacity: [this.department.sCapacity, [Validators.required]]\r\n    });\r\n  }\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  public confirmAdd(): void {\r\n    this.departmentService.addDepartment(this.departmentForm.getRawValue());\r\n  }\r\n}\r\n","<div class=\"addContainer\">\r\n    <div class=\"modalHeader\">\r\n        <div class=\"editRowModal\">\r\n            <div class=\"modalHeader clearfix\">\r\n                <div class=\"modal-about\">\r\n                    <div class=\"font-weight-bold p-t-5 font-17\">\r\n                        {{dialogTitle}}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </div>\r\n    <div mat-dialog-content>\r\n        <form class=\"register-form m-4\" [formGroup]=\"departmentForm\" (ngSubmit)=\"submit\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Department</mat-label>\r\n                        <mat-select formControlName=\"dName\" required>\r\n                            <mat-option [value]=\"'mechanical'\">\r\n                                Mechanical\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'science'\">\r\n                                Science\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'mathematics'\">\r\n                                Mathematics\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'computer'\">\r\n                                Computer\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'civil'\">\r\n                                Civil\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'automobile'\">\r\n                                Automobile\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'management'\">\r\n                                Management\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"departmentForm.get('dName').hasError('required')\">\r\n                            Select Any Department\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Head Of Department</mat-label>\r\n                        <input matInput formControlName=\"hod\" required>\r\n                        <mat-icon matSuffix>person</mat-icon>\r\n                        <mat-error *ngIf=\"departmentForm.get('hod').hasError('required')\">\r\n                            HOD name required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Phone</mat-label>\r\n                        <input matInput formControlName=\"phone\">\r\n                        <mat-icon matSuffix>phone</mat-icon>\r\n                        <mat-error *ngIf=\"departmentForm.get('phone').hasError('required')\">\r\n                            Phone is required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Email</mat-label>\r\n                        <input matInput formControlName=\"email\" required>\r\n                        <mat-icon matSuffix>email</mat-icon>\r\n                        <mat-error\r\n                            *ngIf=\"departmentForm.get('email').hasError('required') || departmentForm.get('email').touched\">\r\n                            Please enter a valid email address\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Department Start Year</mat-label>\r\n                        <input matInput formControlName=\"sYear\" required>\r\n                        <mat-icon matSuffix>query_builder</mat-icon>\r\n                        <mat-error *ngIf=\"departmentForm.get('sYear').hasError('required')\">\r\n                            Department Start Year is required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Student Capacity</mat-label>\r\n                        <input matInput formControlName=\"sCapacity\" required>\r\n                        <mat-icon matSuffix>group</mat-icon>\r\n                        <mat-error *ngIf=\"departmentForm.get('sCapacity').hasError('required')\">\r\n                            Student Capacity is required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                    <div class=\"example-button-row\">\r\n                        <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!departmentForm.valid\"\r\n                            [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\r\n                        <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AllDepartmentsComponent } from './all-departments/all-departments.component';\r\nimport { AddDepartmentComponent } from './add-department/add-department.component';\r\nimport { EditDepartmentComponent } from './edit-department/edit-department.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'all-departments',\r\n    component: AllDepartmentsComponent\r\n  },\r\n  {\r\n    path: 'add-department',\r\n    component: AddDepartmentComponent\r\n  },\r\n  {\r\n    path: 'edit-department',\r\n    component: EditDepartmentComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DepartmentsRoutingModule {}\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { DepartmentService } from './department.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { Department } from './department.model';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { FormDialogComponent } from './dialogs/form-dialog/form-dialog.component';\r\nimport { DeleteDialogComponent } from './dialogs/delete/delete.component';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\n@Component({\r\n  selector: 'app-all-departments',\r\n  templateUrl: './all-departments.component.html',\r\n  styleUrls: ['./all-departments.component.sass'],\r\n})\r\nexport class AllDepartmentsComponent implements OnInit {\r\n  displayedColumns = [\r\n    'select',\r\n    'dName',\r\n    'hod',\r\n    'phone',\r\n    'email',\r\n    'sYear',\r\n    'sCapacity',\r\n    'actions',\r\n  ];\r\n  exampleDatabase: DepartmentService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<Department>(true, []);\r\n  id: number;\r\n  department: Department | null;\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public departmentService: DepartmentService,\r\n    private snackBar: MatSnackBar\r\n  ) {}\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild('filter', { static: true }) filter: ElementRef;\r\n  @ViewChild(MatMenuTrigger)\r\n  contextMenu: MatMenuTrigger;\r\n  contextMenuPosition = { x: '0px', y: '0px' };\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n  addNew() {\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        department: this.department,\r\n        action: 'add',\r\n      },\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // After dialog is closed we're doing frontend updates\r\n        // For add we're just pushing a new row inside DataService\r\n        this.exampleDatabase.dataChange.value.unshift(\r\n          this.departmentService.getDialogData()\r\n        );\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'snackbar-success',\r\n          'Add Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  editCall(row) {\r\n    this.id = row.id;\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        department: row,\r\n        action: 'edit',\r\n      },\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // When using an edit things are little different, firstly we find record inside DataService by id\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // Then you update that record using data from dialogData (values you enetered)\r\n        this.exampleDatabase.dataChange.value[\r\n          foundIndex\r\n        ] = this.departmentService.getDialogData();\r\n        // And lastly refresh table\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'black',\r\n          'Edit Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  deleteItem(row) {\r\n    this.id = row.id;\r\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: row,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // for delete we use splice in order to remove single object from DataService\r\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'snackbar-danger',\r\n          'Delete Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.renderedData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.renderedData.forEach((row) =>\r\n          this.selection.select(row)\r\n        );\r\n  }\r\n  removeSelectedRows() {\r\n    const totalSelect = this.selection.selected.length;\r\n    this.selection.selected.forEach((item) => {\r\n      const index: number = this.dataSource.renderedData.findIndex(\r\n        (d) => d === item\r\n      );\r\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\r\n      this.exampleDatabase.dataChange.value.splice(index, 1);\r\n      this.refreshTable();\r\n      this.selection = new SelectionModel<Department>(true, []);\r\n    });\r\n    this.showNotification(\r\n      'snackbar-danger',\r\n      totalSelect + ' Record Delete Successfully...!!!',\r\n      'bottom',\r\n      'center'\r\n    );\r\n  }\r\n  public loadData() {\r\n    this.exampleDatabase = new DepartmentService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    fromEvent(this.filter.nativeElement, 'keyup').subscribe(() => {\r\n      if (!this.dataSource) {\r\n        return;\r\n      }\r\n      this.dataSource.filter = this.filter.nativeElement.value;\r\n    });\r\n  }\r\n  showNotification(colorName, text, placementFrom, placementAlign) {\r\n    this.snackBar.open(text, '', {\r\n      duration: 2000,\r\n      verticalPosition: placementFrom,\r\n      horizontalPosition: placementAlign,\r\n      panelClass: colorName,\r\n    });\r\n  }\r\n  // context menu\r\n  onContextMenu(event: MouseEvent, item: Department) {\r\n    event.preventDefault();\r\n    this.contextMenuPosition.x = event.clientX + 'px';\r\n    this.contextMenuPosition.y = event.clientY + 'px';\r\n    this.contextMenu.menuData = { item: item };\r\n    this.contextMenu.menu.focusFirstItem('mouse');\r\n    this.contextMenu.openMenu();\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<Department> {\r\n  filterChange = new BehaviorSubject('');\r\n  get filter(): string {\r\n    return this.filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this.filterChange.next(filter);\r\n  }\r\n  filteredData: Department[] = [];\r\n  renderedData: Department[] = [];\r\n  constructor(\r\n    public exampleDatabase: DepartmentService,\r\n    public paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<Department[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this.exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this.filterChange,\r\n      this.paginator.page,\r\n    ];\r\n    this.exampleDatabase.getAllDepartments();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this.exampleDatabase.data\r\n          .slice()\r\n          .filter((department: Department) => {\r\n            const searchStr = (\r\n              department.dName +\r\n              department.hod +\r\n              department.phone +\r\n              department.email\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this.paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() {}\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: Department[]): Department[] {\r\n    if (!this._sort.active || this._sort.direction === '') {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = '';\r\n      let propertyB: number | string = '';\r\n      switch (this._sort.active) {\r\n        case 'id':\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case 'dName':\r\n          [propertyA, propertyB] = [a.dName, b.dName];\r\n          break;\r\n        case 'hod':\r\n          [propertyA, propertyB] = [a.hod, b.hod];\r\n          break;\r\n        // case 'date': [propertyA, propertyB] = [a.date, b.date]; break;\r\n        case 'phone':\r\n          [propertyA, propertyB] = [a.phone, b.phone];\r\n          break;\r\n        case 'email':\r\n          [propertyA, propertyB] = [a.email, b.email];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">All Departments</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Departments</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">All</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n        <div class=\"card\">\r\n          <div class=\"body\">\r\n            <div class=\"responsive_table\">\r\n              <div class=\"materialTableHeader\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-8\">\r\n                    <ul class=\"header-buttons-left ml-0\">\r\n                      <li class=\"dropdown\">\r\n                        <h2>\r\n                          <strong>Departments</strong></h2>\r\n                      </li>\r\n                      <li class=\"dropdown m-l-20\">\r\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\r\n                          aria-label=\"Search box\">\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\r\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\r\n                            <mat-icon class=\"col-white\">delete\r\n                            </mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div class=\"col-4\">\r\n                    <ul class=\"header-buttons\">\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\r\n                            <mat-icon class=\"col-white\">add</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\r\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\r\n                <!-- Checkbox Column -->\r\n                <ng-container matColumnDef=\"select\">\r\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\r\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"dName\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Department Name</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.dName}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"hod\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Head Of Department\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.hod}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"phone\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Phone</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.phone }}\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"email\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.email}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"sYear\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Start Year</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.sYear}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"sCapacity\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Students Capacity\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.sCapacity}}</mat-cell>\r\n                </ng-container>\r\n                <!-- actions -->\r\n                <ng-container matColumnDef=\"actions\">\r\n                  <mat-header-cell *matHeaderCellDef class=\"pr-0\">Actions</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"editCall(row)\">\r\n                      <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"deleteItem(row)\">\r\n                      <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\r\n                    </button>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\r\n                  [style.cursor]=\"'pointer'\" matRipple>\r\n                </mat-row>\r\n              </mat-table>\r\n              <!-- Loading spinner -->\r\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\r\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\r\n                </mat-progress-spinner>\r\n              </div>\r\n              <!-- context menu start -->\r\n              <div style=\"visibility: hidden; position: fixed\" [style.left]=\"contextMenuPosition.x\"\r\n                [style.top]=\"contextMenuPosition.y\" [matMenuTriggerFor]=\"contextMenu\">\r\n              </div>\r\n              <mat-menu #contextMenu=\"matMenu\">\r\n                <ng-template matMenuContent let-item=\"item\">\r\n                  <button mat-menu-item (click)=\"addNew()\">\r\n                    <mat-icon>add_box</mat-icon>\r\n                    <span>Add Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"editCall(item)\">\r\n                    <mat-icon>create</mat-icon>\r\n                    <span>Edit Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"deleteItem(item)\">\r\n                    <mat-icon>delete</mat-icon>\r\n                    <span>Delete Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"refresh()\">\r\n                    <mat-icon>refresh</mat-icon>\r\n                    <span>Refresh Record</span>\r\n                  </button>\r\n                  <button mat-menu-item disabled>\r\n                    <mat-icon>no_encryption</mat-icon>\r\n                    <span>Disable</span>\r\n                  </button>\r\n                  <button mat-menu-item [matMenuTriggerFor]=\"nestedmenu\">\r\n                    <mat-icon>list_alt</mat-icon>\r\n                    <span> Nested Menu</span>\r\n                  </button>\r\n                </ng-template>\r\n              </mat-menu>\r\n              <mat-menu #nestedmenu=\"matMenu\">\r\n                <button mat-menu-item>\r\n                  <mat-icon>mail_outline</mat-icon>\r\n                  <span>Item 1</span>\r\n                </button>\r\n                <button mat-menu-item>\r\n                  <mat-icon>call</mat-icon>\r\n                  <span>Item 2</span>\r\n                </button>\r\n                <button mat-menu-item>\r\n                  <mat-icon>chat</mat-icon>\r\n                  <span>Item 3</span>\r\n                </button>\r\n              </mat-menu>\r\n              <!-- context menu end -->\r\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\r\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\r\n                No results\r\n              </div>\r\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\r\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n              </mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-edit-department',\r\n  templateUrl: './edit-department.component.html',\r\n  styleUrls: ['./edit-department.component.sass']\r\n})\r\nexport class EditDepartmentComponent {\r\n  departmentForm: FormGroup;\r\n  formdata = {\r\n    dName: 'mathematics',\r\n    hod: 'Sanjay Shah',\r\n    phone: '123456789',\r\n    email: 'test@example.com',\r\n    sYear: '1987-02-17T14:22:18Z',\r\n    sCapacity: '230',\r\n    details: 'Learn fashion designing course with proper guideline.'\r\n  };\r\n  constructor(private fb: FormBuilder) {\r\n    this.departmentForm = this.createContactForm();\r\n  }\r\n  onSubmit() {\r\n    console.log('Form Value', this.departmentForm.value);\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      dName: [this.formdata.dName, [Validators.required]],\r\n      hod: [this.formdata.hod],\r\n      phone: [this.formdata.phone, [Validators.required]],\r\n      email: [\r\n        this.formdata.email,\r\n        [Validators.required, Validators.email, Validators.minLength(5)]\r\n      ],\r\n      sYear: [this.formdata.sYear],\r\n      sCapacity: [this.formdata.sCapacity],\r\n      details: [this.formdata.details]\r\n    });\r\n  }\r\n}\r\n","<section class=\"content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"block-header\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <ul class=\"breadcrumb breadcrumb-style \">\r\n                        <li class=\"breadcrumb-item\">\r\n                            <h4 class=\"page-title\">Department</h4>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-1\">\r\n                            <a routerLink=\"/admin/dashboard/main\">\r\n                                <i class=\"fas fa-home\"></i> Home</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-2\">\r\n                            <a href=\"#\" onClick=\"return false;\">Department</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item active\">Edit Department</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row clearfix\">\r\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"header\">\r\n                        <h2>Edit Department</h2>\r\n                        \r\n                    </div>\r\n                    <div class=\"body\">\r\n                        <form class=\"m-4\" [formGroup]=\"departmentForm\" (ngSubmit)=\"onSubmit()\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\">\r\n                                        <mat-label>Department</mat-label>\r\n                                        <mat-select formControlName=\"dName\" required>\r\n                                            <mat-option [value]=\"'mechanical'\">\r\n                                                Mechanical\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'science'\">\r\n                                                Science\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'mathematics'\">\r\n                                                Mathematics\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'computer'\">\r\n                                                Computer\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'civil'\">\r\n                                                Civil\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'automobile'\">\r\n                                                Automobile\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'management'\">\r\n                                                Management\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"departmentForm.get('dName').hasError('required')\">\r\n                                            Select Any Department\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\">\r\n                                        <mat-label>Head Of Department</mat-label>\r\n                                        <input matInput formControlName=\"hod\" required>\r\n                                        <mat-icon matSuffix>person</mat-icon>\r\n                                        <mat-error *ngIf=\"departmentForm.get('hod').hasError('required')\">\r\n                                            HOD name required\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\">\r\n                                        <mat-label>Phone</mat-label>\r\n                                        <input matInput formControlName=\"phone\">\r\n                                        <mat-icon matSuffix>phone</mat-icon>\r\n                                        <mat-error *ngIf=\"departmentForm.get('phone').hasError('required')\">\r\n                                            Phone is required\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\">\r\n                                        <mat-label>Email</mat-label>\r\n                                        <input matInput formControlName=\"email\" required>\r\n                                        <mat-icon matSuffix>email</mat-icon>\r\n                                        <mat-error\r\n                                            *ngIf=\"departmentForm.get('email').hasError('required') || departmentForm.get('email').touched\">\r\n                                            Please enter a valid email address\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\">\r\n                                        <mat-label>Department Start Date</mat-label>\r\n                                        <input matInput [matDatepicker]=\"picker\" formControlName=\"sYear\" required>\r\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                                        <mat-datepicker #picker></mat-datepicker>\r\n                                        <mat-error *ngIf=\"departmentForm.get('sYear').hasError('required')\">\r\n                                            Please select date\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\">\r\n                                        <mat-label>Student Capacity</mat-label>\r\n                                        <input matInput formControlName=\"sCapacity\" required>\r\n                                        <mat-icon matSuffix>group</mat-icon>\r\n                                        <mat-error *ngIf=\"departmentForm.get('sCapacity').hasError('required')\">\r\n                                            Student Capacity is required\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\">\r\n                                        <mat-label>Details</mat-label>\r\n                                        <textarea matInput formControlName=\"details\"></textarea>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <button class=\"mr-3\" [disabled]=\"!departmentForm.valid \" mat-raised-button\r\n                                        color=\"primary\">Submit</button>\r\n                                    <button type=\"button\" mat-button>Cancel</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","export class Department {\r\n  id: number;\r\n  dName: string;\r\n  hod: string;\r\n  phone: string;\r\n  email: string;\r\n  sYear: string;\r\n  sCapacity: string;\r\n  constructor(department) {\r\n    {\r\n      this.id = department.id || this.getRandomID();\r\n      this.dName = department.dName || '';\r\n      this.hod = department.hod || '';\r\n      this.phone = department.phone || '';\r\n      this.email = department.email || '';\r\n      this.sYear = department.sYear || '';\r\n      this.sCapacity = department.sCapacity || '';\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-add-department',\r\n  templateUrl: './add-department.component.html',\r\n  styleUrls: ['./add-department.component.sass']\r\n})\r\nexport class AddDepartmentComponent {\r\n  departmentForm: FormGroup;\r\n  constructor(private fb: FormBuilder) {\r\n    this.departmentForm = this.fb.group({\r\n      dName: ['', [Validators.required]],\r\n      hod: ['', [Validators.required]],\r\n      phone: ['', [Validators.required]],\r\n      email: [\r\n        '',\r\n        [Validators.required, Validators.email, Validators.minLength(5)]\r\n      ],\r\n      sYear: [''],\r\n      sCapacity: ['', [Validators.required]],\r\n      details: ['']\r\n    });\r\n  }\r\n  onSubmit() {\r\n    console.log('Form Value', this.departmentForm.value);\r\n  }\r\n}\r\n","<section class=\"content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"block-header\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <ul class=\"breadcrumb breadcrumb-style \">\r\n                        <li class=\"breadcrumb-item\">\r\n                            <h4 class=\"page-title\">Department</h4>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-1\">\r\n                            <a routerLink=\"/admin/dashboard/main\">\r\n                                <i class=\"fas fa-home\"></i> Home</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-2\">\r\n                            <a href=\"#\" onClick=\"return false;\">Department</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item active\">Add Department</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row clearfix\">\r\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"header\">\r\n                        <h2>Add Department</h2>\r\n                        \r\n                    </div>\r\n                    <div class=\"body\">\r\n                        <form class=\"m-4\" [formGroup]=\"departmentForm\" (ngSubmit)=\"onSubmit()\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\">\r\n                                        <mat-label>Department</mat-label>\r\n                                        <mat-select formControlName=\"dName\" required>\r\n                                            <mat-option [value]=\"'mechanical'\">\r\n                                                Mechanical\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'science'\">\r\n                                                Science\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'mathematics'\">\r\n                                                Mathematics\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'computer'\">\r\n                                                Computer\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'civil'\">\r\n                                                Civil\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'automobile'\">\r\n                                                Automobile\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'management'\">\r\n                                                Management\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"departmentForm.get('dName').hasError('required')\">\r\n                                            Select Any Department\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\">\r\n                                        <mat-label>Head Of Department</mat-label>\r\n                                        <input matInput formControlName=\"hod\" required>\r\n                                        <mat-icon matSuffix>person</mat-icon>\r\n                                        <mat-error *ngIf=\"departmentForm.get('hod').hasError('required')\">\r\n                                            HOD name required\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\">\r\n                                        <mat-label>Phone</mat-label>\r\n                                        <input matInput formControlName=\"phone\">\r\n                                        <mat-icon matSuffix>phone</mat-icon>\r\n                                        <mat-error *ngIf=\"departmentForm.get('phone').hasError('required')\">\r\n                                            Phone is required\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\">\r\n                                        <mat-label>Email</mat-label>\r\n                                        <input matInput formControlName=\"email\" required>\r\n                                        <mat-icon matSuffix>email</mat-icon>\r\n                                        <mat-error\r\n                                            *ngIf=\"departmentForm.get('email').hasError('required') || departmentForm.get('email').touched\">\r\n                                            Please enter a valid email address\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\">\r\n                                        <mat-label>Department Start Date</mat-label>\r\n                                        <input matInput [matDatepicker]=\"picker\" formControlName=\"sYear\" required>\r\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                                        <mat-datepicker #picker></mat-datepicker>\r\n                                        <mat-error *ngIf=\"departmentForm.get('sYear').hasError('required')\">\r\n                                            Please select date\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\">\r\n                                        <mat-label>Student Capacity</mat-label>\r\n                                        <input matInput formControlName=\"sCapacity\" required>\r\n                                        <mat-icon matSuffix>group</mat-icon>\r\n                                        <mat-error *ngIf=\"departmentForm.get('sCapacity').hasError('required')\">\r\n                                            Student Capacity is required\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\">\r\n                                        <mat-label>Details</mat-label>\r\n                                        <textarea matInput formControlName=\"details\"></textarea>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <button class=\"mr-3\" [disabled]=\"!departmentForm.valid \" mat-raised-button\r\n                                        color=\"primary\">Submit</button>\r\n                                    <button type=\"button\" mat-button>Cancel</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>"]}