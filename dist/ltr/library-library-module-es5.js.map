{"version":3,"sources":["webpack:///src/app/admin/library/all-assets/library.model.ts","webpack:///src/app/admin/library/all-assets/dialogs/form-dialog/form-dialog.component.ts","webpack:///src/app/admin/library/all-assets/dialogs/form-dialog/form-dialog.component.html","webpack:///src/app/admin/library/library.module.ts","webpack:///src/app/admin/library/all-assets/dialogs/delete/delete.component.ts","webpack:///src/app/admin/library/all-assets/dialogs/delete/delete.component.html","webpack:///src/app/admin/library/add-asset/add-asset.component.ts","webpack:///src/app/admin/library/add-asset/add-asset.component.html","webpack:///src/app/admin/library/all-assets/library.service.ts","webpack:///src/app/admin/library/library-routing.module.ts","webpack:///src/app/admin/library/edit-asset/edit-asset.component.ts","webpack:///src/app/admin/library/edit-asset/edit-asset.component.html","webpack:///src/app/admin/library/all-assets/all-assets.component.ts","webpack:///src/app/admin/library/all-assets/all-assets.component.html"],"names":["Library","library","id","getRandomID","no","title","subject","date","Date","department","type","status","S4","Math","random","toString","substring","FormDialogComponent","dialogRef","data","libraryService","fb","formControl","required","action","console","log","dialogTitle","libraryForm","createContactForm","hasError","group","close","addLibrary","getRawValue","provide","useValue","confirmAdd","onNoClick","selector","templateUrl","styleUrls","providers","LibraryModule","declarations","imports","DeleteDialogComponent","deleteLibrary","confirmDelete","AddAssetComponent","autherName","publisher","aType","price","details","value","onSubmit","LibraryService","httpClient","API_URL","isTblLoading","dataChange","dialogData","get","subscribe","next","error","name","message","routes","path","component","LibraryRoutingModule","forChild","exports","EditAssetComponent","formdata","$event","stopPropagation","selection","AllAssetsComponent","dialog","snackBar","displayedColumns","contextMenuPosition","x","y","loadData","open","afterClosed","result","exampleDatabase","unshift","getDialogData","refreshTable","showNotification","row","foundIndex","findIndex","splice","paginator","_changePageSize","pageSize","numSelected","selected","length","numRows","dataSource","renderedData","isAllSelected","clear","forEach","select","totalSelect","item","index","d","ExampleDataSource","sort","filter","nativeElement","colorName","text","placementFrom","placementAlign","duration","verticalPosition","horizontalPosition","panelClass","event","preventDefault","clientX","clientY","contextMenu","menuData","menu","focusFirstItem","openMenu","removeSelectedRows","addNew","refresh","_sort","filterChange","filteredData","pageIndex","displayDataChanges","sortChange","page","getAllLibrarys","pipe","slice","searchStr","toLowerCase","indexOf","sortedData","sortData","startIndex","active","direction","a","b","propertyA","propertyB","valueA","isNaN","valueB"],"mappings":"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","file":"library-library-module-es5.js","sourcesContent":["import { formatDate } from '@angular/common';\r\nexport class Library {\r\n  id: number;\r\n  no: string;\r\n  title: string;\r\n  subject: string;\r\n  date: string;\r\n  department: string;\r\n  type: string;\r\n  status: string;\r\n  constructor(library) {\r\n    {\r\n      this.id = library.id || this.getRandomID();\r\n      this.no = library.no || '';\r\n      this.title = library.title || '';\r\n      this.subject = library.subject || '';\r\n      this.date = formatDate(new Date(), 'yyyy-MM-dd', 'en') || '';\r\n      this.department = library.department || '';\r\n      this.type = library.type || '';\r\n      this.status = library.status || '';\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { LibraryService } from '../../library.service';\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormGroup,\r\n  FormBuilder\r\n} from '@angular/forms';\r\nimport { Library } from '../../library.model';\r\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { formatDate } from '@angular/common';\r\n@Component({\r\n  selector: 'app-form-dialog',\r\n  templateUrl: './form-dialog.component.html',\r\n  styleUrls: ['./form-dialog.component.sass'],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: 'en-GB' }]\r\n})\r\nexport class FormDialogComponent {\r\n  action: string;\r\n  dialogTitle: string;\r\n  libraryForm: FormGroup;\r\n  library: Library;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public libraryService: LibraryService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === 'edit') {\r\n      console.log(data.library.date);\r\n      this.dialogTitle = data.library.title;\r\n      this.library = data.library;\r\n    } else {\r\n      this.dialogTitle = 'New Library Asset';\r\n      this.library = new Library({});\r\n    }\r\n    this.libraryForm = this.createContactForm();\r\n  }\r\n  formControl = new FormControl('', [\r\n    Validators.required\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError('required')\r\n      ? 'Required field'\r\n      : this.formControl.hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      id: [this.library.id],\r\n      no: [this.library.no, [Validators.required]],\r\n      title: [this.library.title, [Validators.required]],\r\n      subject: [this.library.subject, [Validators.required]],\r\n      date: [\r\n        formatDate(this.library.date, 'yyyy-MM-dd', 'en'),\r\n        [Validators.required]\r\n      ],\r\n      department: [this.library.department, [Validators.required]],\r\n      type: [this.library.type, [Validators.required]],\r\n      status: [this.library.status, [Validators.required]]\r\n    });\r\n  }\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  public confirmAdd(): void {\r\n    this.libraryService.addLibrary(this.libraryForm.getRawValue());\r\n  }\r\n}\r\n","<div class=\"addContainer\">\r\n    <div class=\"modalHeader\">\r\n        <div class=\"editRowModal\">\r\n            <div class=\"modalHeader clearfix\">\r\n                <div class=\"modal-about\">\r\n                    <div class=\"font-weight-bold p-t-5 font-17\">\r\n                        {{dialogTitle}}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </div>\r\n    <div mat-dialog-content>\r\n        <form class=\"register-form m-4\" [formGroup]=\"libraryForm\" (ngSubmit)=\"submit\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Bill No</mat-label>\r\n                        <input matInput formControlName=\"no\" required>\r\n                        <mat-icon matSuffix>receipt</mat-icon>\r\n                        <mat-error *ngIf=\"libraryForm.get('no').hasError('required')\">\r\n                            Please enter bill no\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Title</mat-label>\r\n                        <input matInput formControlName=\"title\" required>\r\n                        <mat-icon matSuffix>credit_card</mat-icon>\r\n                        <mat-error *ngIf=\"libraryForm.get('title').hasError('required')\">\r\n                            Please enter title\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Subject</mat-label>\r\n                        <mat-select formControlName=\"subject\" required>\r\n                            <mat-option [value]=\"'mathematics'\">\r\n                                Mathematics\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'java'\">\r\n                                Java\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'networking'\">\r\n                                Networking\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'politics'\">\r\n                                Politics\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'animation'\">\r\n                                Animation\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'other'\">\r\n                                Other\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"libraryForm.get('subject').hasError('required')\">\r\n                            Subject is required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Purchase date</mat-label>\r\n                        <input matInput [matDatepicker]=\"picker\" formControlName=\"date\" required>\r\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #picker></mat-datepicker>\r\n                        <mat-error *ngIf=\"libraryForm.get('date').hasError('required')\">\r\n                            Please select date\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Select Department</mat-label>\r\n                        <mat-select formControlName=\"department\" required>\r\n                            <mat-option [value]=\"'mechanical'\">\r\n                                Mechanical\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'science'\">\r\n                                Science\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'mathematics'\">\r\n                                Mathematics\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'computer'\">\r\n                                Computer\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'civil'\">\r\n                                Civil\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'management'\">\r\n                                Management\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"libraryForm.get('department').hasError('required')\">\r\n                            Select Any Department\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Asset Type</mat-label>\r\n                        <mat-select formControlName=\"type\" required>\r\n                            <mat-option [value]=\"'book'\">\r\n                                Book\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'cd'\">\r\n                                CD\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'dvd'\">\r\n                                DVD\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'news paper'\">\r\n                                News Paper\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"libraryForm.get('type').hasError('required')\">\r\n                            Select Any Department\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Status</mat-label>\r\n                        <mat-select formControlName=\"status\" required>\r\n                            <mat-option [value]=\"'in stock'\">\r\n                                In Stock\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'out of stock'\">\r\n                                Out Of Stock\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'issue'\">\r\n                                Issue\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'repair'\">\r\n                                Repair\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"libraryForm.get('status').hasError('required')\">\r\n                            Select Any Status\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                    <div class=\"example-button-row\">\r\n                        <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!libraryForm.valid\"\r\n                            [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\r\n                        <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\nimport { LibraryRoutingModule } from './library-routing.module';\r\nimport { AllAssetsComponent } from './all-assets/all-assets.component';\r\nimport { AddAssetComponent } from './add-asset/add-asset.component';\r\nimport { EditAssetComponent } from './edit-asset/edit-asset.component';\r\nimport { DeleteDialogComponent } from './all-assets/dialogs/delete/delete.component';\r\nimport { FormDialogComponent } from './all-assets/dialogs/form-dialog/form-dialog.component';\r\nimport { LibraryService } from './all-assets/library.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AllAssetsComponent,\r\n    AddAssetComponent,\r\n    EditAssetComponent,\r\n    DeleteDialogComponent,\r\n    FormDialogComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSortModule,\r\n    MatCheckboxModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatSelectModule,\r\n    MaterialFileInputModule,\r\n    MatDatepickerModule,\r\n    MatMenuModule,\r\n    LibraryRoutingModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  providers: [LibraryService],\r\n})\r\nexport class LibraryModule {}\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { LibraryService } from '../../library.service';\r\n@Component({\r\n  selector: 'app-delete',\r\n  templateUrl: './delete.component.html',\r\n  styleUrls: ['./delete.component.sass']\r\n})\r\nexport class DeleteDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public libraryService: LibraryService\r\n  ) {}\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    this.libraryService.deleteLibrary(this.data.id);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <h3 mat-dialog-title>Are you sure?</h3>\r\n    <div mat-dialog-content>\r\n        <ul class=\"clearfix\">\r\n            <li>\r\n                <p><span class=\"font-weight-bold\"> Bill No: </span>{{data.no}}</p>\r\n            </li>\r\n            <li>\r\n                <p><span class=\"font-weight-bold\"> Title: </span>{{ data.title }}</p>\r\n            </li>\r\n            <li>\r\n                <p>\r\n                    <span class=\"font-weight-bold\">Subject: </span>{{data.subject}}\r\n                </p>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div mat-dialog-actions class=\"mb-1\">\r\n        <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\r\n            Delete\r\n        </button>\r\n        <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-add-asset',\r\n  templateUrl: './add-asset.component.html',\r\n  styleUrls: ['./add-asset.component.sass']\r\n})\r\nexport class AddAssetComponent {\r\n  libraryForm: FormGroup;\r\n  constructor(private fb: FormBuilder) {\r\n    this.libraryForm = this.fb.group({\r\n      no: ['', [Validators.required]],\r\n      title: ['', [Validators.required]],\r\n      subject: ['', [Validators.required]],\r\n      autherName: [''],\r\n      publisher: [''],\r\n      department: ['', [Validators.required]],\r\n      aType: ['', [Validators.required]],\r\n      date: ['', [Validators.required]],\r\n      price: ['', [Validators.required]],\r\n      status: [''],\r\n      details: ['']\r\n    });\r\n  }\r\n  onSubmit() {\r\n    console.log('Form Value', this.libraryForm.value);\r\n  }\r\n}\r\n","<section class=\"content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"block-header\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <ul class=\"breadcrumb breadcrumb-style \">\r\n                        <li class=\"breadcrumb-item\">\r\n                            <h4 class=\"page-title\">Library</h4>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-1\">\r\n                            <a routerLink=\"/admin/dashboard/main\">\r\n                                <i class=\"fas fa-home\"></i> Home</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-2\">\r\n                            <a href=\"#\" onClick=\"return false;\">Library</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item active\">Add Library Asset</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row clearfix\">\r\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"header\">\r\n                        <h2>Add Library Asset</h2>\r\n                        \r\n                    </div>\r\n                    <div class=\"body\">\r\n                        <form class=\"m-4\" [formGroup]=\"libraryForm\" (ngSubmit)=\"onSubmit()\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Bill No</mat-label>\r\n                                        <input matInput formControlName=\"no\" required>\r\n                                        <mat-error *ngIf=\"libraryForm.get('no').hasError('required')\">\r\n                                            Bill no is required\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Title</mat-label>\r\n                                        <input matInput formControlName=\"title\" required>\r\n                                        <mat-error *ngIf=\"libraryForm.get('title').hasError('required')\">\r\n                                            Title is required\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Subject</mat-label>\r\n                                        <mat-select formControlName=\"subject\" required>\r\n                                            <mat-option [value]=\"'mathematics'\">\r\n                                                Mathematics\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'java'\">\r\n                                                Java\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'networking'\">\r\n                                                Networking\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'politics'\">\r\n                                                Politics\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'animation'\">\r\n                                                Animation\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'other'\">\r\n                                                Other\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"libraryForm.get('subject').hasError('required')\">\r\n                                            Subject is required\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Auther Name</mat-label>\r\n                                        <input matInput formControlName=\"autherName\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Publisher</mat-label>\r\n                                        <input matInput formControlName=\"publisher\" required>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Department</mat-label>\r\n                                        <mat-select formControlName=\"department\" required>\r\n                                            <mat-option [value]=\"'mechanical'\">\r\n                                                Mechanical\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'science'\">\r\n                                                Science\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'mathematics'\">\r\n                                                Mathematics\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'computer'\">\r\n                                                Computer\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'civil'\">\r\n                                                Civil\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'management'\">\r\n                                                Management\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"libraryForm.get('department').hasError('required')\">\r\n                                            Select Any Department\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Asset Type</mat-label>\r\n                                        <mat-select formControlName=\"aType\" required>\r\n                                            <mat-option [value]=\"'book'\">\r\n                                                Book\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'cd'\">\r\n                                                CD\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'dvd'\">\r\n                                                DVD\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'news paper'\">\r\n                                                News Paper\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"libraryForm.get('aType').hasError('required')\">\r\n                                            Select Any Department\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Purchase Date</mat-label>\r\n                                        <input matInput [matDatepicker]=\"picker\" formControlName=\"date\" required>\r\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                                        <mat-datepicker #picker></mat-datepicker>\r\n                                        <mat-error *ngIf=\"libraryForm.get('date').hasError('required')\">\r\n                                            Please select date\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Price</mat-label>\r\n                                        <input matInput formControlName=\"price\" required>\r\n                                        <mat-error *ngIf=\"libraryForm.get('price').hasError('required')\">\r\n                                            Enter price\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Status</mat-label>\r\n                                        <mat-select formControlName=\"status\" required>\r\n                                            <mat-option [value]=\"'in stock'\">\r\n                                                In Stock\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'out of stock'\">\r\n                                                Out Of Stock\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'issue'\">\r\n                                                Issue\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'repair'\">\r\n                                                Repair\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"libraryForm.get('status').hasError('required')\">\r\n                                            Select Any Status\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Details</mat-label>\r\n                                        <textarea matInput formControlName=\"details\"></textarea>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                                    <button class=\"mr-3\" [disabled]=\"!libraryForm.valid \" mat-raised-button\r\n                                        color=\"primary\">Submit</button>\r\n                                    <button type=\"button\" mat-button>Cancel</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Library } from './library.model';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\n@Injectable()\r\nexport class LibraryService {\r\n  private readonly API_URL = 'assets/data/library.json';\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<Library[]> = new BehaviorSubject<Library[]>([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {}\r\n  get data(): Library[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllLibrarys(): void {\r\n    this.httpClient.get<Library[]>(this.API_URL).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + ' ' + error.message);\r\n      }\r\n    );\r\n  }\r\n  addLibrary(library: Library): void {\r\n    this.dialogData = library;\r\n\r\n    /*  this.httpClient.post(this.API_URL, library).subscribe(data => {\r\n      this.dialogData = library;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updateLibrary(library: Library): void {\r\n    this.dialogData = library;\r\n\r\n    /* this.httpClient.put(this.API_URL + library.id, library).subscribe(data => {\r\n      this.dialogData = library;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deleteLibrary(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AllAssetsComponent } from './all-assets/all-assets.component';\r\nimport { AddAssetComponent } from './add-asset/add-asset.component';\r\nimport { EditAssetComponent } from './edit-asset/edit-asset.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'all-assets',\r\n    component: AllAssetsComponent\r\n  },\r\n  {\r\n    path: 'add-asset',\r\n    component: AddAssetComponent\r\n  },\r\n  {\r\n    path: 'edit-asset',\r\n    component: EditAssetComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LibraryRoutingModule {}\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-edit-asset',\r\n  templateUrl: './edit-asset.component.html',\r\n  styleUrls: ['./edit-asset.component.sass']\r\n})\r\nexport class EditAssetComponent {\r\n  libraryForm: FormGroup;\r\n  formdata = {\r\n    no: 'BN5343534',\r\n    title: 'Master In Java',\r\n    subject: 'java',\r\n    autherName: 'John Deo',\r\n    publisher: 'xyz Publisher',\r\n    department: 'computer',\r\n    aType: 'book',\r\n    date: '2020-02-17T14:22:18Z',\r\n    price: '25$',\r\n    status: 'in stock',\r\n    details: 'Master in java is a good book for java learner.'\r\n  };\r\n  constructor(private fb: FormBuilder) {\r\n    this.libraryForm = this.createContactForm();\r\n  }\r\n  onSubmit() {\r\n    console.log('Form Value', this.libraryForm.value);\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      no: [this.formdata.no, [Validators.required]],\r\n      title: [this.formdata.title, [Validators.required]],\r\n      subject: [this.formdata.subject, [Validators.required]],\r\n      autherName: [this.formdata.autherName],\r\n      publisher: [this.formdata.publisher],\r\n      department: [this.formdata.department, [Validators.required]],\r\n      aType: [this.formdata.aType, [Validators.required]],\r\n      date: [this.formdata.date, [Validators.required]],\r\n      price: [this.formdata.price, [Validators.required]],\r\n      status: [this.formdata.status],\r\n      details: [this.formdata.details]\r\n    });\r\n  }\r\n}\r\n","<section class=\"content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"block-header\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <ul class=\"breadcrumb breadcrumb-style \">\r\n                        <li class=\"breadcrumb-item\">\r\n                            <h4 class=\"page-title\">Library</h4>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-1\">\r\n                            <a routerLink=\"/admin/dashboard/main\">\r\n                                <i class=\"fas fa-home\"></i> Home</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-2\">\r\n                            <a href=\"#\" onClick=\"return false;\">Library</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item active\">Edit Library Asset</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row clearfix\">\r\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"header\">\r\n                        <h2>Edit Library Asset</h2>\r\n                        \r\n                    </div>\r\n                    <div class=\"body\">\r\n                        <form class=\"m-4\" [formGroup]=\"libraryForm\" (ngSubmit)=\"onSubmit()\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Bill No</mat-label>\r\n                                        <input matInput formControlName=\"no\" required>\r\n                                        <mat-error *ngIf=\"libraryForm.get('no').hasError('required')\">\r\n                                            Bill no is required\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Title</mat-label>\r\n                                        <input matInput formControlName=\"title\" required>\r\n                                        <mat-error *ngIf=\"libraryForm.get('title').hasError('required')\">\r\n                                            Title is required\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Subject</mat-label>\r\n                                        <mat-select formControlName=\"subject\" required>\r\n                                            <mat-option [value]=\"'mathematics'\">\r\n                                                Mathematics\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'java'\">\r\n                                                Java\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'networking'\">\r\n                                                Networking\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'politics'\">\r\n                                                Politics\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'animation'\">\r\n                                                Animation\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'other'\">\r\n                                                Other\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"libraryForm.get('subject').hasError('required')\">\r\n                                            Subject is required\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Auther Name</mat-label>\r\n                                        <input matInput formControlName=\"autherName\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Publisher</mat-label>\r\n                                        <input matInput formControlName=\"publisher\" required>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Department</mat-label>\r\n                                        <mat-select formControlName=\"department\" required>\r\n                                            <mat-option [value]=\"'mechanical'\">\r\n                                                Mechanical\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'science'\">\r\n                                                Science\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'mathematics'\">\r\n                                                Mathematics\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'computer'\">\r\n                                                Computer\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'civil'\">\r\n                                                Civil\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'management'\">\r\n                                                Management\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"libraryForm.get('department').hasError('required')\">\r\n                                            Select Any Department\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Asset Type</mat-label>\r\n                                        <mat-select formControlName=\"aType\" required>\r\n                                            <mat-option [value]=\"'book'\">\r\n                                                Book\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'cd'\">\r\n                                                CD\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'dvd'\">\r\n                                                DVD\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'news paper'\">\r\n                                                News Paper\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"libraryForm.get('aType').hasError('required')\">\r\n                                            Select Any Department\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Purchase Date</mat-label>\r\n                                        <input matInput [matDatepicker]=\"picker\" formControlName=\"date\" required>\r\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                                        <mat-datepicker #picker></mat-datepicker>\r\n                                        <mat-error *ngIf=\"libraryForm.get('date').hasError('required')\">\r\n                                            Please select date\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Price</mat-label>\r\n                                        <input matInput formControlName=\"price\" required>\r\n                                        <mat-error *ngIf=\"libraryForm.get('price').hasError('required')\">\r\n                                            Enter price\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Status</mat-label>\r\n                                        <mat-select formControlName=\"status\" required>\r\n                                            <mat-option [value]=\"'in stock'\">\r\n                                                In Stock\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'out of stock'\">\r\n                                                Out Of Stock\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'issue'\">\r\n                                                Issue\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'repair'\">\r\n                                                Repair\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"libraryForm.get('status').hasError('required')\">\r\n                                            Select Any Status\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Details</mat-label>\r\n                                        <textarea matInput formControlName=\"details\"></textarea>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                                    <button class=\"mr-3\" [disabled]=\"!libraryForm.valid \" mat-raised-button\r\n                                        color=\"primary\">Submit</button>\r\n                                    <button type=\"button\" mat-button>Cancel</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { LibraryService } from './library.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { Library } from './library.model';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { FormDialogComponent } from './dialogs/form-dialog/form-dialog.component';\r\nimport { DeleteDialogComponent } from './dialogs/delete/delete.component';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\n@Component({\r\n  selector: 'app-all-assets',\r\n  templateUrl: './all-assets.component.html',\r\n  styleUrls: ['./all-assets.component.sass'],\r\n})\r\nexport class AllAssetsComponent implements OnInit {\r\n  displayedColumns = [\r\n    'select',\r\n    'no',\r\n    'title',\r\n    'subject',\r\n    'date',\r\n    'department',\r\n    'type',\r\n    'status',\r\n    'actions',\r\n  ];\r\n  exampleDatabase: LibraryService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<Library>(true, []);\r\n  id: number;\r\n  library: Library | null;\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public libraryService: LibraryService,\r\n    private snackBar: MatSnackBar\r\n  ) {}\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild('filter', { static: true }) filter: ElementRef;\r\n  @ViewChild(MatMenuTrigger)\r\n  contextMenu: MatMenuTrigger;\r\n  contextMenuPosition = { x: '0px', y: '0px' };\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n  addNew() {\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        library: this.library,\r\n        action: 'add',\r\n      },\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // After dialog is closed we're doing frontend updates\r\n        // For add we're just pushing a new row inside DataService\r\n        this.exampleDatabase.dataChange.value.unshift(\r\n          this.libraryService.getDialogData()\r\n        );\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'snackbar-success',\r\n          'Add Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  editCall(row) {\r\n    this.id = row.id;\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        library: row,\r\n        action: 'edit',\r\n      },\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // When using an edit things are little different, firstly we find record inside DataService by id\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // Then you update that record using data from dialogData (values you enetered)\r\n        this.exampleDatabase.dataChange.value[\r\n          foundIndex\r\n        ] = this.libraryService.getDialogData();\r\n        // And lastly refresh table\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'black',\r\n          'Edit Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  deleteItem(row) {\r\n    this.id = row.id;\r\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: row,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // for delete we use splice in order to remove single object from DataService\r\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'snackbar-danger',\r\n          'Delete Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.renderedData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.renderedData.forEach((row) =>\r\n          this.selection.select(row)\r\n        );\r\n  }\r\n  removeSelectedRows() {\r\n    const totalSelect = this.selection.selected.length;\r\n    this.selection.selected.forEach((item) => {\r\n      const index: number = this.dataSource.renderedData.findIndex(\r\n        (d) => d === item\r\n      );\r\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\r\n      this.exampleDatabase.dataChange.value.splice(index, 1);\r\n      this.refreshTable();\r\n      this.selection = new SelectionModel<Library>(true, []);\r\n    });\r\n    this.showNotification(\r\n      'snackbar-danger',\r\n      totalSelect + ' Record Delete Successfully...!!!',\r\n      'bottom',\r\n      'center'\r\n    );\r\n  }\r\n  public loadData() {\r\n    this.exampleDatabase = new LibraryService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    fromEvent(this.filter.nativeElement, 'keyup').subscribe(() => {\r\n      if (!this.dataSource) {\r\n        return;\r\n      }\r\n      this.dataSource.filter = this.filter.nativeElement.value;\r\n    });\r\n  }\r\n  showNotification(colorName, text, placementFrom, placementAlign) {\r\n    this.snackBar.open(text, '', {\r\n      duration: 2000,\r\n      verticalPosition: placementFrom,\r\n      horizontalPosition: placementAlign,\r\n      panelClass: colorName,\r\n    });\r\n  }\r\n  // context menu\r\n  onContextMenu(event: MouseEvent, item: Library) {\r\n    event.preventDefault();\r\n    this.contextMenuPosition.x = event.clientX + 'px';\r\n    this.contextMenuPosition.y = event.clientY + 'px';\r\n    this.contextMenu.menuData = { item: item };\r\n    this.contextMenu.menu.focusFirstItem('mouse');\r\n    this.contextMenu.openMenu();\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<Library> {\r\n  filterChange = new BehaviorSubject('');\r\n  get filter(): string {\r\n    return this.filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this.filterChange.next(filter);\r\n  }\r\n  filteredData: Library[] = [];\r\n  renderedData: Library[] = [];\r\n  constructor(\r\n    public exampleDatabase: LibraryService,\r\n    public paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<Library[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this.exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this.filterChange,\r\n      this.paginator.page,\r\n    ];\r\n    this.exampleDatabase.getAllLibrarys();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this.exampleDatabase.data\r\n          .slice()\r\n          .filter((library: Library) => {\r\n            const searchStr = (\r\n              library.no +\r\n              library.title +\r\n              library.subject +\r\n              library.department +\r\n              library.type +\r\n              library.status\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this.paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() {}\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: Library[]): Library[] {\r\n    if (!this._sort.active || this._sort.direction === '') {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = '';\r\n      let propertyB: number | string = '';\r\n      switch (this._sort.active) {\r\n        case 'id':\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case 'no':\r\n          [propertyA, propertyB] = [a.no, b.no];\r\n          break;\r\n        case 'title':\r\n          [propertyA, propertyB] = [a.title, b.title];\r\n          break;\r\n        // case 'date': [propertyA, propertyB] = [a.date, b.date]; break;\r\n        case 'subject':\r\n          [propertyA, propertyB] = [a.subject, b.subject];\r\n          break;\r\n        case 'department':\r\n          [propertyA, propertyB] = [a.department, b.department];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">View Librarys</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Librarys</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">View</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n        <div class=\"card\">\r\n          <div class=\"body\">\r\n            <div class=\"responsive_table\">\r\n              <div class=\"materialTableHeader\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-8\">\r\n                    <ul class=\"header-buttons-left ml-0\">\r\n                      <li class=\"dropdown\">\r\n                        <h2>\r\n                          <strong>Librarys</strong></h2>\r\n                      </li>\r\n                      <li class=\"dropdown m-l-20\">\r\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\r\n                          aria-label=\"Search box\">\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\r\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\r\n                            <mat-icon class=\"col-white\">delete\r\n                            </mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div class=\"col-4\">\r\n                    <ul class=\"header-buttons\">\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\r\n                            <mat-icon class=\"col-white\">add</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\r\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\r\n                <!-- Checkbox Column -->\r\n                <ng-container matColumnDef=\"select\">\r\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\r\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"no\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Bill No</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.no}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"title\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Title</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.title}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"subject\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Subject</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.subject}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"date\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Purchase Date</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.date | date: 'MM/dd/yyyy' }}\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"department\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Department</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.department}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"type\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Type</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.type}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"status\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Status\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.status}}</mat-cell>\r\n                </ng-container>\r\n                <!-- actions -->\r\n                <ng-container matColumnDef=\"actions\">\r\n                  <mat-header-cell *matHeaderCellDef class=\"pr-0\">Actions</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"editCall(row)\">\r\n                      <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"deleteItem(row)\">\r\n                      <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\r\n                    </button>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\r\n                  [style.cursor]=\"'pointer'\" matRipple>\r\n                </mat-row>\r\n              </mat-table>\r\n              <!-- Loading spinner -->\r\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\r\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\r\n                </mat-progress-spinner>\r\n              </div>\r\n              <!-- context menu start -->\r\n              <div style=\"visibility: hidden; position: fixed\" [style.left]=\"contextMenuPosition.x\"\r\n                [style.top]=\"contextMenuPosition.y\" [matMenuTriggerFor]=\"contextMenu\">\r\n              </div>\r\n              <mat-menu #contextMenu=\"matMenu\">\r\n                <ng-template matMenuContent let-item=\"item\">\r\n                  <button mat-menu-item (click)=\"addNew()\">\r\n                    <mat-icon>add_box</mat-icon>\r\n                    <span>Add Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"editCall(item)\">\r\n                    <mat-icon>create</mat-icon>\r\n                    <span>Edit Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"deleteItem(item)\">\r\n                    <mat-icon>delete</mat-icon>\r\n                    <span>Delete Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"refresh()\">\r\n                    <mat-icon>refresh</mat-icon>\r\n                    <span>Refresh Record</span>\r\n                  </button>\r\n                  <button mat-menu-item disabled>\r\n                    <mat-icon>no_encryption</mat-icon>\r\n                    <span>Disable</span>\r\n                  </button>\r\n                  <button mat-menu-item [matMenuTriggerFor]=\"nestedmenu\">\r\n                    <mat-icon>list_alt</mat-icon>\r\n                    <span> Nested Menu</span>\r\n                  </button>\r\n                </ng-template>\r\n              </mat-menu>\r\n              <mat-menu #nestedmenu=\"matMenu\">\r\n                <button mat-menu-item>\r\n                  <mat-icon>mail_outline</mat-icon>\r\n                  <span>Item 1</span>\r\n                </button>\r\n                <button mat-menu-item>\r\n                  <mat-icon>call</mat-icon>\r\n                  <span>Item 2</span>\r\n                </button>\r\n                <button mat-menu-item>\r\n                  <mat-icon>chat</mat-icon>\r\n                  <span>Item 3</span>\r\n                </button>\r\n              </mat-menu>\r\n              <!-- context menu end -->\r\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\r\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\r\n                No results\r\n              </div>\r\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\r\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n              </mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n"]}