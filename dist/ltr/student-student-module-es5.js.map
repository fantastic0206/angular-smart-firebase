{"version":3,"sources":["webpack:///src/app/student/leave-request/dialogs/form-dialog/form-dialog.component.ts","webpack:///src/app/student/leave-request/dialogs/form-dialog/form-dialog.component.html","webpack:///src/app/student/leave-request/leave-request.service.ts","webpack:///src/app/student/homework/homework.service.ts","webpack:///src/app/student/student-routing.module.ts","webpack:///src/app/student/homework/homework.component.ts","webpack:///src/app/student/homework/homework.component.html","webpack:///src/app/student/timetable/timetable.component.ts","webpack:///src/app/student/timetable/timetable.component.html","webpack:///src/app/student/student.module.ts","webpack:///src/app/student/leave-request/leave-request.component.ts","webpack:///src/app/student/leave-request/leave-request.component.html","webpack:///src/app/student/settings/settings.component.ts","webpack:///src/app/student/settings/settings.component.html","webpack:///src/app/student/leave-request/dialogs/delete/delete.component.ts","webpack:///src/app/student/leave-request/dialogs/delete/delete.component.html","webpack:///src/app/student/leave-request/leave-request.model.ts"],"names":["FormDialogComponent","dialogRef","data","leaveRequestService","fb","formControl","required","action","dialogTitle","leaveRequest","leaveRequestForm","createContactForm","hasError","group","id","section","applyDate","fromDate","toDate","reason","close","addLeaveRequest","getRawValue","provide","useValue","confirmAdd","onNoClick","selector","templateUrl","styleUrls","providers","LeaveRequestService","httpClient","API_URL","isTblLoading","dataChange","dialogData","get","subscribe","next","error","console","log","name","message","value","HomeworkService","homework","routes","path","component","StudentRoutingModule","forChild","imports","exports","HomeworkComponent","homeworkService","displayedColumns","loadData","getAllIssues","dataSource","dataLength","length","paginator","sort","event","filterValue","target","filter","trim","toLowerCase","firstPage","applyFilter","TimetableComponent","StudentModule","forRoot","echarts","declarations","$event","stopPropagation","selection","LeaveRequestComponent","dialog","snackBar","contextMenuPosition","x","y","open","afterClosed","result","exampleDatabase","unshift","getDialogData","refreshTable","showNotification","row","foundIndex","findIndex","splice","_changePageSize","pageSize","numSelected","selected","numRows","renderedData","isAllSelected","clear","forEach","select","totalSelect","item","index","d","ExampleDataSource","nativeElement","colorName","text","placementFrom","placementAlign","duration","verticalPosition","horizontalPosition","panelClass","preventDefault","clientX","clientY","contextMenu","menuData","menu","focusFirstItem","openMenu","removeSelectedRows","addNew","refresh","_sort","filterChange","filteredData","pageIndex","displayDataChanges","sortChange","page","getAllLeaveRequests","pipe","slice","searchStr","indexOf","sortedData","sortData","startIndex","active","direction","a","b","propertyA","propertyB","valueA","isNaN","valueB","SettingsComponent","DeleteDialogComponent","deleteLeaveRequest","confirmDelete","LeaveRequest","getRandomID","status","S4","Math","random","toString","substring"],"mappings":"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","file":"student-student-module-es5.js","sourcesContent":["import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, Inject } from '@angular/core';\nimport { LeaveRequestService } from '../../leave-request.service';\nimport {\n  FormControl,\n  Validators,\n  FormGroup,\n  FormBuilder,\n} from '@angular/forms';\nimport { LeaveRequest } from '../../leave-request.model';\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\n@Component({\n  selector: 'app-form-dialog',\n  templateUrl: './form-dialog.component.html',\n  styleUrls: ['./form-dialog.component.sass'],\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: 'en-GB' }],\n})\nexport class FormDialogComponent {\n  action: string;\n  dialogTitle: string;\n  leaveRequestForm: FormGroup;\n  leaveRequest: LeaveRequest;\n  constructor(\n    public dialogRef: MatDialogRef<FormDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public leaveRequestService: LeaveRequestService,\n    private fb: FormBuilder\n  ) {\n    // Set the defaults\n    this.action = data.action;\n    if (this.action === 'edit') {\n      this.dialogTitle = 'Edit Leave Request';\n      this.leaveRequest = data.leaveRequest;\n    } else {\n      this.dialogTitle = 'New Leave Request';\n      this.leaveRequest = new LeaveRequest({});\n    }\n    this.leaveRequestForm = this.createContactForm();\n  }\n  formControl = new FormControl('', [\n    Validators.required,\n    // Validators.email,\n  ]);\n  getErrorMessage() {\n    return this.formControl.hasError('required')\n      ? 'Required field'\n      : this.formControl.hasError('email')\n      ? 'Not a valid email'\n      : '';\n  }\n  createContactForm(): FormGroup {\n    return this.fb.group({\n      id: [this.leaveRequest.id],\n      class: [this.leaveRequest.class, [Validators.required]],\n      section: [this.leaveRequest.section, [Validators.required]],\n      applyDate: [this.leaveRequest.applyDate, [Validators.required]],\n      fromDate: [this.leaveRequest.fromDate, [Validators.required]],\n      toDate: [this.leaveRequest.toDate, [Validators.required]],\n      reason: [this.leaveRequest.reason, [Validators.required]],\n    });\n  }\n  submit() {\n    // emppty stuff\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  public confirmAdd(): void {\n    this.leaveRequestService.addLeaveRequest(\n      this.leaveRequestForm.getRawValue()\n    );\n  }\n}\n","<div class=\"addContainer\">\n  <div class=\"modalHeader\">\n    <div class=\"editRowModal\">\n      <div class=\"modalHeader clearfix\">\n        <div class=\"modal-about\">\n          <div class=\"font-weight-bold p-t-5 font-17\">\n            {{dialogTitle}}</div>\n        </div>\n      </div>\n    </div>\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n  <div mat-dialog-content>\n    <form class=\"register-form m-4\" [formGroup]=\"leaveRequestForm\" (ngSubmit)=\"submit\">\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Class Name</mat-label>\n            <mat-select formControlName=\"class\" required>\n              <mat-option [value]=\"'R305 A'\">\n                R305 A\n              </mat-option>\n              <mat-option [value]=\"'R452 B'\">\n                R452 B\n              </mat-option>\n              <mat-option [value]=\"'R201 C'\">\n                R201 C\n              </mat-option>\n              <mat-option [value]=\"'R103 F'\">\n                R103 F\n              </mat-option>\n              <mat-option [value]=\"'R503 F'\">\n                R503 F\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"leaveRequestForm.get('class').hasError('required')\">\n              Select Any Subject\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Section Name</mat-label>\n            <input matInput formControlName=\"section\" required>\n            <mat-error *ngIf=\"leaveRequestForm.get('section').hasError('required')\">\n              Section name required\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Apply date</mat-label>\n            <input matInput [matDatepicker]=\"picker1\" formControlName=\"applyDate\" required>\n            <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n            <mat-datepicker #picker1></mat-datepicker>\n            <mat-error *ngIf=\"leaveRequestForm.get('applyDate').hasError('required')\">\n              Please select date\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>From date</mat-label>\n            <input matInput [matDatepicker]=\"picker2\" formControlName=\"fromDate\" required>\n            <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n            <mat-datepicker #picker2></mat-datepicker>\n            <mat-error *ngIf=\"leaveRequestForm.get('fromDate').hasError('required')\">\n              Please select date\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>To date</mat-label>\n            <input matInput [matDatepicker]=\"picker3\" formControlName=\"toDate\" required>\n            <mat-datepicker-toggle matSuffix [for]=\"picker3\"></mat-datepicker-toggle>\n            <mat-datepicker #picker3></mat-datepicker>\n            <mat-error *ngIf=\"leaveRequestForm.get('toDate').hasError('required')\">\n              Please select date\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\" col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Reason</mat-label>\n            <textarea matInput formControlName=\"reason\"></textarea>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n          <div class=\"example-button-row\">\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!leaveRequestForm.valid\"\n              [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { LeaveRequest } from './leave-request.model';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\n@Injectable()\r\nexport class LeaveRequestService {\r\n  private readonly API_URL = 'assets/data/stdLeaveReq.json';\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<LeaveRequest[]> = new BehaviorSubject<\r\n    LeaveRequest[]\r\n  >([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {}\r\n  get data(): LeaveRequest[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllLeaveRequests(): void {\r\n    this.httpClient.get<LeaveRequest[]>(this.API_URL).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + ' ' + error.message);\r\n      }\r\n    );\r\n  }\r\n  addLeaveRequest(leaveRequest: LeaveRequest): void {\r\n    this.dialogData = leaveRequest;\r\n\r\n    /*  this.httpClient.post(this.API_URL, leaveRequest).subscribe(data => {\r\n      this.dialogData = leaveRequest;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updateLeaveRequest(leaveRequest: LeaveRequest): void {\r\n    this.dialogData = leaveRequest;\r\n\r\n    /* this.httpClient.put(this.API_URL + leaveRequest.id, leaveRequest).subscribe(data => {\r\n      this.dialogData = leaveRequest;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deleteLeaveRequest(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Homework } from './homework.modal';\r\nimport { HttpClient } from '@angular/common/http';\r\n@Injectable()\r\nexport class HomeworkService {\r\n  private readonly API_URL = 'assets/data/stdHomework.json';\r\n\r\n  dataChange: BehaviorSubject<Homework[]> = new BehaviorSubject<Homework[]>([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  get data(): Homework[] {\r\n    return this.dataChange.value;\r\n  }\r\n\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n\r\n  /** CRUD METHODS */\r\n  getAllIssues(): Observable<Homework[]> {\r\n    return this.httpClient.get<Homework[]>(this.API_URL);\r\n  }\r\n\r\n  addIssue(homework: Homework): void {\r\n    this.dialogData = homework;\r\n\r\n    /*  this.httpClient.post(this.API_URL, homework).subscribe(data => {\r\n      this.dialogData = homework;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n\r\n  updateIssue(homework: Homework): void {\r\n    this.dialogData = homework;\r\n\r\n    /* this.httpClient.put(this.API_URL + homework.id, homework).subscribe(data => {\r\n      this.dialogData = homework;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n\r\n  deleteIssue(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","import { Page404Component } from './../authentication/page404/page404.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { HomeworkComponent } from './homework/homework.component';\r\nimport { LeaveRequestComponent } from './leave-request/leave-request.component';\r\nimport { TimetableComponent } from './timetable/timetable.component';\r\nimport { SettingsComponent } from './settings/settings.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'dashboard',\r\n    component: DashboardComponent,\r\n  },\r\n  {\r\n    path: 'homework',\r\n    component: HomeworkComponent,\r\n  },\r\n  {\r\n    path: 'leave-request',\r\n    component: LeaveRequestComponent,\r\n  },\r\n  {\r\n    path: 'timetable',\r\n    component: TimetableComponent,\r\n  },\r\n  {\r\n    path: 'settings',\r\n    component: SettingsComponent,\r\n  },\r\n  { path: '**', component: Page404Component },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class StudentRoutingModule {}\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { HomeworkService } from './homework.service';\nimport { Homework } from './homework.modal';\n\n@Component({\n  selector: 'app-homework',\n  templateUrl: './homework.component.html',\n  styleUrls: ['./homework.component.sass'],\n})\nexport class HomeworkComponent implements OnInit {\n  dataSource: MatTableDataSource<Homework>;\n  dataLength: number;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  displayedColumns = [\n    'class',\n    'section',\n    'subject',\n    'homeworkDate',\n    'submissionDate',\n    'evalutionDate',\n    'status',\n  ];\n\n  constructor(\n    public httpClient: HttpClient,\n    private homeworkService: HomeworkService\n  ) {}\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  public loadData() {\n    this.homeworkService = new HomeworkService(this.httpClient);\n    this.homeworkService.getAllIssues().subscribe((data) => {\n      this.dataSource = new MatTableDataSource(data);\n      this.dataSource.data = data;\n      this.dataLength = data.length;\n\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n    <div class=\"block-header\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n          <ul class=\"breadcrumb breadcrumb-style \">\n            <li class=\"breadcrumb-item\">\n              <h4 class=\"page-title\">Homework</h4>\n            </li>\n            <li class=\"breadcrumb-item bcrumb-1\">\n              <a routerLink=\"/patient/dashboard\">\n                <i class=\"fas fa-home\"></i> Home</a>\n            </li>\n            <li class=\"breadcrumb-item active\">Homework</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"responsive_table\">\n          <div class=\"materialTableHeader\">\n            <div class=\"row\">\n              <div class=\"col-8\">\n                <ul class=\"header-buttons-left ml-0\">\n                  <li class=\"dropdown\">\n                    <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                    <input matInput (keyup)=\"applyFilter($event)\" type=\"text\" class=\"browser-default search-field\"\n                      placeholder=\"Search\">\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div class=\"example-container mat-elevation-z8\">\n\n            <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\n              <!-- ID Column -->\n              <ng-container matColumnDef=\"id\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header> ID </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\"> {{row.id}} </mat-cell>\n              </ng-container>\n\n              <!-- Class Column -->\n              <ng-container matColumnDef=\"class\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Class </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\"> {{row.class}} </mat-cell>\n              </ng-container>\n\n              <!-- Section Column -->\n              <ng-container matColumnDef=\"section\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Section </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\"> {{row.section}} </mat-cell>\n              </ng-container>\n\n              <!-- Subject Column -->\n              <ng-container matColumnDef=\"subject\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Subject </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\"> {{row.subject}} </mat-cell>\n              </ng-container>\n\n              <!-- Homework Date Column -->\n              <ng-container matColumnDef=\"homeworkDate\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Homework Date</mat-header-cell>\n                <mat-cell *matCellDef=\"let row\"> {{row.homeworkDate | date: 'MM/dd/yyyy' }}\n                </mat-cell>\n              </ng-container>\n\n              <!-- Submission Date Column -->\n              <ng-container matColumnDef=\"submissionDate\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Submission Date</mat-header-cell>\n                <mat-cell *matCellDef=\"let row\"> {{row.submissionDate | date: 'MM/dd/yyyy' }}\n                </mat-cell>\n              </ng-container>\n\n              <!-- Evalution Date Column -->\n              <ng-container matColumnDef=\"evalutionDate\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Evalution Date</mat-header-cell>\n                <mat-cell *matCellDef=\"let row\"> {{row.evalutionDate | date: 'MM/dd/yyyy' }}\n                </mat-cell>\n              </ng-container>\n\n              <!-- status Column -->\n              <ng-container matColumnDef=\"status\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Status </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\"> {{row.status}} </mat-cell>\n              </ng-container>\n              <!-- actions -->\n              <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n              <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\n              <mat-row *matRowDef=\"let row; columns: displayedColumns;\" [style.cursor]=\"'pointer'\" matRipple>\n              </mat-row>\n            </mat-table>\n            <div class=\"no-results\" [style.display]=\"dataLength == 0 ? '' : 'none'\">\n              No results\n            </div>\n\n            <mat-paginator #paginator [length]=\"dataLength\" [pageIndex]=\"0\" [pageSize]=\"10\"\n              [pageSizeOptions]=\"[5, 10, 25, 100]\">\n            </mat-paginator>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-timetable',\n  templateUrl: './timetable.component.html',\n  styleUrls: ['./timetable.component.sass']\n})\nexport class TimetableComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n    <div class=\"block-header\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n          <ul class=\"breadcrumb breadcrumb-style \">\n            <li class=\"breadcrumb-item\">\n              <h4 class=\"page-title\">Time Table</h4>\n            </li>\n            <li class=\"breadcrumb-item bcrumb-1\">\n              <a routerLink=\"/admin/dashboard/main\">\n                <i class=\"fas fa-home\"></i> Home</a>\n            </li>\n            <li class=\"breadcrumb-item active\">Time Table</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"row clearfix\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"header\">\n            <h2>Time Table\n            </h2>\n          </div>\n          <div class=\"body\">\n            <table class=\"table table-stripped\">\n              <thead>\n                <tr>\n                  <th class=\"text text-center\">Monday</th>\n                  <th class=\"text text-center\">Tuesday</th>\n                  <th class=\"text text-center\">Wednesday</th>\n                  <th class=\"text text-center\">Thursday</th>\n                  <th class=\"text text-center\">Friday</th>\n                  <th class=\"text text-center\">Saturday</th>\n                  <th class=\"text text-center\">Sunday</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td class=\"text text-center\" width=\"14%\">\n                    <div class=\"timetable-block\">\n                      <b class=\"col-green\">Subject: Chemistry\n                      </b><br>\n                      <div>10:00 AM - 10-45 AM</div>\n                      <div>Room Number: 101</div>\n                    </div>\n                    <div class=\"timetable-block\">\n                      <b class=\"col-orange\">Subject: English\n                      </b><br>\n                      <div>10:45 AM - 11:30 AM</div>\n                      <div>Room Number: 101</div>\n                    </div>\n                    <div class=\"timetable-block\">\n                      <b class=\"col-blue\">Subject: Physics\n                      </b><br>\n                      <div>11:30 AM - 12:15 AM</div>\n                      <div>Room Number: 101</div>\n                    </div>\n                    <div class=\"timetable-block\">\n                      <b class=\"col-purple\">Subject: Computer\n                      </b><br>\n                      <div>01:00 AM - 01:45 AM</div>\n                      <div>Room Number: 101</div>\n                    </div>\n                    <div class=\"timetable-block\">\n                      <b class=\"col-teal\">Subject: Geography\n                      </b><br>\n                      <div>01:45 AM - 02:30 AM</div>\n                      <div>Room Number: 101</div>\n                    </div>\n                  </td>\n                  <td class=\"text text-center\" width=\"14%\">\n                    <div class=\"timetable-block\">\n                      <b class=\"col-green\">Subject: Chemistry\n                      </b><br>\n                      <div>10:00 AM - 10-45 AM</div>\n                      <div>Room Number: 101</div>\n                    </div>\n                    <div class=\"timetable-block\">\n                      <b class=\"col-orange\">Subject: English\n                      </b><br>\n                      <div>10:45 AM - 11:30 AM</div>\n                      <div>Room Number: 101</div>\n                    </div>\n                    <div class=\"timetable-block\">\n                      <b class=\"col-blue\">Subject: Physics\n                      </b><br>\n                      <div>11:30 AM - 12:15 AM</div>\n                      <div>Room Number: 101</div>\n                    </div>\n                    <div class=\"timetable-block\">\n                      <b class=\"col-purple\">Subject: Computer\n                      </b><br>\n                      <div>01:00 AM - 01:45 AM</div>\n                      <div>Room Number: 101</div>\n                    </div>\n                    <div class=\"timetable-block\">\n                      <b class=\"col-teal\">Subject: Geography\n                      </b><br>\n                      <div>01:45 AM - 02:30 AM</div>\n                      <div>Room Number: 101</div>\n                    </div>\n                  </td>\n                  <td class=\"text text-center\" width=\"14%\">\n                    <div class=\"timetable-block\">\n                      <b class=\"col-green\">Subject: Chemistry\n                      </b><br>\n                      <div>10:00 AM - 10-45 AM</div>\n                      <div>Room Number: 101</div>\n                    </div>\n                    <div class=\"timetable-block\">\n                      <b class=\"col-orange\">Subject: English\n                      </b><br>\n                      <div>10:45 AM - 11:30 AM</div>\n                      <div>Room Number: 101</div>\n                    </div>\n                    <div class=\"timetable-block\">\n                      <b class=\"col-blue\">Subject: Physics\n                      </b><br>\n                      <div>11:30 AM - 12:15 AM</div>\n                      <div>Room Number: 101</div>\n                    </div>\n                    <div class=\"timetable-block\">\n                      <b class=\"col-purple\">Subject: Computer\n                      </b><br>\n                      <div>01:00 AM - 01:45 AM</div>\n                      <div>Room Number: 101</div>\n                    </div>\n                    <div class=\"timetable-block\">\n                      <b class=\"col-teal\">Subject: Geography\n                      </b><br>\n                      <div>01:45 AM - 02:30 AM</div>\n                      <div>Room Number: 101</div>\n                    </div>\n                  </td>\n                  <td class=\"text text-center\" width=\"14%\">\n                    <div class=\"timetable-block\">\n                      <b class=\"col-green\">Subject: Chemistry\n                      </b><br>\n                      <div>10:00 AM - 10-45 AM</div>\n                      <div>Room Number: 101</div>\n                    </div>\n                    <div class=\"timetable-block\">\n                      <b class=\"col-orange\">Subject: English\n                      </b><br>\n                      <div>10:45 AM - 11:30 AM</div>\n                      <div>Room Number: 101</div>\n                    </div>\n                    <div class=\"timetable-block\">\n                      <b class=\"col-blue\">Subject: Physics\n                      </b><br>\n                      <div>11:30 AM - 12:15 AM</div>\n                      <div>Room Number: 101</div>\n                    </div>\n                    <div class=\"timetable-block\">\n                      <b class=\"col-purple\">Subject: Computer\n                      </b><br>\n                      <div>01:00 AM - 01:45 AM</div>\n                      <div>Room Number: 101</div>\n                    </div>\n                    <div class=\"timetable-block\">\n                      <b class=\"col-teal\">Subject: Geography\n                      </b><br>\n                      <div>01:45 AM - 02:30 AM</div>\n                      <div>Room Number: 101</div>\n                    </div>\n                  </td>\n                  <td class=\"text text-center\" width=\"14%\">\n                    <div class=\"timetable-block\">\n                      <b class=\"col-green\">Subject: Chemistry\n                      </b><br>\n                      <div>10:00 AM - 10-45 AM</div>\n                      <div>Room Number: 101</div>\n                    </div>\n                    <div class=\"timetable-block\">\n                      <b class=\"col-orange\">Subject: English\n                      </b><br>\n                      <div>10:45 AM - 11:30 AM</div>\n                      <div>Room Number: 101</div>\n                    </div>\n                    <div class=\"timetable-block\">\n                      <b class=\"col-blue\">Subject: Physics\n                      </b><br>\n                      <div>11:30 AM - 12:15 AM</div>\n                      <div>Room Number: 101</div>\n                    </div>\n                    <div class=\"timetable-block\">\n                      <b class=\"col-purple\">Subject: Computer\n                      </b><br>\n                      <div>01:00 AM - 01:45 AM</div>\n                      <div>Room Number: 101</div>\n                    </div>\n                    <div class=\"timetable-block\">\n                      <b class=\"col-teal\">Subject: Geography\n                      </b><br>\n                      <div>01:45 AM - 02:30 AM</div>\n                      <div>Room Number: 101</div>\n                    </div>\n                  </td>\n                  <td class=\"text text-center\" width=\"14%\">\n                    <div class=\"timetable-block\">\n                      <b class=\"col-green\">Subject: Chemistry\n                      </b><br>\n                      <div>10:00 AM - 10-45 AM</div>\n                      <div>Room Number: 101</div>\n                    </div>\n                    <div class=\"timetable-block\">\n                      <b class=\"col-orange\">Subject: English\n                      </b><br>\n                      <div>10:45 AM - 11:30 AM</div>\n                      <div>Room Number: 101</div>\n                    </div>\n                    <div class=\"timetable-block\">\n                      <b class=\"col-blue\">Subject: Physics\n                      </b><br>\n                      <div>11:30 AM - 12:15 AM</div>\n                      <div>Room Number: 101</div>\n                    </div>\n                    <div class=\"timetable-block\">\n                      <b class=\"col-purple\">Subject: Computer\n                      </b><br>\n                      <div>01:00 AM - 01:45 AM</div>\n                      <div>Room Number: 101</div>\n                    </div>\n                    <div class=\"timetable-block\">\n                      <b class=\"col-teal\">Subject: Geography\n                      </b><br>\n                      <div>01:45 AM - 02:30 AM</div>\n                      <div>Room Number: 101</div>\n                    </div>\n                  </td>\n                  <td class=\"text text-center\" width=\"14%\">\n\n                    <div class=\"timetable-block clearfix\">\n                      <b class=\"text text-center\">Not <br>Scheduled</b><br>\n                    </div>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { ChartsModule as chartjsModule } from 'ng2-charts';\r\nimport { NgxEchartsModule } from 'ngx-echarts';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\nimport { StudentRoutingModule } from './student-routing.module';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { HomeworkComponent } from './homework/homework.component';\r\nimport { LeaveRequestComponent } from './leave-request/leave-request.component';\r\nimport { DeleteDialogComponent as leaveDeleteComonent } from './leave-request/dialogs/delete/delete.component';\r\nimport { FormDialogComponent } from './leave-request/dialogs/form-dialog/form-dialog.component';\r\nimport { TimetableComponent } from './timetable/timetable.component';\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { HomeworkService } from './homework/homework.service';\r\nimport { LeaveRequestService as stdLeaveReqService } from './leave-request/leave-request.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DashboardComponent,\r\n    HomeworkComponent,\r\n    LeaveRequestComponent,\r\n    leaveDeleteComonent,\r\n    FormDialogComponent,\r\n    TimetableComponent,\r\n    SettingsComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    StudentRoutingModule,\r\n    chartjsModule,\r\n    NgxEchartsModule.forRoot({\r\n      echarts: () => import('echarts'),\r\n    }),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PerfectScrollbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    NgApexchartsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatMenuModule,\r\n    MatSortModule,\r\n    MatCheckboxModule,\r\n    MatTooltipModule,\r\n    OwlDateTimeModule,\r\n    OwlNativeDateTimeModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  providers: [HomeworkService, stdLeaveReqService],\r\n})\r\nexport class StudentModule {}\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { LeaveRequestService } from './leave-request.service';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { LeaveRequest } from './leave-request.model';\nimport { DataSource } from '@angular/cdk/collections';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FormDialogComponent } from './dialogs/form-dialog/form-dialog.component';\nimport { DeleteDialogComponent } from './dialogs/delete/delete.component';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { SelectionModel } from '@angular/cdk/collections';\n\n@Component({\n  selector: 'app-leave-request',\n  templateUrl: './leave-request.component.html',\n  styleUrls: ['./leave-request.component.sass'],\n})\nexport class LeaveRequestComponent implements OnInit {\n  displayedColumns = [\n    'select',\n    'class',\n    'section',\n    'applyDate',\n    'fromDate',\n    'toDate',\n    'reason',\n    'status',\n    'actions',\n  ];\n\n  exampleDatabase: LeaveRequestService | null;\n  dataSource: ExampleDataSource | null;\n  selection = new SelectionModel<LeaveRequest>(true, []);\n  id: number;\n  leaveRequest: LeaveRequest | null;\n  constructor(\n    public httpClient: HttpClient,\n    public dialog: MatDialog,\n    public leaveRequestService: LeaveRequestService,\n    private snackBar: MatSnackBar\n  ) {}\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild('filter', { static: true }) filter: ElementRef;\n  @ViewChild(MatMenuTrigger)\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: '0px', y: '0px' };\n\n  ngOnInit() {\n    this.loadData();\n  }\n  refresh() {\n    this.loadData();\n  }\n  addNew() {\n    const dialogRef = this.dialog.open(FormDialogComponent, {\n      data: {\n        leaveRequest: this.leaveRequest,\n        action: 'add',\n      },\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        // After dialog is closed we're doing frontend updates\n        // For add we're just pushing a new row inside DataService\n        this.exampleDatabase.dataChange.value.unshift(\n          this.leaveRequestService.getDialogData()\n        );\n        this.refreshTable();\n        this.showNotification(\n          'snackbar-success',\n          'Add Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  editCall(row) {\n    this.id = row.id;\n    const dialogRef = this.dialog.open(FormDialogComponent, {\n      data: {\n        leaveRequest: row,\n        action: 'edit',\n      },\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        // When using an edit things are little different, firstly we find record inside DataService by id\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          (x) => x.id === this.id\n        );\n        // Then you update that record using data from dialogData (values you enetered)\n        this.exampleDatabase.dataChange.value[\n          foundIndex\n        ] = this.leaveRequestService.getDialogData();\n        // And lastly refresh table\n        this.refreshTable();\n        this.showNotification(\n          'black',\n          'Edit Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  deleteItem(row) {\n    this.id = row.id;\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: row,\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          (x) => x.id === this.id\n        );\n        // for delete we use splice in order to remove single object from DataService\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\n        this.refreshTable();\n        this.showNotification(\n          'snackbar-danger',\n          'Delete Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  private refreshTable() {\n    this.paginator._changePageSize(this.paginator.pageSize);\n  }\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.renderedData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selection.clear()\n      : this.dataSource.renderedData.forEach((row) =>\n          this.selection.select(row)\n        );\n  }\n  removeSelectedRows() {\n    const totalSelect = this.selection.selected.length;\n    this.selection.selected.forEach((item) => {\n      const index: number = this.dataSource.renderedData.findIndex(\n        (d) => d === item\n      );\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\n      this.exampleDatabase.dataChange.value.splice(index, 1);\n      this.refreshTable();\n      this.selection = new SelectionModel<LeaveRequest>(true, []);\n    });\n    this.showNotification(\n      'snackbar-danger',\n      totalSelect + ' Record Delete Successfully...!!!',\n      'bottom',\n      'center'\n    );\n  }\n  public loadData() {\n    this.exampleDatabase = new LeaveRequestService(this.httpClient);\n    this.dataSource = new ExampleDataSource(\n      this.exampleDatabase,\n      this.paginator,\n      this.sort\n    );\n    fromEvent(this.filter.nativeElement, 'keyup').subscribe(() => {\n      if (!this.dataSource) {\n        return;\n      }\n      this.dataSource.filter = this.filter.nativeElement.value;\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this.snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName,\n    });\n  }\n  // context menu\n  onContextMenu(event: MouseEvent, item: LeaveRequest) {\n    event.preventDefault();\n    this.contextMenuPosition.x = event.clientX + 'px';\n    this.contextMenuPosition.y = event.clientY + 'px';\n    this.contextMenu.menuData = { item: item };\n    this.contextMenu.menu.focusFirstItem('mouse');\n    this.contextMenu.openMenu();\n  }\n}\nexport class ExampleDataSource extends DataSource<LeaveRequest> {\n  filterChange = new BehaviorSubject('');\n  get filter(): string {\n    return this.filterChange.value;\n  }\n  set filter(filter: string) {\n    this.filterChange.next(filter);\n  }\n  filteredData: LeaveRequest[] = [];\n  renderedData: LeaveRequest[] = [];\n  constructor(\n    public exampleDatabase: LeaveRequestService,\n    public paginator: MatPaginator,\n    public _sort: MatSort\n  ) {\n    super();\n    // Reset to the first page when the user changes the filter.\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\n  }\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<LeaveRequest[]> {\n    // Listen for any changes in the base data, sorting, filtering, or pagination\n    const displayDataChanges = [\n      this.exampleDatabase.dataChange,\n      this._sort.sortChange,\n      this.filterChange,\n      this.paginator.page,\n    ];\n    this.exampleDatabase.getAllLeaveRequests();\n    return merge(...displayDataChanges).pipe(\n      map(() => {\n        // Filter data\n        this.filteredData = this.exampleDatabase.data\n          .slice()\n          .filter((leaveRequest: LeaveRequest) => {\n            const searchStr = (\n              leaveRequest.class +\n              leaveRequest.section +\n              leaveRequest.applyDate +\n              leaveRequest.reason\n            ).toLowerCase();\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\n          });\n        // Sort filtered data\n        const sortedData = this.sortData(this.filteredData.slice());\n        // Grab the page's slice of the filtered sorted data.\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        this.renderedData = sortedData.splice(\n          startIndex,\n          this.paginator.pageSize\n        );\n        return this.renderedData;\n      })\n    );\n  }\n  disconnect() {}\n  /** Returns a sorted copy of the database data. */\n  sortData(data: LeaveRequest[]): LeaveRequest[] {\n    if (!this._sort.active || this._sort.direction === '') {\n      return data;\n    }\n    return data.sort((a, b) => {\n      let propertyA: number | string = '';\n      let propertyB: number | string = '';\n      switch (this._sort.active) {\n        case 'id':\n          [propertyA, propertyB] = [a.id, b.id];\n          break;\n        case 'class':\n          [propertyA, propertyB] = [a.class, b.class];\n          break;\n        case 'section':\n          [propertyA, propertyB] = [a.section, b.section];\n          break;\n        case 'applyDate':\n          [propertyA, propertyB] = [a.applyDate, b.applyDate];\n          break;\n        case 'fromDate':\n          [propertyA, propertyB] = [a.fromDate, b.fromDate];\n          break;\n      }\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n      return (\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\n      );\n    });\n  }\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n    <div class=\"block-header\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n          <ul class=\"breadcrumb breadcrumb-style \">\n            <li class=\"breadcrumb-item\">\n              <h4 class=\"page-title\">All Leave Requests</h4>\n            </li>\n            <li class=\"breadcrumb-item bcrumb-1\">\n              <a routerLink=\"/teacher/dashboard\">\n                <i class=\"fas fa-home\"></i> Home</a>\n            </li>\n            <li class=\"breadcrumb-item bcrumb-2\">\n              <a href=\"#\" onClick=\"return false;\">Leave Requests</a>\n            </li>\n            <li class=\"breadcrumb-item active\">All</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"body\">\n            <div class=\"responsive_table\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ml-0\">\n                      <li class=\"dropdown\">\n                        <h2>\n                          <strong>Leave Requests</strong></h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\n                          aria-label=\"Search box\">\n                      </li>\n                      <li>\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\n                            <mat-icon class=\"col-white\">delete\n                            </mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"icon-button-demo\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"icon-button-demo\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\n                <!-- Checkbox Column -->\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n                <!-- ID Column -->\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"class\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Class</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                    {{row.class}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"section\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Section\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                    {{row.section}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"applyDate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Apply Date</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                    {{row.applyDate | date: 'MM/dd/yyyy'}}\n                  </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"fromDate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>From Date</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                    {{row.fromDate | date: 'MM/dd/yyyy'}}\n                  </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"toDate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>To Date</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                    {{row.toDate | date: 'MM/dd/yyyy'}}\n                  </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"reason\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Reason\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\" class=\"column-nowrap\">\n                    {{row.reason}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"status\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Status</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                    {{row.status}}</mat-cell>\n                </ng-container>\n                <!-- actions -->\n                <ng-container matColumnDef=\"actions\">\n                  <mat-header-cell *matHeaderCellDef class=\"pr-0\">Actions</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"editCall(row)\">\n                      <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\n                    </button>\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"deleteItem(row)\">\n                      <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\n                  [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n              </mat-table>\n              <!-- Loading spinner -->\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <!-- context menu start -->\n              <div style=\"visibility: hidden; position: fixed\" [style.left]=\"contextMenuPosition.x\"\n                [style.top]=\"contextMenuPosition.y\" [matMenuTriggerFor]=\"contextMenu\">\n              </div>\n              <mat-menu #contextMenu=\"matMenu\">\n                <ng-template matMenuContent let-item=\"item\">\n                  <button mat-menu-item (click)=\"addNew()\">\n                    <mat-icon>add_box</mat-icon>\n                    <span>Add Record</span>\n                  </button>\n                  <button mat-menu-item (click)=\"editCall(item)\">\n                    <mat-icon>create</mat-icon>\n                    <span>Edit Record</span>\n                  </button>\n                  <button mat-menu-item (click)=\"deleteItem(item)\">\n                    <mat-icon>delete</mat-icon>\n                    <span>Delete Record</span>\n                  </button>\n                  <button mat-menu-item (click)=\"refresh()\">\n                    <mat-icon>refresh</mat-icon>\n                    <span>Refresh Record</span>\n                  </button>\n                  <button mat-menu-item disabled>\n                    <mat-icon>no_encryption</mat-icon>\n                    <span>Disable</span>\n                  </button>\n                  <button mat-menu-item [matMenuTriggerFor]=\"nestedmenu\">\n                    <mat-icon>list_alt</mat-icon>\n                    <span> Nested Menu</span>\n                  </button>\n                </ng-template>\n              </mat-menu>\n              <mat-menu #nestedmenu=\"matMenu\">\n                <button mat-menu-item>\n                  <mat-icon>mail_outline</mat-icon>\n                  <span>Item 1</span>\n                </button>\n                <button mat-menu-item>\n                  <mat-icon>call</mat-icon>\n                  <span>Item 2</span>\n                </button>\n                <button mat-menu-item>\n                  <mat-icon>chat</mat-icon>\n                  <span>Item 3</span>\n                </button>\n              </mat-menu>\n              <!-- context menu end -->\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\n                No results\n              </div>\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\n              </mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.sass']\n})\nexport class SettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n    <div class=\"block-header\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n          <ul class=\"breadcrumb breadcrumb-style \">\n            <li class=\"breadcrumb-item\">\n              <h4 class=\"page-title\">Settings</h4>\n            </li>\n            <li class=\"breadcrumb-item bcrumb-1\">\n              <a routerLink=\"/doctor/dashboard\">\n                <i class=\"fas fa-home\"></i> Home</a>\n            </li>\n            <li class=\"breadcrumb-item active\">Settings</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"card\">\n      <div class=\"header\">\n        <h2>Security Settings</h2>\n      </div>\n      <div class=\"body\">\n        <div class=\"example-container\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Username</mat-label>\n            <input matInput>\n          </mat-form-field>\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Current Password</mat-label>\n            <input matInput type=\"password\">\n          </mat-form-field>\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>New Password</mat-label>\n            <input matInput type=\"password\">\n          </mat-form-field>\n        </div>\n        <button mat-raised-button color=\"primary\">Save</button>\n      </div>\n    </div>\n    <div class=\"card\">\n      <div class=\"header\">\n        <h2>Account Settings</h2>\n      </div>\n      <div class=\"body\">\n        <div class=\"row clearfix\">\n          <div class=\"col-lg-6 col-md-12\">\n            <div class=\"form-group\">\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>First Name</mat-label>\n                <input matInput>\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"col-lg-6 col-md-12\">\n            <div class=\"form-group\">\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>Last Name</mat-label>\n                <input matInput>\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"col-lg-4 col-md-12\">\n            <div class=\"form-group\">\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>City</mat-label>\n                <input matInput>\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"col-lg-4 col-md-12\">\n            <div class=\"form-group\">\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>Email</mat-label>\n                <input matInput>\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"col-lg-4 col-md-12\">\n            <div class=\"form-group\">\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>Country</mat-label>\n                <input matInput>\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"col-md-12\">\n            <div class=\"form-group\">\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>Address</mat-label>\n                <textarea matInput></textarea>\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"col-md-12\">\n            <button mat-raised-button color=\"primary\">Save Changes</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, Inject } from '@angular/core';\nimport { LeaveRequestService } from '../../leave-request.service';\n@Component({\n  selector: 'app-delete',\n  templateUrl: './delete.component.html',\n  styleUrls: ['./delete.component.sass'],\n})\nexport class DeleteDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public leaveRequestService: LeaveRequestService\n  ) {}\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  confirmDelete(): void {\n    this.leaveRequestService.deleteLeaveRequest(this.data.id);\n  }\n}\n","<div class=\"container\">\n  <h3 mat-dialog-title>Are you sure?</h3>\n  <div mat-dialog-content>\n    <ul class=\"clearfix\">\n      <li>\n        <p><span class=\"font-weight-bold\"> Class: </span>{{data.class}}</p>\n      </li>\n      <li>\n        <p><span class=\"font-weight-bold\"> Section: </span>{{ data.section }}</p>\n      </li>\n      <li>\n        <p>\n          <span class=\"font-weight-bold\">Apply Date: </span>{{data.applyDate | date: 'MM/dd/yyyy'}}\n        </p>\n      </li>\n    </ul>\n  </div>\n  <div mat-dialog-actions class=\"mb-1\">\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\n      Delete\n    </button>\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n  </div>\n</div>\n","export class LeaveRequest {\r\n  id: number;\r\n  class: string;\r\n  section: string;\r\n  applyDate: string;\r\n  fromDate: string;\r\n  toDate: string;\r\n  reason: string;\r\n  status: string;\r\n  constructor(leaveRequest) {\r\n    {\r\n      this.id = leaveRequest.id || this.getRandomID();\r\n      this.class = leaveRequest.class || '';\r\n      this.section = leaveRequest.section || '';\r\n      this.applyDate = leaveRequest.applyDate || '';\r\n      this.fromDate = leaveRequest.fromDate || '';\r\n      this.toDate = leaveRequest.toDate || '';\r\n      this.reason = leaveRequest.reason || '';\r\n      this.status = leaveRequest.status || '';\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n"]}