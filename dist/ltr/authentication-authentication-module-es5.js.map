{"version":3,"sources":["webpack:///src/app/authentication/locked/locked.component.ts","webpack:///src/app/authentication/locked/locked.component.html","webpack:///src/app/authentication/verify-email/verify-email.component.ts","webpack:///src/app/authentication/verify-email/verify-email.component.html","webpack:///src/app/authentication/page500/page500.component.ts","webpack:///src/app/authentication/page500/page500.component.html","webpack:///src/app/authentication/authentication.module.ts","webpack:///src/app/authentication/signin/signin.component.ts","webpack:///src/app/authentication/signin/signin.component.html","webpack:///src/app/authentication/authentication-routing.module.ts","webpack:///src/app/authentication/signup/signup.component.ts","webpack:///src/app/authentication/signup/signup.component.html","webpack:///src/app/authentication/forgot-password/forgot-password.component.ts","webpack:///src/app/authentication/forgot-password/forgot-password.component.html"],"names":["LockedComponent","formBuilder","route","router","authService","submitted","hide","authForm","group","password","required","userImg","currentUserValue","img","userFullName","firstName","lastName","invalid","role","All","Admin","navigate","Teacher","Student","controls","onSubmit","selector","templateUrl","styleUrls","VerifyEmailComponent","userEmail","Page500Component","AuthenticationModule","declarations","imports","SigninComponent","error","username","routes","path","redirectTo","pathMatch","component","AuthenticationRoutingModule","forChild","exports","SignupComponent","chide","email","minLength","ForgotPasswordComponent","returnUrl","snapshot","queryParams"],"mappings":"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","file":"authentication-authentication-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n// import { AuthService } from 'src/app/core/service/auth.service';\r\nimport {AuthService} from '../../core/service/auth.service';\r\nimport { Role } from 'src/app/core/models/role';\r\n@Component({\r\n  selector: 'app-locked',\r\n  templateUrl: './locked.component.html',\r\n  styleUrls: ['./locked.component.scss'],\r\n})\r\nexport class LockedComponent implements OnInit {\r\n  authForm: FormGroup;\r\n  submitted = false;\r\n  userImg: string;\r\n  userFullName: string;\r\n  hide = true;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {}\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      password: ['', Validators.required],\r\n    });\r\n    this.userImg = this.authService.currentUserValue.img;\r\n    this.userFullName =\r\n      this.authService.currentUserValue.firstName +\r\n      ' ' +\r\n      this.authService.currentUserValue.lastName;\r\n  }\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.authForm.invalid) {\r\n      return;\r\n    } else {\r\n      const role = this.authService.currentUserValue.role;\r\n      if (role === Role.All || role === Role.Admin) {\r\n        this.router.navigate(['/admin/dashboard/main']);\r\n      } else if (role === Role.Teacher) {\r\n        this.router.navigate(['/teacher/dashboard']);\r\n      } else if (role === Role.Student) {\r\n        this.router.navigate(['/student/dashboard']);\r\n      } else {\r\n        this.router.navigate(['/authentication/signin']);\r\n      }\r\n    }\r\n  }\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/bg-01.png);\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"auth-locked\">\r\n              <div class=\"image\">\r\n                <img src={{userImg}} alt=\"User\">\r\n              </div>\r\n            </div>\r\n            <span class=\"auth-locked-title p-b-34 p-t-27\">\r\n              {{userFullName}}\r\n            </span>\r\n            <div class=\"text-center\">\r\n              <p class=\"txt1 p-b-20\">\r\n                Locked\r\n              </p>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <span class=\"error-subheader2 p-t-20 p-b-15\">\r\n                  Enter your password here.\r\n                </span>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Password</mat-label>\r\n                  <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\" required>\r\n                  <mat-icon matSuffix (click)=\"hide = !hide\">\r\n                    {{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('password').hasError('required')\">\r\n                    Password is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"container-auth-form-btn mt-5\">\r\n              <button mat-flat-button color=\"primary\" class=\"auth-form-btn\" [disabled]=\"!authForm.valid \"\r\n                type=\"submit\">\r\n                Reset My Password\r\n              </button>\r\n            </div>\r\n            <div class=\"w-full p-t-15 p-b-15 text-center\">\r\n              <div>\r\n                <a routerLink=\"/authentication/signin\" class=\"txt1\">\r\n                  Need Help?\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import { AuthService } from 'src/app/core/service/auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-verify-email',\n  templateUrl: './verify-email.component.html',\n  styleUrls: ['./verify-email.component.sass']\n})\nexport class VerifyEmailComponent implements OnInit {\n  userEmail: string;\n\n  constructor(\n    public authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    if(this.authService.currentUserValue) {\n      this.userEmail = this.authService.currentUserValue[\"email\"];\n    }\n  }\n\n}\n","<div class=\"auth-container\">\n  <div class=\"row auth-main\">\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\n      <div\n        class=\"left-img\"\n        style=\"background-image: url(assets/images/pages/bg-02.png);\"\n      ></div>\n    </div>\n    <div class=\"col-sm-6 auth-form-section\">\n      <div class=\"form-section\">\n        <div class=\"auth-wrapper\">\n          <h2 class=\"welcome-msg\">Thank You For Registering</h2>\n          <p class=\"auth-signup-text text-muted\">\n            We have sent a confirmation email to <strong>{{userEmail}}</strong>.\n            Please check your email and click on the link to verfiy your email address.\n          </p>\n          <form\n            class=\"validate-form\"\n          >\n            <div class=\"container-auth-form-btn\">\n              <button\n                mat-flat-button\n                color=\"primary\"\n                class=\"auth-form-btn\"\n                (click)=\"authService.SendVerificationMail()\"\n                >\n                Resend Verification Email\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\n@Component({\r\n  selector: 'app-page500',\r\n  templateUrl: './page500.component.html',\r\n  styleUrls: ['./page500.component.scss'],\r\n})\r\nexport class Page500Component implements OnInit {\r\n  constructor() {}\r\n  ngOnInit() {}\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/bg-05.png);\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <form>\r\n            <span class=\"error-header p-b-45\">\r\n              500\r\n            </span>\r\n            <span class=\"error-subheader2 p-b-5\">\r\n              Oops, Something went wrong. Please try after some times.\r\n            </span>\r\n            <div class=\"container-auth-form-btn mt-5\">\r\n              <button mat-flat-button color=\"primary\" class=\"auth-form-btn\" type=\"submit\">\r\n                Go To Home Page\r\n              </button>\r\n            </div>\r\n            <div class=\"w-full p-t-15 p-b-15 text-center\">\r\n              <div>\r\n                <a routerLink=\"/authentication/signin\" class=\"txt1\">\r\n                  Need Help?\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\r\nimport { Page500Component } from './page500/page500.component';\r\nimport { Page404Component } from './page404/page404.component';\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { LockedComponent } from './locked/locked.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\nimport { VerifyEmailComponent } from './verify-email/verify-email.component';\r\n@NgModule({\r\n  declarations: [\r\n    Page500Component,\r\n    Page404Component,\r\n    SigninComponent,\r\n    SignupComponent,\r\n    LockedComponent,\r\n    ForgotPasswordComponent,\r\n    VerifyEmailComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AuthenticationRoutingModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule\r\n  ]\r\n})\r\nexport class AuthenticationModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n// import { AuthService } from 'src/app/core/service/auth.service';\r\nimport { AuthService } from '../../core/service/auth.service';\r\nimport { Role } from 'src/app/core/models/role';\r\n@Component({\r\n  selector: 'app-signin',\r\n  templateUrl: './signin.component.html',\r\n  styleUrls: ['./signin.component.scss'],\r\n})\r\nexport class SigninComponent implements OnInit {\r\n  authForm: FormGroup;\r\n  submitted = false;\r\n  error = '';\r\n  hide = true;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    // private authService: AuthService\r\n    public authService: AuthService\r\n  ) {}\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  // adminSet() {\r\n  //   this.authForm.get('username').setValue('admin@school.org');\r\n  //   this.authForm.get('password').setValue('admin@123');\r\n  // }\r\n  // teacherSet() {\r\n  //   this.authForm.get('username').setValue('teacher@school.org');\r\n  //   this.authForm.get('password').setValue('teacher@123');\r\n  // }\r\n  // studentSet() {\r\n  //   this.authForm.get('username').setValue('student@school.org');\r\n  //   this.authForm.get('password').setValue('student@123');\r\n  // }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    this.error = '';\r\n    if (this.authForm.invalid) {\r\n      this.error = 'Username and Password not valid !';\r\n      return;\r\n    } else {\r\n      // this.authService\r\n      //   .login(this.f.username.value, this.f.password.value)\r\n      //   .subscribe(\r\n      //     (res) => {\r\n      //       if (res) {\r\n      //         const role = this.authService.currentUserValue.role;\r\n      //         if (role === Role.All || role === Role.Admin) {\r\n      //           this.router.navigate(['/admin/dashboard/main']);\r\n      //         } else if (role === Role.Teacher) {\r\n      //           this.router.navigate(['/teacher/dashboard']);\r\n      //         } else if (role === Role.Student) {\r\n      //           this.router.navigate(['/student/dashboard']);\r\n      //         } else {\r\n      //           this.router.navigate(['/authentication/signin']);\r\n      //         }\r\n      //       } else {\r\n      //         this.error = 'Invalid Login';\r\n      //       }\r\n      //     },\r\n      //     (error) => {\r\n      //       this.error = error;\r\n      //       this.submitted = false;\r\n      //     }\r\n      //   );\r\n    }\r\n  }\r\n}\r\n","<div class=\"auth-container\" style=\"background: url(assets/images/sign.jpg); background-size: 90% 100%; background-repeat: no-repeat;\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-8 px-0 d-none d-sm-block\">\r\n      <!-- <div\r\n        class=\"left-img\"\r\n      ></div> -->\r\n    </div>\r\n    <div class=\"col-sm-4 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <!-- <h2 class=\"welcome-msg\"> Welcome to Smart </h2> -->\r\n          <p class=\"auth-signup-text text-muted\">\r\n            Need an account?<a\r\n              routerLink=\"/authentication/signup\"\r\n              class=\"sign-up-link\"\r\n              >Sign Up\r\n            </a>\r\n          </p>\r\n          <!-- <div class=\"d-flex justify-content-between lbl-alert mb-3\">\r\n            <div>\r\n              <button mat-raised-button color=\"primary\" type=\"button\" (click)=\"adminSet();\">Admin</button>\r\n            </div>\r\n            <div>\r\n              <button mat-raised-button color=\"accent\" type=\"button\" (click)=\"teacherSet();\">Teacher</button>\r\n            </div>\r\n            <div>\r\n              <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"studentSet();\">Student</button>\r\n            </div>\r\n          </div> -->\r\n          <h2 class=\"login-title\">Sign in</h2>\r\n          <form\r\n            class=\"validate-form\"\r\n            [formGroup]=\"authForm\"\r\n            (ngSubmit)=\"onSubmit()\"\r\n          >\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Username</mat-label>\r\n                  <input matInput formControlName=\"username\" #userName />\r\n                  <mat-icon matSuffix>face</mat-icon>\r\n                  <mat-error\r\n                    *ngIf=\"authForm.get('username').hasError('required')\"\r\n                  >\r\n                    Username is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Password</mat-label>\r\n                  <input\r\n                    matInput\r\n                    [type]=\"hide ? 'password' : 'text'\"\r\n                    formControlName=\"password\"\r\n                    #userPassword\r\n                  />\r\n                  <a\r\n                    class=\"show-pwd-icon\"\r\n                    href=\"#\"\r\n                    onClick=\"return false;\"\r\n                    matSuffix\r\n                    (click)=\"hide = !hide\"\r\n                    [attr.aria-label]=\"'Hide password'\"\r\n                    [attr.aria-pressed]=\"hide\"\r\n                  >\r\n                    <mat-icon\r\n                      >{{hide ? 'visibility_off' : 'visibility'}}</mat-icon\r\n                    >\r\n                  </a>\r\n                  <mat-error\r\n                    *ngIf=\"authForm.get('password').hasError('required')\"\r\n                  >\r\n                    Password is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"d-flex justify-content-between align-items-center mb-5\">\r\n              <div class=\"form-check\">\r\n                <label class=\"form-check-label\">\r\n                  <input class=\"form-check-input\" type=\"checkbox\" value=\"\" />\r\n                  Remember me\r\n                  <span class=\"form-check-sign\">\r\n                    <span class=\"check\"></span>\r\n                  </span>\r\n                </label>\r\n              </div>\r\n              <a class=\"txt1\" routerLink=\"/authentication/forgot-password\"\r\n                >Forgot Password?</a\r\n              >\r\n            </div>\r\n            <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">\r\n              {{error}}\r\n            </div>\r\n            <div class=\"container-auth-form-btn\">\r\n              <button\r\n                mat-flat-button\r\n                color=\"primary\"\r\n                class=\"auth-form-btn\"\r\n                [disabled]=\"!authForm.valid \"\r\n                (click)=\"authService.login(userName.value, userPassword.value)\"\r\n              >\r\n                Login\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <!-- <h6 class=\"social-login-title\">OR</h6>\r\n          <ul class=\"list-unstyled social-icon mb-0 mt-3\">\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                <i class=\"fab fa-google\"></i>\r\n              </a></li>\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded flex-c-m\">\r\n                <i class=\"fab fa-facebook-f\"></i>\r\n              </a></li>\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                <i class=\"fab fa-twitter\"></i>\r\n              </a></li>\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                <i class=\"fab fa-linkedin-in\"></i>\r\n              </a></li>\r\n          </ul> -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { VerifyEmailComponent } from './verify-email/verify-email.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { LockedComponent } from './locked/locked.component';\r\nimport { Page404Component } from './page404/page404.component';\r\nimport { Page500Component } from './page500/page500.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'signin',\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: 'signin',\r\n    component: SigninComponent,\r\n  },\r\n  {\r\n    path: 'signup',\r\n    component: SignupComponent,\r\n  },\r\n  {\r\n    path: 'verify-email-address',\r\n    component: VerifyEmailComponent\r\n  },\r\n  {\r\n    path: 'forgot-password',\r\n    component: ForgotPasswordComponent,\r\n  },\r\n  {\r\n    path: 'locked',\r\n    component: LockedComponent,\r\n  },\r\n  {\r\n    path: 'page404',\r\n    component: Page404Component,\r\n  },\r\n  {\r\n    path: 'page500',\r\n    component: Page500Component,\r\n  },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthenticationRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../core/service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss'],\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  authForm: FormGroup;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  hide = true;\r\n  chide = true;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    public authService: AuthService\r\n  ) {}\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      // username: ['', Validators.required],\r\n      email: [\r\n        '',\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n      password: ['', Validators.required],\r\n      // cpassword: ['', Validators.required],\r\n    });\r\n    // get return url from route parameters or default to '/'\r\n    // this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.authForm.invalid) {\r\n      return;\r\n    } else {\r\n      // this.router.navigate(['/admin/dashboard/main']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div\r\n        class=\"left-img\"\r\n        style=\"background-image: url(assets/images/pages/bg-02.png);\"\r\n      ></div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <h2 class=\"welcome-msg\">Sign Up</h2>\r\n          <p class=\"auth-signup-text text-muted\">\r\n            Enter details to create your account\r\n          </p>\r\n          <form\r\n            class=\"validate-form\"\r\n            [formGroup]=\"authForm\"\r\n            (ngSubmit)=\"onSubmit()\"\r\n          >\r\n            <!-- <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Username</mat-label>\r\n                  <input matInput formControlName=\"username\" #userName required>\r\n                  <mat-icon matSuffix>face</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('username').hasError('required')\">\r\n                    Username is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div> -->\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Email</mat-label>\r\n                  <input matInput formControlName=\"email\" #userEmail required />\r\n                  <mat-icon matSuffix>mail</mat-icon>\r\n                  <mat-error\r\n                    *ngIf=\"authForm.get('email').hasError('required') || authForm.get('email').touched\"\r\n                  >\r\n                    Please enter a valid email address\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Password</mat-label>\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"password\"\r\n                    [type]=\"hide ? 'password' : 'text'\"\r\n                    #userPwd\r\n                    required\r\n                  />\r\n                  <mat-icon matSuffix (click)=\"hide = !hide\">\r\n                    {{hide ? 'visibility_off' : 'visibility'}}</mat-icon\r\n                  >\r\n                  <mat-error\r\n                    *ngIf=\"authForm.get('password').hasError('required')\"\r\n                  >\r\n                    Password is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <!-- <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Confirm Password</mat-label>\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"cpassword\"\r\n                    [type]=\"chide ? 'password' : 'text'\"\r\n                    required\r\n                  />\r\n                  <mat-icon matSuffix (click)=\"chide = !chide\">\r\n                    {{chide ? 'visibility_off' : 'visibility'}}</mat-icon\r\n                  >\r\n                  <mat-error\r\n                    *ngIf=\"authForm.get('cpassword').hasError('required')\"\r\n                  >\r\n                    Confirm Password is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div> -->\r\n            <div class=\"flex-sb-m w-full  p-b-20\">\r\n              <div>\r\n                <span\r\n                  >Already Registered?\r\n                  <a routerLink=\"/authentication/signin\">\r\n                    Login\r\n                  </a></span\r\n                >\r\n              </div>\r\n            </div>\r\n            <div class=\"container-auth-form-btn\">\r\n              <button\r\n                mat-flat-button\r\n                color=\"primary\"\r\n                class=\"auth-form-btn\"\r\n                [disabled]=\"!authForm.valid \"\r\n                (click)=\"authService.SignUp(userEmail.value, userPwd.value)\"\r\n                >\r\n                Register\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <!-- <h6 class=\"social-login-title\">OR</h6>\r\n          <ul class=\"list-unstyled social-icon mb-0 mt-3\">\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                <i class=\"fab fa-google\"></i>\r\n              </a></li>\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded flex-c-m\">\r\n                <i class=\"fab fa-facebook-f\"></i>\r\n              </a></li>\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                <i class=\"fab fa-twitter\"></i>\r\n              </a></li>\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                <i class=\"fab fa-linkedin-in\"></i>\r\n              </a></li>\r\n          </ul> -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { AuthService } from 'src/app/core/service/auth.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss'],\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  authForm: FormGroup;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    public authService: AuthService\r\n  ) {}\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      email: [\r\n        '',\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n    });\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.authForm.invalid) {\r\n      return;\r\n    } else {\r\n      // this.router.navigate(['/dashboard/main']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div\r\n        class=\"left-img\"\r\n        style=\"background-image: url(assets/images/pages/bg-03.png);\"\r\n      ></div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <h2 class=\"welcome-msg\">Reset Password</h2>\r\n          <p class=\"auth-signup-text text-muted\">Let Us Help You</p>\r\n          <form\r\n            class=\"validate-form\"\r\n            [formGroup]=\"authForm\"\r\n            (ngSubmit)=\"onSubmit()\"\r\n          >\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <span class=\"error-subheader2 p-t-20 p-b-15\">\r\n                  Enter your registered email address.\r\n                </span>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Email</mat-label>\r\n                  <input matInput formControlName=\"email\" #passwordResetEmail required />\r\n                  <mat-icon matSuffix>mail</mat-icon>\r\n                  <mat-error\r\n                    *ngIf=\"authForm.get('email').hasError('required') || authForm.get('email').touched\"\r\n                  >\r\n                    Please enter a valid email address\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"container-auth-form-btn mt-5\">\r\n              <button\r\n                mat-flat-button\r\n                color=\"primary\"\r\n                class=\"auth-form-btn\"\r\n                [disabled]=\"!authForm.valid\"\r\n                (click)=\"authService.ForgotPassword(passwordResetEmail.value)\"\r\n              >\r\n                Reset My Password\r\n              </button>\r\n            </div>\r\n            <div class=\"w-full p-t-25 text-center\">\r\n              <div>\r\n                <a routerLink=\"/authentication/signin\" class=\"txt1\">\r\n                  Login?\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"]}