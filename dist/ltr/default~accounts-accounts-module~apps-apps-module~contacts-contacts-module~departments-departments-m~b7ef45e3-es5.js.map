{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/sort.js"],"names":["_c0","MatSortHeader_div_3_Template","rf","ctx","_r2","MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener","ctx_r1","_disableViewStateAnimation","MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener","ctx_r3","ctx_r0","_getArrowViewState","_getArrowDirectionState","_c1","getSortDuplicateSortableIdError","id","Error","getSortHeaderNotContainedWithinSortError","getSortHeaderMissingIdError","getSortInvalidDirectionError","direction","MatSortBase","_MatSortMixinBase","MatSort","arguments","sortables","Map","_stateChanges","start","_direction","sortChange","sortable","ngDevMode","has","set","active","getNextSortDirection","emit","disableClear","sortDirectionCycle","getSortDirectionCycle","nextDirectionIndex","indexOf","length","_markInitialized","next","complete","_disableClear","v","ɵfac","MatSort_Factory","t","ɵMatSort_BaseFactory","ɵdir","type","selectors","hostAttrs","inputs","disabled","outputs","exportAs","features","propDecorators","args","selector","host","sortOrder","reverse","push","SORT_ANIMATION_TRANSITION","ENTERING","STANDARD_CURVE","matSortAnimations","indicator","transform","leftPointer","rightPointer","arrowOpacity","opacity","arrowPosition","allowChildren","optional","MatSortHeaderIntl","changes","sortButtonLabel","MatSortHeaderIntl_Factory","ɵprov","factory","token","providedIn","MAT_SORT_HEADER_INTL_PROVIDER_FACTORY","parentIntl","MAT_SORT_HEADER_INTL_PROVIDER","provide","deps","useFactory","MatSortHeaderBase","_MatSortHeaderMixinBase","MatSortHeader","_intl","changeDetectorRef","_sort","_columnDef","_focusMonitor","_elementRef","_showIndicatorHint","_arrowDirection","_rerenderSubscription","subscribe","_isSorted","_updateArrowDirection","_viewState","toState","_setAnimationTransitionState","fromState","markForCheck","name","register","monitor","origin","_setIndicatorHintVisible","stopMonitoring","deregister","unsubscribe","visible","_isDisabled","viewState","sort","_toggleOnInteraction","event","keyCode","preventDefault","MatSortHeader_Factory","ɵcmp","hostVars","hostBindings","MatSortHeader_HostBindings","MatSortHeader_click_HostBindingHandler","_handleClick","MatSortHeader_keydown_HostBindingHandler","$event","_handleKeydown","MatSortHeader_mouseenter_HostBindingHandler","MatSortHeader_mouseleave_HostBindingHandler","_getAriaSortAttribute","attrs","ngContentSelectors","decls","vars","consts","template","MatSortHeader_Template","_renderArrow","directives","styles","encapsulation","data","animation","changeDetection","ctorParameters","decorators","undefined","None","OnPush","animations","MatSortModule","ɵmod","ɵinj","MatSortModule_Factory","providers","imports","ngJitMode","declarations","exports"],"mappings":"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","file":"default~accounts-accounts-module~apps-apps-module~contacts-contacts-module~departments-departments-m~b7ef45e3-es5.js","sourcesContent":["import { EventEmitter, Directive, Input, Output, ɵɵdefineInjectable, Injectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Inject, ElementRef, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mixinInitialized, mixinDisabled, AnimationDurations, AnimationCurves } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"mat-sort-header\", \"\"];\nfunction MatSortHeader_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵlistener(\"@arrowPosition.start\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1._disableViewStateAnimation = true; })(\"@arrowPosition.done\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3._disableViewStateAnimation = false; });\n    ɵngcc0.ɵɵelement(1, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 5);\n    ɵngcc0.ɵɵelement(3, \"div\", 6);\n    ɵngcc0.ɵɵelement(4, \"div\", 7);\n    ɵngcc0.ɵɵelement(5, \"div\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@arrowOpacity\", ctx_r0._getArrowViewState())(\"@arrowPosition\", ctx_r0._getArrowViewState())(\"@allowChildren\", ctx_r0._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"@indicator\", ctx_r0._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@leftPointer\", ctx_r0._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@rightPointer\", ctx_r0._getArrowDirectionState());\n} }\nconst _c1 = [\"*\"];\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/** @docs-private */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/** @docs-private */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/** @docs-private */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatSort.\n/** @docs-private */\nclass MatSortBase {\n}\nconst _MatSortMixinBase = mixinInitialized(mixinDisabled(MatSortBase));\n/** Container for MatSortables to manage the sort state and provide default sort parameters. */\nclass MatSort extends _MatSortMixinBase {\n    constructor() {\n        super(...arguments);\n        /** Collection of all registered sortables that this directive manages. */\n        this.sortables = new Map();\n        /** Used to notify any child components listening to state changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The direction to set when an MatSortable is initially sorted.\n         * May be overriden by the MatSortable's sort start.\n         */\n        this.start = 'asc';\n        this._direction = '';\n        /** Event emitted when the user changes either the active sort or sort direction. */\n        this.sortChange = new EventEmitter();\n    }\n    /** The sort direction of the currently active MatSortable. */\n    get direction() { return this._direction; }\n    set direction(direction) {\n        if (direction && direction !== 'asc' && direction !== 'desc' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    /**\n     * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n     * May be overriden by the MatSortable's disable clear input.\n     */\n    get disableClear() { return this._disableClear; }\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     */\n    register(sortable) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!sortable.id) {\n                throw getSortHeaderMissingIdError();\n            }\n            if (this.sortables.has(sortable.id)) {\n                throw getSortDuplicateSortableIdError(sortable.id);\n            }\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     */\n    deregister(sortable) {\n        this.sortables.delete(sortable.id);\n    }\n    /** Sets the active sort id and determines the new sort direction. */\n    sort(sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.emit({ active: this.active, direction: this.direction });\n    }\n    /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n    getNextSortDirection(sortable) {\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n    ngOnInit() {\n        this._markInitialized();\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatSort.ɵfac = function MatSort_Factory(t) { return ɵMatSort_BaseFactory(t || MatSort); };\nMatSort.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSort, selectors: [[\"\", \"matSort\", \"\"]], hostAttrs: [1, \"mat-sort\"], inputs: { disabled: [\"matSortDisabled\", \"disabled\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\"], active: [\"matSortActive\", \"active\"] }, outputs: { sortChange: \"matSortChange\" }, exportAs: [\"matSort\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nMatSort.propDecorators = {\n    active: [{ type: Input, args: ['matSortActive',] }],\n    start: [{ type: Input, args: ['matSortStart',] }],\n    direction: [{ type: Input, args: ['matSortDirection',] }],\n    disableClear: [{ type: Input, args: ['matSortDisableClear',] }],\n    sortChange: [{ type: Output, args: ['matSortChange',] }]\n};\nconst ɵMatSort_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatSort);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSort, [{\n        type: Directive,\n        args: [{\n                selector: '[matSort]',\n                exportAs: 'matSort',\n                host: { 'class': 'mat-sort' },\n                inputs: ['disabled: matSortDisabled']\n            }]\n    }], null, { start: [{\n            type: Input,\n            args: ['matSortStart']\n        }], sortChange: [{\n            type: Output,\n            args: ['matSortChange']\n        }], direction: [{\n            type: Input,\n            args: ['matSortDirection']\n        }], disableClear: [{\n            type: Input,\n            args: ['matSortDisableClear']\n        }], active: [{\n            type: Input,\n            args: ['matSortActive']\n        }] }); })();\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\nfunction getSortDirectionCycle(start, disableClear) {\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' +\n    AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * @docs-private\n */\nconst matSortAnimations = {\n    /** Animation that moves the sort indicator. */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({ transform: 'translateY(10px)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(-45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(-45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /** Animation that controls the arrow opacity. */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n        state('desc-to-hint, asc-to-hint, hint', style({ opacity: .54 })),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(-25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Below\n        transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(25%)' })\n        ]))),\n        // Hidden Below => Hint Center\n        transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Above\n        transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(-25%)' })\n        ]))),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({ transform: 'translateY(0)' })),\n        state('hint-to-desc, active-to-desc, desc', style({ transform: 'translateY(-25%)' })),\n        state('hint-to-asc, active-to-asc, asc', style({ transform: 'translateY(25%)' })),\n    ]),\n    /** Necessary trigger that calls animate on children animations. */\n    allowChildren: trigger('allowChildren', [\n        transition('* <=> *', [\n            query('@*', animateChild(), { optional: true })\n        ])\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * ARIA label for the sorting button.\n         * @deprecated Not used anymore. To be removed.\n         * @breaking-change 8.0.0\n         */\n        this.sortButtonLabel = (id) => {\n            return `Change sorting for ${id}`;\n        };\n    }\n}\nMatSortHeaderIntl.ɵfac = function MatSortHeaderIntl_Factory(t) { return new (t || MatSortHeaderIntl)(); };\nMatSortHeaderIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatSortHeaderIntl_Factory() { return new MatSortHeaderIntl(); }, token: MatSortHeaderIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSortHeaderIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n/** @docs-private */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/** @docs-private */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to the sort header.\n/** @docs-private */\nclass MatSortHeaderBase {\n}\nconst _MatSortHeaderMixinBase = mixinDisabled(MatSortHeaderBase);\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader extends _MatSortHeaderMixinBase {\n    constructor(_intl, changeDetectorRef, \n    // `MatSort` is not optionally injected, but just asserted manually w/ better error.\n    // tslint:disable-next-line: lightweight-tokens\n    _sort, _columnDef, _focusMonitor, _elementRef) {\n        // Note that we use a string token for the `_columnDef`, because the value is provided both by\n        // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n        // and we want to avoid having the sort header depending on the CDK table because\n        // of this single reference.\n        super();\n        this._intl = _intl;\n        this._sort = _sort;\n        this._columnDef = _columnDef;\n        this._focusMonitor = _focusMonitor;\n        this._elementRef = _elementRef;\n        /**\n         * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n         * provide an affordance that the header is sortable by showing on focus and hover.\n         */\n        this._showIndicatorHint = false;\n        /** The direction the arrow should be facing according to the current state. */\n        this._arrowDirection = '';\n        /**\n         * Whether the view state animation should show the transition between the `from` and `to` states.\n         */\n        this._disableViewStateAnimation = false;\n        /** Sets the position of the arrow that displays when sorted. */\n        this.arrowPosition = 'after';\n        if (!_sort && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        this._rerenderSubscription = merge(_sort.sortChange, _sort._stateChanges, _intl.changes)\n            .subscribe(() => {\n            if (this._isSorted()) {\n                this._updateArrowDirection();\n            }\n            // If this header was recently active and now no longer sorted, animate away the arrow.\n            if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                this._disableViewStateAnimation = false;\n                this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n            }\n            changeDetectorRef.markForCheck();\n        });\n    }\n    /** Overrides the disable clear value of the containing MatSort for this MatSortable. */\n    get disableClear() { return this._disableClear; }\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    ngOnInit() {\n        if (!this.id && this._columnDef) {\n            this.id = this._columnDef.name;\n        }\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({ toState: this._isSorted() ? 'active' : this._arrowDirection });\n        this._sort.register(this);\n    }\n    ngAfterViewInit() {\n        // We use the focus monitor because we also want to style\n        // things differently based on the focus origin.\n        this._focusMonitor.monitor(this._elementRef, true)\n            .subscribe(origin => this._setIndicatorHintVisible(!!origin));\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     */\n    _setIndicatorHintVisible(visible) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n        this._showIndicatorHint = visible;\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n            }\n            else {\n                this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n            }\n        }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     */\n    _setAnimationTransitionState(viewState) {\n        this._viewState = viewState;\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = { toState: viewState.toState };\n        }\n    }\n    /** Triggers the sort on this sort header and removes the indicator hint. */\n    _toggleOnInteraction() {\n        this._sort.sort(this);\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n        // If the arrow is now sorted, animate the arrow into place. Otherwise, animate it away into\n        // the direction it is facing.\n        const viewState = this._isSorted() ?\n            { fromState: this._arrowDirection, toState: 'active' } :\n            { fromState: 'active', toState: this._arrowDirection };\n        this._setAnimationTransitionState(viewState);\n        this._showIndicatorHint = false;\n    }\n    _handleClick() {\n        if (!this._isDisabled()) {\n            this._toggleOnInteraction();\n        }\n    }\n    _handleKeydown(event) {\n        if (!this._isDisabled() && (event.keyCode === SPACE || event.keyCode === ENTER)) {\n            event.preventDefault();\n            this._toggleOnInteraction();\n        }\n    }\n    /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\n    _isSorted() {\n        return this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n    }\n    /** Returns the animation state for the arrow direction (indicator and pointers). */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /** Returns the arrow position state (opacity, translation). */\n    _getArrowViewState() {\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ?\n            this._sort.direction :\n            (this.start || this._sort.start);\n    }\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return 'none';\n        }\n        return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /** Whether the arrow inside the sort header should be rendered. */\n    _renderArrow() {\n        return !this._isDisabled() || this._isSorted();\n    }\n}\nMatSortHeader.ɵfac = function MatSortHeader_Factory(t) { return new (t || MatSortHeader)(ɵngcc0.ɵɵdirectiveInject(MatSortHeaderIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatSort, 8), ɵngcc0.ɵɵdirectiveInject('MAT_SORT_HEADER_COLUMN_DEF', 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatSortHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSortHeader, selectors: [[\"\", \"mat-sort-header\", \"\"]], hostAttrs: [1, \"mat-sort-header\"], hostVars: 3, hostBindings: function MatSortHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatSortHeader_click_HostBindingHandler() { return ctx._handleClick(); })(\"keydown\", function MatSortHeader_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"mouseenter\", function MatSortHeader_mouseenter_HostBindingHandler() { return ctx._setIndicatorHintVisible(true); })(\"mouseleave\", function MatSortHeader_mouseleave_HostBindingHandler() { return ctx._setIndicatorHintVisible(false); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-sort\", ctx._getAriaSortAttribute());\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-disabled\", ctx._isDisabled());\n    } }, inputs: { disabled: \"disabled\", arrowPosition: \"arrowPosition\", disableClear: \"disableClear\", id: [\"mat-sort-header\", \"id\"], start: \"start\" }, exportAs: [\"matSortHeader\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 6, consts: [[\"role\", \"button\", 1, \"mat-sort-header-container\", \"mat-focus-indicator\"], [1, \"mat-sort-header-content\"], [\"class\", \"mat-sort-header-arrow\", 4, \"ngIf\"], [1, \"mat-sort-header-arrow\"], [1, \"mat-sort-header-stem\"], [1, \"mat-sort-header-indicator\"], [1, \"mat-sort-header-pointer-left\"], [1, \"mat-sort-header-pointer-right\"], [1, \"mat-sort-header-pointer-middle\"]], template: function MatSortHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, MatSortHeader_div_3_Template, 6, 6, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-sorted\", ctx._isSorted())(\"mat-sort-header-position-before\", ctx.arrowPosition == \"before\");\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx._isDisabled() ? null : 0);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._renderArrow());\n    } }, directives: [ɵngcc2.NgIf], styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"], encapsulation: 2, data: { animation: [\n            matSortAnimations.indicator,\n            matSortAnimations.leftPointer,\n            matSortAnimations.rightPointer,\n            matSortAnimations.arrowOpacity,\n            matSortAnimations.arrowPosition,\n            matSortAnimations.allowChildren,\n        ] }, changeDetection: 0 });\nMatSortHeader.ctorParameters = () => [\n    { type: MatSortHeaderIntl },\n    { type: ChangeDetectorRef },\n    { type: MatSort, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: ['MAT_SORT_HEADER_COLUMN_DEF',] }, { type: Optional }] },\n    { type: FocusMonitor },\n    { type: ElementRef }\n];\nMatSortHeader.propDecorators = {\n    id: [{ type: Input, args: ['mat-sort-header',] }],\n    arrowPosition: [{ type: Input }],\n    start: [{ type: Input }],\n    disableClear: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSortHeader, [{\n        type: Component,\n        args: [{\n                selector: '[mat-sort-header]',\n                exportAs: 'matSortHeader',\n                template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition == 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     role=\\\"button\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-sort-header',\n                    '(click)': '_handleClick()',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(mouseenter)': '_setIndicatorHintVisible(true)',\n                    '(mouseleave)': '_setIndicatorHintVisible(false)',\n                    '[attr.aria-sort]': '_getAriaSortAttribute()',\n                    '[class.mat-sort-header-disabled]': '_isDisabled()'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                animations: [\n                    matSortAnimations.indicator,\n                    matSortAnimations.leftPointer,\n                    matSortAnimations.rightPointer,\n                    matSortAnimations.arrowOpacity,\n                    matSortAnimations.arrowPosition,\n                    matSortAnimations.allowChildren,\n                ],\n                styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"]\n            }]\n    }], function () { return [{ type: MatSortHeaderIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSort, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: ['MAT_SORT_HEADER_COLUMN_DEF']\n            }, {\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }]; }, { arrowPosition: [{\n            type: Input\n        }], disableClear: [{\n            type: Input\n        }], id: [{\n            type: Input,\n            args: ['mat-sort-header']\n        }], start: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSortModule {\n}\nMatSortModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSortModule });\nMatSortModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSortModule_Factory(t) { return new (t || MatSortModule)(); }, providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSortModule, { declarations: function () { return [MatSort, MatSortHeader]; }, imports: function () { return [CommonModule]; }, exports: function () { return [MatSort, MatSortHeader]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSortModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                exports: [MatSort, MatSortHeader],\n                declarations: [MatSort, MatSortHeader],\n                providers: [MAT_SORT_HEADER_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n\n//# sourceMappingURL=sort.js.map"]}