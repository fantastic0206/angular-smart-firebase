{"version":3,"sources":["webpack:///src/app/report/dialogs/delete/delete.component.ts","webpack:///src/app/report/dialogs/delete/delete.component.html","webpack:///src/app/report/teachers.service.ts","webpack:///src/app/report/report.module.ts","webpack:///src/app/report/report-routing.module.ts","webpack:///src/app/report/teachers.model.ts","webpack:///src/app/report/dialogs/form-dialog/form-dialog.component.ts","webpack:///src/app/report/dialogs/form-dialog/form-dialog.component.html","webpack:///src/app/report/report.component.ts","webpack:///src/app/report/report.component.html"],"names":["DeleteDialogComponent","dialogRef","data","teachersService","close","deleteTeachers","id","confirmDelete","onNoClick","selector","templateUrl","styleUrls","TeachersService","httpClient","API_URL","isTblLoading","dataChange","dialogData","get","subscribe","next","error","console","log","name","message","teachers","value","ReportModule","forRoot","echarts","declarations","imports","providers","routes","path","component","ReportRoutingModule","forChild","exports","Teachers","getRandomID","sno","date","Date","investedAmount","percentage","S4","Math","random","toString","substring","FormDialogComponent","fb","formControl","required","action","dialogTitle","proForm","createContactForm","hasError","group","clientName","addTeachers","getRawValue","confirmAdd","$event","stopPropagation","selection","ReportComponent","dialog","snackBar","displayedColumns","contextMenuPosition","x","y","from","pattern","to","loadData","chart1","chart2","open","afterClosed","result","exampleDatabase","unshift","getDialogData","refreshTable","showNotification","row","foundIndex","findIndex","splice","paginator","_changePageSize","pageSize","numSelected","selected","length","numRows","dataSource","renderedData","isAllSelected","clear","forEach","select","totalSelect","item","index","d","ExampleDataSource","sort","filter","nativeElement","colorName","text","placementFrom","placementAlign","duration","verticalPosition","horizontalPosition","panelClass","event","preventDefault","clientX","clientY","barChartOptions1","series","chart","height","type","toolbar","show","foreColor","plotOptions","bar","dataLabels","position","enabled","formatter","val","offsetY","style","fontSize","colors","xaxis","categories","labels","axisBorder","axisTicks","crosshairs","fill","gradient","colorFrom","colorTo","stops","opacityFrom","opacityTo","tooltip","shade","shadeIntensity","gradientToColors","undefined","inverseColors","yaxis","barChartOptions2","contextMenu","_sort","filterChange","filteredData","pageIndex","displayDataChanges","sortChange","page","getAllTeacherss","pipe","slice","searchStr","toLowerCase","indexOf","sortedData","sortData","startIndex","active","direction","a","b","propertyA","propertyB","valueA","isNaN","valueB"],"mappings":"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","file":"report-report-module-es5.js","sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { TeachersService } from '../../teachers.service';\n\n@Component({\n  selector: 'app-delete',\n  templateUrl: './delete.component.html',\n  styleUrls: ['./delete.component.sass']\n})\nexport class DeleteDialogComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public teachersService: TeachersService\n  ) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  confirmDelete(): void {\n    this.teachersService.deleteTeachers(this.data.id);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <h3 mat-dialog-title>Are you sure?</h3>\n  <div mat-dialog-content>\n    <ul class=\"clearfix\">\n      <li>\n        <p><span class=\"font-weight-bold\"> Invested Amount: </span>{{data.investedAmount}}</p>\n      </li>\n      <li>\n        <p><span class=\"font-weight-bold\"> percentage: </span>{{ data.percentage }}</p>\n      </li>\n    </ul>\n  </div>\n  <div mat-dialog-actions class=\"mb-1\">\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\n      Delete\n    </button>\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Teachers } from './teachers.model';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\n@Injectable()\r\nexport class TeachersService {\r\n  private readonly API_URL = 'assets/data/investments.json';\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<Teachers[]> = new BehaviorSubject<Teachers[]>([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {}\r\n  get data(): Teachers[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllTeacherss(): void {\r\n    this.httpClient.get<Teachers[]>(this.API_URL).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + ' ' + error.message);\r\n      }\r\n    );\r\n  }\r\n  addTeachers(teachers: Teachers): void {\r\n    this.dialogData = teachers;\r\n\r\n    /*  this.httpClient.post(this.API_URL, teachers).subscribe(data => {\r\n      this.dialogData = teachers;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updateTeachers(teachers: Teachers): void {\r\n    this.dialogData = teachers;\r\n\r\n    /* this.httpClient.put(this.API_URL + teachers.id, teachers).subscribe(data => {\r\n      this.dialogData = teachers;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deleteTeachers(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ReportRoutingModule } from './report-routing.module';\nimport { ReportComponent } from './report.component';\n\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { NgxEchartsModule } from 'ngx-echarts';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { DeleteDialogComponent } from './dialogs/delete/delete.component';\nimport { FormDialogComponent } from './dialogs/form-dialog/form-dialog.component';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { TeachersService } from './teachers.service';\n\n\n@NgModule({\n  declarations: [ReportComponent, DeleteDialogComponent, FormDialogComponent],\n  imports: [\n    CommonModule,\n    ReportRoutingModule,\n\n    NgxEchartsModule.forRoot({\n      echarts: () => import('echarts'),\n    }),\n    PerfectScrollbarModule,\n    NgApexchartsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDialogModule,\n    MatSortModule,\n    MatToolbarModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatCheckboxModule,\n    MatTabsModule,\n    MaterialFileInputModule,\n    MatMenuModule,\n    MatProgressSpinnerModule,\n  ],\n  providers: [TeachersService],\n})\nexport class ReportModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReportComponent } from './report.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ReportComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ReportRoutingModule { }\n","import { formatDate } from '@angular/common';\r\nexport class Teachers {\r\n  id: number;\r\n  sno: string;\r\n  date: string;\r\n  investedAmount: string;\r\n  percentage: string;\r\n  constructor(teachers) {\r\n    {\r\n      this.id = teachers.id || this.getRandomID();\r\n      this.sno = teachers.sno || '';\r\n      this.date = teachers.date || formatDate(new Date(), 'yyyy-MM-dd', 'en');\r\n      this.investedAmount = teachers.investedAmount || '';\r\n      this.percentage = teachers.percentage || '';\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { TeachersService } from '../../teachers.service';\nimport {\n  FormControl,\n  Validators,\n  FormGroup,\n  FormBuilder,\n} from '@angular/forms';\nimport { Teachers } from '../../teachers.model';\nimport { formatDate } from '@angular/common';\n\n@Component({\n  selector: 'app-form-dialog',\n  templateUrl: './form-dialog.component.html',\n  styleUrls: ['./form-dialog.component.sass']\n})\nexport class FormDialogComponent implements OnInit {\n  action: string;\n  dialogTitle: string;\n  proForm: FormGroup;\n  teachers: Teachers;\n\n  constructor(\n    public dialogRef: MatDialogRef<FormDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public teachersService: TeachersService,\n    private fb: FormBuilder\n  ) {\n    // Set the defaults\n    this.action = data.action;\n    if (this.action === 'edit') {\n      this.dialogTitle = data.teachers.investedAmount;\n      this.teachers = data.teachers;\n    } else {\n      this.dialogTitle = 'New Investment Amount';\n      this.teachers = new Teachers({});\n    }\n    this.proForm = this.createContactForm();\n  }\n  formControl = new FormControl('', [\n    Validators.required,\n    // Validators.email,\n  ]);\n  getErrorMessage() {\n    return this.formControl.hasError('required')\n      ? 'Required field'\n      : this.formControl.hasError('email')\n      ? 'Not a valid email'\n      : '';\n  }\n  createContactForm(): FormGroup {\n    return this.fb.group({\n      id: [this.teachers.id],\n      sno: [this.teachers.sno],\n      // email: [\n      //   this.teachers.email,\n      //   [Validators.required, Validators.email, Validators.minLength(5)],\n      // ],\n      date: [\n        formatDate(this.teachers.date, 'yyyy-MM-dd', 'en'),\n        [Validators.required],\n      ],\n      clientName: [this.teachers.investedAmount],\n      investedAmount: [this.teachers.percentage],\n    });\n  }\n  submit() {\n    // emppty stuff\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  public confirmAdd(): void {\n    this.teachersService.addTeachers(this.proForm.getRawValue());\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"addContainer\">\n  <div class=\"modalHeader\">\n    <div class=\"editRowModal\">\n      <div class=\"modalHeader clearfix\">\n        <!-- <img [src]='teachers.img' alt=\"avatar\"> -->\n        <div class=\"modal-about\">\n          <div class=\"font-weight-bold p-t-5 font-17\">\n            {{dialogTitle}}</div>\n        </div>\n      </div>\n    </div>\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n  <div mat-dialog-content>\n    <form class=\"register-form m-4\" [formGroup]=\"proForm\" (ngSubmit)=\"submit\">\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>S.NO</mat-label>\n            <input matInput formControlName=\"sno\" required>\n            <mat-icon matSuffix>note</mat-icon>\n            <mat-error *ngIf=\"proForm.get('sno')\">\n              sno is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Date</mat-label>\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"date\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n            <mat-error *ngIf=\"proForm.get('date')\">\n              Please select date\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Invested Amount</mat-label>\n            <input matInput formControlName=\"investedAmount\" required>\n            <mat-icon matSuffix>face</mat-icon>\n            <mat-error *ngIf=\"proForm.get('investedAmount')\">\n              Invested Amount is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Percentage</mat-label>\n            <input matInput formControlName=\"percentage\" required>\n            <mat-icon matSuffix>money</mat-icon>\n            <mat-error *ngIf=\"proForm.get('percentage')\">\n              Percentage Amount is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n          <div class=\"example-button-row\">\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!proForm.valid\" [mat-dialog-close]=\"1\"\n              (click)=\"confirmAdd()\">Save</button>\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { TeachersService } from './teachers.service';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { Teachers } from './teachers.model';\nimport { DataSource } from '@angular/cdk/collections';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FormDialogComponent } from './dialogs/form-dialog/form-dialog.component';\nimport { DeleteDialogComponent } from './dialogs/delete/delete.component';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport {\n  ChartComponent,\n  ApexAxisChartSeries,\n  ApexChart,\n  ApexXAxis,\n  ApexDataLabels,\n  ApexTooltip,\n  ApexYAxis,\n  ApexPlotOptions,\n  ApexStroke,\n  ApexLegend,\n  ApexFill,\n} from 'ng-apexcharts';\nexport type areaChartOptions = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  xaxis: ApexXAxis;\n  yaxis: ApexYAxis;\n  stroke: ApexStroke;\n  tooltip: ApexTooltip;\n  dataLabels: ApexDataLabels;\n  legend: ApexLegend;\n  colors: string[];\n};\n\nexport type barChartOptions1 = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  dataLabels: ApexDataLabels;\n  plotOptions: ApexPlotOptions;\n  yaxis: ApexYAxis;\n  xaxis: ApexXAxis;\n  fill: ApexFill;\n  colors: string[];\n};\n\nexport type barChartOptions2 = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  dataLabels: ApexDataLabels;\n  plotOptions: ApexPlotOptions;\n  yaxis: ApexYAxis;\n  xaxis: ApexXAxis;\n  fill: ApexFill;\n  colors: string[];\n};\n\n@Component({\n  selector: 'app-report',\n  templateUrl: './report.component.html',\n  styleUrls: ['./report.component.sass']\n})\nexport class ReportComponent implements OnInit {\n  displayedColumns = [\n    'select',\n    'sno',\n    'date',\n    'investedAmount',\n    'percentage',\n    'actions',\n  ];\n  exampleDatabase: TeachersService | null;\n  dataSource: ExampleDataSource | null;\n  selection = new SelectionModel<Teachers>(true, []);\n  id: number;\n  teachers: Teachers | null;\n\n  @ViewChild('chart') chart: ChartComponent;\n  public areaChartOptions: Partial<areaChartOptions>;\n  public barChartOptions1: Partial<barChartOptions1>;\n  public barChartOptions2: Partial<barChartOptions2>;\n\n\n  proForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    public httpClient: HttpClient,\n    public dialog: MatDialog,\n    public teachersService: TeachersService,\n    private snackBar: MatSnackBar\n  ) {\n    this.proForm = this.fb.group({\n      from: ['', [Validators.required, Validators.pattern('[a-zA-Z]+')]],\n      to: [''],\n    });\n  }\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild('filter', { static: true }) filter: ElementRef;\n  @ViewChild(MatMenuTrigger)\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: '0px', y: '0px' };\n\n  onSubmit() {\n    console.log('Form Value', this.proForm.value);\n  }\n\n  ngOnInit(): void {\n    this.loadData();\n    this.chart1();\n    this.chart2();\n  }\n\n  addNew() {\n    const dialogRef = this.dialog.open(FormDialogComponent, {\n      data: {\n        teachers: this.teachers,\n        action: 'add',\n      },\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        // After dialog is closed we're doing frontend updates\n        // For add we're just pushing a new row inside DataServicex\n        this.exampleDatabase.dataChange.value.unshift(\n          this.teachersService.getDialogData()\n        );\n        this.refreshTable();\n        this.showNotification(\n          'snackbar-success',\n          'Add Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  editCall(row) {\n    this.id = row.id;\n    const dialogRef = this.dialog.open(FormDialogComponent, {\n      data: {\n        teachers: row,\n        action: 'edit',\n      },\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        // When using an edit things are little different, firstly we find record inside DataService by id\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          (x) => x.id === this.id\n        );\n        // Then you update that record using data from dialogData (values you enetered)\n        this.exampleDatabase.dataChange.value[\n          foundIndex\n        ] = this.teachersService.getDialogData();\n        // And lastly refresh table\n        this.refreshTable();\n        this.showNotification(\n          'black',\n          'Edit Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  deleteItem(row) {\n    this.id = row.id;\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: row,\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          (x) => x.id === this.id\n        );\n        // for delete we use splice in order to remove single object from DataService\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\n        this.refreshTable();\n        this.showNotification(\n          'snackbar-danger',\n          'Delete Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  private refreshTable() {\n    this.paginator._changePageSize(this.paginator.pageSize);\n  }\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.renderedData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selection.clear()\n      : this.dataSource.renderedData.forEach((row) =>\n          this.selection.select(row)\n        );\n  }\n  removeSelectedRows() {\n    const totalSelect = this.selection.selected.length;\n    this.selection.selected.forEach((item) => {\n      const index: number = this.dataSource.renderedData.findIndex(\n        (d) => d === item\n      );\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\n      this.exampleDatabase.dataChange.value.splice(index, 1);\n      this.refreshTable();\n      this.selection = new SelectionModel<Teachers>(true, []);\n    });\n    this.showNotification(\n      'snackbar-danger',\n      totalSelect + ' Record Delete Successfully...!!!',\n      'bottom',\n      'center'\n    );\n  }\n  public loadData() {\n    this.exampleDatabase = new TeachersService(this.httpClient);\n    console.log(\"exampleDatabase\", this.exampleDatabase);\n    this.dataSource = new ExampleDataSource(\n      this.exampleDatabase,\n      this.paginator,\n      this.sort\n    );\n    console.log(\"dataSource\", this.dataSource);\n    fromEvent(this.filter.nativeElement, 'keyup').subscribe(() => {\n      if (!this.dataSource) {\n        return;\n      }\n      this.dataSource.filter = this.filter.nativeElement.value;\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this.snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName,\n    });\n  }\n  // context menu\n  onContextMenu(event: MouseEvent, item: Teachers) {\n    event.preventDefault();\n    this.contextMenuPosition.x = event.clientX + 'px';\n    this.contextMenuPosition.y = event.clientY + 'px';\n    // this.contextMenu.menuData = { item: item };\n    // this.contextMenu.menu.focusFirstItem('mouse');\n    // this.contextMenu.openMenu();\n  }\n\n  private chart1() {\n    this.barChartOptions1 = {\n      series: [\n        {\n          name: 'Investment',\n          data: [150000, 0, 30000, 0, 0, 50000, 0, 0, 0, 70000],\n        },\n      ],\n      chart: {\n        height: 320,\n        type: 'bar',\n        toolbar: {\n          show: false,\n        },\n        foreColor: '#9aa0ac',\n      },\n      plotOptions: {\n        bar: {\n          dataLabels: {\n            position: 'top', // top, center, bottom\n          },\n        },\n      },\n      dataLabels: {\n        enabled: false,\n        formatter: function (val) {\n          return val + '%';\n        },\n        offsetY: -20,\n        style: {\n          fontSize: '12px',\n          colors: ['#9aa0ac'],\n        },\n      },\n\n      xaxis: {\n        categories: [\n          'Jan-01',\n          'Jan-03',\n          'Jan-05',\n          'Jan-07',\n          'Jan-09',\n          'Jan-11',\n          'Jan-13',\n          'Jan-15',\n          'Jan-17',\n          'Jan-19',\n        ],\n        position: 'bottom',\n        labels: {\n          offsetY: 0,\n        },\n        axisBorder: {\n          show: false,\n        },\n        axisTicks: {\n          show: false,\n        },\n        crosshairs: {\n          fill: {\n            type: 'gradient',\n            gradient: {\n              colorFrom: '#D8E3F0',\n              colorTo: '#BED1E6',\n              stops: [0, 100],\n              opacityFrom: 0.4,\n              opacityTo: 0.5,\n            },\n          },\n        },\n        tooltip: {\n          enabled: true,\n          offsetY: -35,\n        },\n      },\n      fill: {\n        type: 'gradient',\n        colors: ['#4F86F8', '#4F86F8'],\n        gradient: {\n          shade: 'light',\n          type: 'horizontal',\n          shadeIntensity: 0.25,\n          gradientToColors: undefined,\n          inverseColors: true,\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [50, 0, 100, 100],\n        },\n      },\n      yaxis: {\n        axisBorder: {\n          show: false,\n        },\n        axisTicks: {\n          show: false,\n        },\n        labels: {\n          show: true,\n          formatter: function (val) {\n            return val + '';\n          },\n        },\n      },\n    };\n  }\n\n  private chart2() {\n    this.barChartOptions2 = {\n      series: [\n        {\n          name: 'Investment',\n          data: [150000, 30000, 50000, 70000],\n        },\n      ],\n      chart: {\n        height: 320,\n        type: 'bar',\n        toolbar: {\n          show: false,\n        },\n        foreColor: '#9aa0ac',\n      },\n      plotOptions: {\n        bar: {\n          dataLabels: {\n            position: 'top', // top, center, bottom\n          },\n        },\n      },\n      dataLabels: {\n        enabled: false,\n        formatter: function (val) {\n          return val + '%';\n        },\n        offsetY: -20,\n        style: {\n          fontSize: '12px',\n          colors: ['#9aa0ac'],\n        },\n      },\n\n      xaxis: {\n        categories: [\n          'Jan',\n          'Feb',\n          'Mar',\n          'April',\n        ],\n        position: 'bottom',\n        labels: {\n          offsetY: 0,\n        },\n        axisBorder: {\n          show: false,\n        },\n        axisTicks: {\n          show: false,\n        },\n        crosshairs: {\n          fill: {\n            type: 'gradient',\n            gradient: {\n              colorFrom: '#D8E3F0',\n              colorTo: '#BED1E6',\n              stops: [0, 100],\n              opacityFrom: 0.4,\n              opacityTo: 0.5,\n            },\n          },\n        },\n        tooltip: {\n          enabled: true,\n          offsetY: -35,\n        },\n      },\n      fill: {\n        type: 'gradient',\n        colors: ['#4F86F8', '#4F86F8'],\n        gradient: {\n          shade: 'light',\n          type: 'horizontal',\n          shadeIntensity: 0.25,\n          gradientToColors: undefined,\n          inverseColors: true,\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [50, 0, 100, 100],\n        },\n      },\n      yaxis: {\n        axisBorder: {\n          show: false,\n        },\n        axisTicks: {\n          show: false,\n        },\n        labels: {\n          show: true,\n          formatter: function (val) {\n            return val + '';\n          },\n        },\n      },\n    };\n  }\n}\n\nexport class ExampleDataSource extends DataSource<Teachers> {\n  filterChange = new BehaviorSubject('');\n  get filter(): string {\n    return this.filterChange.value;\n  }\n  set filter(filter: string) {\n    this.filterChange.next(filter);\n  }\n  filteredData: Teachers[] = [];\n  renderedData: Teachers[] = [];\n  constructor(\n    public exampleDatabase: TeachersService,\n    public paginator: MatPaginator,\n    public _sort: MatSort\n  ) {\n    super();\n    // Reset to the first page when the user changes the filter.\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\n  }\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<Teachers[]> {\n    // Listen for any changes in the base data, sorting, filtering, or pagination\n    const displayDataChanges = [\n      this.exampleDatabase.dataChange,\n      this._sort.sortChange,\n      this.filterChange,\n      this.paginator.page,\n    ];\n    this.exampleDatabase.getAllTeacherss();\n    return merge(...displayDataChanges).pipe(\n      map(() => {\n        // Filter data\n        this.filteredData = this.exampleDatabase.data\n          .slice()\n          .filter((teachers: Teachers) => {\n            const searchStr = (\n              teachers.date +\n              teachers.investedAmount +\n              teachers.percentage\n            ).toLowerCase();\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\n          });\n        // Sort filtered data\n        const sortedData = this.sortData(this.filteredData.slice());\n        // Grab the page's slice of the filtered sorted data.\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        this.renderedData = sortedData.splice(\n          startIndex,\n          this.paginator.pageSize\n        );\n        return this.renderedData;\n      })\n    );\n  }\n  disconnect() {}\n  /** Returns a sorted copy of the database data. */\n  sortData(data: Teachers[]): Teachers[] {\n    if (!this._sort.active || this._sort.direction === '') {\n      return data;\n    }\n    return data.sort((a, b) => {\n      let propertyA: number | string = '';\n      let propertyB: number | string = '';\n      switch (this._sort.active) {\n        case 'id':\n          [propertyA, propertyB] = [a.id, b.id];\n          break;\n        case 'sno':\n          [propertyA, propertyB] = [a.sno, b.sno];\n          break;\n        case 'date':\n          [propertyA, propertyB] = [a.date, b.date];\n          break;\n        case 'investedAmount':\n          [propertyA, propertyB] = [a.investedAmount, b.investedAmount];\n          break;\n        case 'percentage':\n          [propertyA, propertyB] = [a.percentage, b.percentage];\n          break;\n      }\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n      return (\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\n      );\n    });\n  }\n}\n","<section class=\"content\" style=\"margin-top: 10px\">\n  <div class=\"container-fluid\">\n    <div class=\"block-header\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n          <ul class=\"breadcrumb breadcrumb-style \">\n            <li class=\"breadcrumb-item\">\n              <h4 class=\"page-title\">Report</h4>\n            </li>\n            <li class=\"breadcrumb-item bcrumb-1\">\n              <a routerLink=\"/admin/dashboard/main\">\n                <i class=\"fas fa-home\"></i></a>\n            </li>\n            <a class=\"active\" style=\"color: #444444; padding: 3px 0;\">Report</a>\n          </ul>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <mat-tab-group>\n          <mat-tab>\n            <ng-template mat-tab-label>\n              <i class=\"material-icons-two-tone pr-3\">list_alt</i>\n              Investment Amount\n            </ng-template>\n            <div class=\"mt-5\">\n              <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n                  <div class=\"body\">\n                    <div class=\"table-responsive\">\n                      <div class=\"materialTableHeader\" style=\"min-width: unset;\">\n                        <div class=\"row\">\n                          <div class=\"col-7\">\n                            <ul class=\"header-buttons-left ml-0\">\n                              <!-- <li class=\"dropdown\">\n                                <h2>\n                                  <strong>Teachers</strong></h2>\n                              </li> -->\n                              <li class=\"dropdown m-l-20\">\n                                <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                                <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\n                                  aria-label=\"Search box\">\n                              </li>\n                              <!-- <li>\n                                <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\n                                  <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\n                                    <mat-icon class=\"col-white\">delete\n                                    </mat-icon>\n                                  </button>\n                                </div>\n                              </li> -->\n                            </ul>\n                          </div>\n                          <div class=\"col-4\">\n                            <ul class=\"header-buttons\">\n                              <!-- <li>\n                                <div class=\"icon-button-demo\">\n                                  <button mat-raised-button color=\"primary\" (click)=\"addNew()\">\n                                    <mat-icon class=\"col-white\" style=\"font-size: 16px; padding: 3px;\">add</mat-icon>Add\n                                  </button>\n                                </div>\n                              </li> -->\n                              <!-- <li>\n                                <div class=\"icon-button-demo\">\n                                  <button mat-mini-fab color=\"primary\">\n                                    <mat-icon class=\"col-white\">refresh\n                                    </mat-icon>\n                                  </button>\n                                </div>\n                              </li> -->\n                            </ul>\n                          </div>\n                        </div>\n                      </div>\n                      <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\n                        <!-- Checkbox Column -->\n                        <ng-container matColumnDef=\"select\">\n                          <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-10'\">\n                            <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                              [checked]=\"selection.hasValue() && isAllSelected()\"\n                              [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\n                            </mat-checkbox>\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-10'\">\n                            <mat-checkbox (click)=\"$event.stopPropagation()\"\n                              (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\n                              [ngClass]=\"'tbl-checkbox'\">\n                            </mat-checkbox>\n                          </mat-cell>\n                        </ng-container>\n                        <!-- ID Column -->\n                        <ng-container matColumnDef=\"id\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header>Id\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"sno\">\n                          <mat-header-cell mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-10'\"> S.NO\n                          </mat-header-cell>\n                          <mat-cell mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"\n                          class=\"table-img tbl-col-width-per-10\"> {{row.sno}}\n                          </mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"date\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-16'\">Date\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\" [ngClass]=\"'tbl-col-width-per-16'\"> {{row.date}}\n                          </mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"investedAmount\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-20'\">Invested Amount\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\" [ngClass]=\"'tbl-col-width-per-20'\">\n                            {{row.investedAmount}}</mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"percentage\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-14'\">Percentage\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\" [ngClass]=\"'tbl-col-width-per-14'\"> {{row.percentage}}\n                          </mat-cell>\n                        </ng-container>\n                        <!-- actions -->\n                        <ng-container matColumnDef=\"actions\">\n                          <mat-header-cell class=\"pr-0\" *matHeaderCellDef>Actions\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\n                            <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\n                              (click)=\"editCall(row)\">\n                              <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\n                            </button>\n                            <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\n                              (click)=\"deleteItem(row)\">\n                              <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\n                            </button>\n                          </mat-cell>\n                        </ng-container>\n                        <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                        </mat-header-row>\n                        <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\n                        <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\n                          [style.cursor]=\"'pointer'\" matRipple>\n                        </mat-row>\n                      </mat-table>\n                      <!-- Loading spinner -->\n                      <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\n                        <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                        </mat-progress-spinner>\n                      </div>\n                      <!-- context menu start -->\n                      <div style=\"visibility: hidden; position: fixed\" [style.left]=\"contextMenuPosition.x\"\n                        [style.top]=\"contextMenuPosition.y\" [matMenuTriggerFor]=\"contextMenu\">\n                      </div>\n                      <mat-menu #contextMenu=\"matMenu\">\n                        <ng-template matMenuContent let-item=\"item\">\n                          <button mat-menu-item (click)=\"addNew()\">\n                            <mat-icon>add_box</mat-icon>\n                            <span>Add Record</span>\n                          </button>\n                          <button mat-menu-item (click)=\"editCall(item)\">\n                            <mat-icon>create</mat-icon>\n                            <span>Edit Record</span>\n                          </button>\n                          <button mat-menu-item (click)=\"deleteItem(item)\">\n                            <mat-icon>delete</mat-icon>\n                            <span>Delete Record</span>\n                          </button>\n                          <button mat-menu-item (click)=\"refresh()\">\n                            <mat-icon>refresh</mat-icon>\n                            <span>Refresh Record</span>\n                          </button>\n                          <button mat-menu-item disabled>\n                            <mat-icon>no_encryption</mat-icon>\n                            <span>Disable</span>\n                          </button>\n                          <button mat-menu-item [matMenuTriggerFor]=\"nestedmenu\">\n                            <mat-icon>list_alt</mat-icon>\n                            <span> Nested Menu</span>\n                          </button>\n                        </ng-template>\n                      </mat-menu>\n                      <mat-menu #nestedmenu=\"matMenu\">\n                        <button mat-menu-item>\n                          <mat-icon>mail_outline</mat-icon>\n                          <span>Item 1</span>\n                        </button>\n                        <button mat-menu-item>\n                          <mat-icon>call</mat-icon>\n                          <span>Item 2</span>\n                        </button>\n                        <button mat-menu-item>\n                          <mat-icon>chat</mat-icon>\n                          <span>Item 3</span>\n                        </button>\n                      </mat-menu>\n                      <!-- context menu end -->\n                      <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\n                        [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\n                        No results\n                      </div>\n                      <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\"\n                        [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\">\n                      </mat-paginator>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <div class=\"card\">\n                  <div class=\"header\">\n                    <h2>Invested Amount</h2>\n                    <!-- <button mat-button [matMenuTriggerFor]=\"menu\" class=\"header-dropdown\">\n                      <mat-icon>more_vert</mat-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                      <button mat-menu-item>Action</button>\n                      <button mat-menu-item>Another action</button>\n                      <button mat-menu-item>Something else here</button>\n                    </mat-menu> -->\n                  </div>\n                  <div class=\"body\">\n                    <apx-chart [series]=\"barChartOptions1.series\" [chart]=\"barChartOptions1.chart\"\n                      [dataLabels]=\"barChartOptions1.dataLabels\" [plotOptions]=\"barChartOptions1.plotOptions\"\n                      [yaxis]=\"barChartOptions1.yaxis\" [xaxis]=\"barChartOptions1.xaxis\" [fill]=\"barChartOptions1.fill\"></apx-chart>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </mat-tab>\n          <mat-tab>\n            <ng-template mat-tab-label>\n              <i class=\"material-icons-two-tone pr-3\">grid_on</i>\n              Withdrwan Amount\n            </ng-template>\n            <div class=\"row\">\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                <div class=\"card\">\n                  <div class=\"body\">\n                    <div class=\"table-responsive\">\n                      <div class=\"materialTableHeader\" style=\"min-width: unset;\">\n                        <div class=\"row\">\n                          <div class=\"col-5\">\n                            <ul class=\"header-buttons-left ml-0\">\n                              <!-- <li class=\"dropdown\">\n                                <h2>\n                                  <strong>Teachers</strong></h2>\n                              </li> -->\n                              <li class=\"dropdown m-l-20\">\n                                <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                                <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\n                                  aria-label=\"Search box\">\n                              </li>\n                              <!-- <li>\n                                <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\n                                  <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\n                                    <mat-icon class=\"col-white\">delete\n                                    </mat-icon>\n                                  </button>\n                                </div>\n                              </li> -->\n                            </ul>\n                          </div>\n                          <div class=\"col-4\">\n                            <ul class=\"header-buttons\">\n                              <!-- <li>\n                                <div class=\"icon-button-demo\">\n                                  <button mat-raised-button color=\"primary\" (click)=\"addNew()\">\n                                    <mat-icon class=\"col-white\" style=\"font-size: 16px; padding: 3px;\">add</mat-icon>Add\n                                  </button>\n                                </div>\n                              </li> -->\n                              <!-- <li>\n                                <div class=\"icon-button-demo\">\n                                  <button mat-mini-fab color=\"primary\">\n                                    <mat-icon class=\"col-white\">refresh\n                                    </mat-icon>\n                                  </button>\n                                </div>\n                              </li> -->\n                            </ul>\n                          </div>\n                        </div>\n                      </div>\n                      <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\n                        <!-- Checkbox Column -->\n                        <ng-container matColumnDef=\"select\">\n                          <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-14'\">\n                            <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                              [checked]=\"selection.hasValue() && isAllSelected()\"\n                              [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\n                            </mat-checkbox>\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-14'\">\n                            <mat-checkbox (click)=\"$event.stopPropagation()\"\n                              (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\n                              [ngClass]=\"'tbl-checkbox'\">\n                            </mat-checkbox>\n                          </mat-cell>\n                        </ng-container>\n                        <!-- ID Column -->\n                        <ng-container matColumnDef=\"id\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header>Id\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"sno\">\n                          <mat-header-cell mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-12'\"> S.NO\n                          </mat-header-cell>\n                          <mat-cell mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"\n                          class=\"table-img tbl-col-width-per-12\"> {{row.sno}}\n                          </mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"date\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-20'\">Date\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\" [ngClass]=\"'tbl-col-width-per-20'\"> {{row.date}}\n                          </mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"investedAmount\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-20'\">Invested Amount\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\" [ngClass]=\"'tbl-col-width-per-20'\">\n                            {{row.investedAmount}}</mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"percentage\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-164'\">Percentage\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\" [ngClass]=\"'tbl-col-width-per-16'\"> {{row.percentage}}\n                          </mat-cell>\n                        </ng-container>\n                        <!-- actions -->\n                        <ng-container matColumnDef=\"actions\">\n                          <mat-header-cell class=\"pr-0\" *matHeaderCellDef>Actions\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\n                            <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\n                              (click)=\"editCall(row)\">\n                              <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\n                            </button>\n                            <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\n                              (click)=\"deleteItem(row)\">\n                              <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\n                            </button>\n                          </mat-cell>\n                        </ng-container>\n                        <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                        </mat-header-row>\n                        <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\n                        <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\n                          [style.cursor]=\"'pointer'\" matRipple>\n                        </mat-row>\n                      </mat-table>\n                      <!-- Loading spinner -->\n                      <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\n                        <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                        </mat-progress-spinner>\n                      </div>\n                      <!-- context menu start -->\n                      <div style=\"visibility: hidden; position: fixed\" [style.left]=\"contextMenuPosition.x\"\n                        [style.top]=\"contextMenuPosition.y\" [matMenuTriggerFor]=\"contextMenu\">\n                      </div>\n                      <mat-menu #contextMenu=\"matMenu\">\n                        <ng-template matMenuContent let-item=\"item\">\n                          <button mat-menu-item (click)=\"addNew()\">\n                            <mat-icon>add_box</mat-icon>\n                            <span>Add Record</span>\n                          </button>\n                          <button mat-menu-item (click)=\"editCall(item)\">\n                            <mat-icon>create</mat-icon>\n                            <span>Edit Record</span>\n                          </button>\n                          <button mat-menu-item (click)=\"deleteItem(item)\">\n                            <mat-icon>delete</mat-icon>\n                            <span>Delete Record</span>\n                          </button>\n                          <button mat-menu-item (click)=\"refresh()\">\n                            <mat-icon>refresh</mat-icon>\n                            <span>Refresh Record</span>\n                          </button>\n                          <button mat-menu-item disabled>\n                            <mat-icon>no_encryption</mat-icon>\n                            <span>Disable</span>\n                          </button>\n                          <button mat-menu-item [matMenuTriggerFor]=\"nestedmenu\">\n                            <mat-icon>list_alt</mat-icon>\n                            <span> Nested Menu</span>\n                          </button>\n                        </ng-template>\n                      </mat-menu>\n                      <mat-menu #nestedmenu=\"matMenu\">\n                        <button mat-menu-item>\n                          <mat-icon>mail_outline</mat-icon>\n                          <span>Item 1</span>\n                        </button>\n                        <button mat-menu-item>\n                          <mat-icon>call</mat-icon>\n                          <span>Item 2</span>\n                        </button>\n                        <button mat-menu-item>\n                          <mat-icon>chat</mat-icon>\n                          <span>Item 3</span>\n                        </button>\n                      </mat-menu>\n                      <!-- context menu end -->\n                      <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\n                        [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\n                        No results\n                      </div>\n                      <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\"\n                        [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\">\n                      </mat-paginator>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <div class=\"card\">\n                  <div class=\"header\">\n                    <h2>Withdrwan Amount</h2>\n                    <!-- <button mat-button [matMenuTriggerFor]=\"menu\" class=\"header-dropdown\">\n                      <mat-icon>more_vert</mat-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                      <button mat-menu-item>Action</button>\n                      <button mat-menu-item>Another action</button>\n                      <button mat-menu-item>Something else here</button>\n                    </mat-menu> -->\n                  </div>\n                  <div class=\"body\">\n                    <apx-chart [series]=\"barChartOptions2.series\" [chart]=\"barChartOptions2.chart\"\n                      [dataLabels]=\"barChartOptions2.dataLabels\" [plotOptions]=\"barChartOptions2.plotOptions\"\n                      [yaxis]=\"barChartOptions2.yaxis\" [xaxis]=\"barChartOptions2.xaxis\" [fill]=\"barChartOptions2.fill\"></apx-chart>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </mat-tab>\n        </mat-tab-group>\n      </div>\n    </div>\n  </div>\n</section>\n"]}