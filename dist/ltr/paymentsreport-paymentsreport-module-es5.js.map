{"version":3,"sources":["webpack:///src/app/paymentsreport/paymentsreport.module.ts","webpack:///src/app/paymentsreport/teachers.service.ts","webpack:///src/app/paymentsreport/dialogs/delete/delete.component.ts","webpack:///src/app/paymentsreport/dialogs/delete/delete.component.html","webpack:///src/app/paymentsreport/teachers.model.ts","webpack:///src/app/paymentsreport/dialogs/form-dialog/form-dialog.component.ts","webpack:///src/app/paymentsreport/dialogs/form-dialog/form-dialog.component.html","webpack:///src/app/paymentsreport/paymentsreport-routing.module.ts","webpack:///src/app/paymentsreport/paymentsreport.component.ts","webpack:///src/app/paymentsreport/paymentsreport.component.html"],"names":["PaymentsreportModule","forRoot","echarts","declarations","imports","providers","TeachersService","httpClient","firestore","API_URL","isTblLoading","dataChange","paymentData","dialogData","collection","get","subscribe","ss","docs","forEach","doc","push","data","console","log","next","teachers","id","value","DeleteDialogComponent","dialogRef","teachersService","docId","close","deleteTeachers","ref","where","accountName","paidAmount","date","confirmDelete","onNoClick","selector","templateUrl","styleUrls","Teachers","getRandomID","Date","clientName","investedAmount","S4","Math","random","toString","substring","FormDialogComponent","fb","proForm","formControl","required","action","dialogTitle","createContactForm","hasError","group","add","then","res","e","addTeachers","getRawValue","update","confirmAdd","routes","path","component","PaymentsreportRoutingModule","forChild","exports","$event","stopPropagation","selection","PaymentsreportComponent","dialog","snackBar","authService","displayedColumns","contextMenuPosition","x","y","userRole","currentUserValue","from","pattern","to","loadData","chart2","isAdmin","open","afterClosed","result","exampleDatabase","unshift","getDialogData","refreshTable","showNotification","row","foundIndex","findIndex","splice","paginator","_changePageSize","pageSize","numSelected","selected","length","numRows","dataSource","renderedData","isAllSelected","clear","select","totalSelect","item","index","d","ExampleDataSource","sort","filter","nativeElement","colorName","text","placementFrom","placementAlign","duration","verticalPosition","horizontalPosition","panelClass","event","preventDefault","clientX","clientY","barChartOptions","series","name","chart","height","type","toolbar","show","foreColor","plotOptions","bar","dataLabels","position","enabled","formatter","val","offsetY","style","fontSize","colors","xaxis","categories","labels","axisBorder","axisTicks","crosshairs","fill","gradient","colorFrom","colorTo","stops","opacityFrom","opacityTo","tooltip","shade","shadeIntensity","gradientToColors","undefined","inverseColors","yaxis","onSubmit","removeSelectedRows","contextMenu","_sort","filterChange","filteredData","pageIndex","displayDataChanges","sortChange","page","getAllTeacherss","pipe","slice","searchStr","toLowerCase","indexOf","sortedData","sortData","startIndex","active","direction","a","b","propertyA","propertyB","valueA","isNaN","valueB"],"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","file":"paymentsreport-paymentsreport-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PaymentsreportRoutingModule } from './paymentsreport-routing.module';\nimport { PaymentsreportComponent } from './paymentsreport.component';\n\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { NgxEchartsModule } from 'ngx-echarts';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { DeleteDialogComponent } from './dialogs/delete/delete.component';\nimport { FormDialogComponent } from './dialogs/form-dialog/form-dialog.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { TeachersService } from './teachers.service';\n\n\n@NgModule({\n  declarations: [PaymentsreportComponent, DeleteDialogComponent, FormDialogComponent],\n  imports: [\n    CommonModule,\n    PaymentsreportRoutingModule,\n\n    NgxEchartsModule.forRoot({\n      echarts: () => import('echarts'),\n    }),\n    PerfectScrollbarModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgApexchartsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDialogModule,\n    MatSortModule,\n    MatToolbarModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatCheckboxModule,\n    MatTabsModule,\n    MaterialFileInputModule,\n    MatMenuModule,\n    MatProgressSpinnerModule,\n  ],\n  providers: [TeachersService],\n})\nexport class PaymentsreportModule { }\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Teachers } from './teachers.model';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\n@Injectable()\r\nexport class TeachersService {\r\n  private readonly API_URL = 'assets/data/paymentreport.json';\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<Teachers[]> = new BehaviorSubject<Teachers[]>([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  paymentData: any[] = [];\r\n  constructor(private httpClient: HttpClient, private firestore: AngularFirestore) {}\r\n  get data(): Teachers[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllTeacherss(): void {\r\n    this.firestore\r\n    .collection(\"paymentreport\")\r\n    .get()\r\n    .subscribe((ss) => {\r\n      ss.docs.forEach((doc) => {\r\n        this.paymentData.push(doc.data());\r\n        console.log(this.paymentData);\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(this.paymentData);\r\n      });\r\n    });\r\n    // this.httpClient.get<Teachers[]>(this.API_URL).subscribe(\r\n    //   (data) => {\r\n    //     this.isTblLoading = false;\r\n    //     this.dataChange.next(data);\r\n    //   },\r\n    //   (error: HttpErrorResponse) => {\r\n    //     this.isTblLoading = false;\r\n    //     console.log(error.name + ' ' + error.message);\r\n    //   }\r\n    // );\r\n  }\r\n  addTeachers(teachers: Teachers): void {\r\n    this.dialogData = teachers;\r\n\r\n    /*  this.httpClient.post(this.API_URL, teachers).subscribe(data => {\r\n      this.dialogData = teachers;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updateTeachers(teachers: Teachers): void {\r\n    this.dialogData = teachers;\r\n\r\n    /* this.httpClient.put(this.API_URL + teachers.id, teachers).subscribe(data => {\r\n      this.dialogData = teachers;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deleteTeachers(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { TeachersService } from '../../teachers.service';\nimport { AngularFirestore } from \"@angular/fire/firestore\";\n\n@Component({\n  selector: 'app-delete',\n  templateUrl: './delete.component.html',\n  styleUrls: ['./delete.component.sass']\n})\nexport class DeleteDialogComponent implements OnInit {\n  docId: string = \"\";\n\n  constructor(\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public teachersService: TeachersService,\n    private firestore: AngularFirestore\n  ) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  confirmDelete(): void {\n    this.firestore.collection('paymentreport').doc(this.docId).delete();\n    this.teachersService.deleteTeachers(this.data.id);\n  }\n\n  ngOnInit(): void {\n    console.log(this.data.id);\n    this.firestore\n      .collection(\"paymentreport\", (ref) =>\n        ref\n          .where(\"accountName\", \"==\", this.data.accountName)\n          .where(\"paidAmount\", \"==\", this.data.paidAmount)\n          .where(\"date\", \"==\", this.data.date)\n          .where(\"id\", \"==\", this.data.id)\n      )\n      .get()\n      .subscribe((ss) => {\n        ss.docs.forEach((doc) => {\n          this.docId = doc.id;\n        });\n      });\n  }\n\n}\n","<div class=\"container\">\n  <h3 mat-dialog-title>Are you sure?</h3>\n  <div mat-dialog-content>\n    <ul class=\"clearfix\">\n      <li>\n        <p><span class=\"font-weight-bold\"> Account Name: </span>{{data.accountName}}</p>\n      </li>\n      <li>\n        <p><span class=\"font-weight-bold\"> Paid Amount: </span>{{ data.paidAmount }}</p>\n      </li>\n    </ul>\n  </div>\n  <div mat-dialog-actions class=\"mb-1\">\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\n      Delete\n    </button>\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n  </div>\n</div>\n","import { formatDate } from '@angular/common';\r\nexport class Teachers {\r\n  id: number;\r\n  date: string;\r\n  accountName: string;\r\n  paidAmount: string;\r\n  constructor(teachers) {\r\n    {\r\n      this.id = teachers.id || this.getRandomID();\r\n      this.date = formatDate(teachers.date ? teachers.date : new Date(), \"yyyy-MM-dd\", \"en\") || formatDate(new Date(), 'yyyy-MM-dd', 'en');\r\n      this.accountName = teachers.clientName || '';\r\n      this.paidAmount = teachers.investedAmount || '';\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { TeachersService } from '../../teachers.service';\nimport {\n  FormControl,\n  Validators,\n  FormGroup,\n  FormBuilder,\n} from '@angular/forms';\nimport { Teachers } from '../../teachers.model';\nimport { formatDate } from '@angular/common';\nimport { AngularFirestore } from \"@angular/fire/firestore\";\n\n@Component({\n  selector: 'app-form-dialog',\n  templateUrl: './form-dialog.component.html',\n  styleUrls: ['./form-dialog.component.sass']\n})\nexport class FormDialogComponent implements OnInit {\n  action: string;\n  dialogTitle: string;\n  teachers: Teachers;\n  docId: string = \"\";\n\n  proForm = new FormGroup({\n    date: new FormControl(\"date\"),\n    accountName: new FormControl(\"accountName\"),\n    paidAmount: new FormControl(\"paidAmount\"),\n  });\n\n  constructor(\n    public dialogRef: MatDialogRef<FormDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public teachersService: TeachersService,\n    private fb: FormBuilder,\n    private firestore: AngularFirestore\n  ) {\n    // Set the defaults\n    this.action = data.action;\n    if (this.action === 'edit') {\n      this.dialogTitle = data.teachers.accountName;\n      this.teachers = data.teachers;\n      this.firestore\n        .collection(\"paymentreport\", (ref) =>\n          ref\n            .where(\"accountName\", \"==\", data.teachers.accountName)\n            .where(\"paidAmount\", \"==\", data.teachers.paidAmount)\n            .where(\"date\", \"==\", data.teachers.date)\n            .where(\"id\", \"==\", data.teachers.id)\n        )\n        .get()\n        .subscribe((ss) => {\n          ss.docs.forEach((doc) => {\n            this.docId = doc.id;\n          });\n        });\n    } else {\n      this.dialogTitle = 'New Payment';\n      this.teachers = new Teachers({});\n    }\n    this.proForm = this.createContactForm();\n  }\n  formControl = new FormControl('', [\n    Validators.required,\n    // Validators.email,\n  ]);\n  getErrorMessage() {\n    return this.formControl.hasError('required')\n      ? 'Required field'\n      : this.formControl.hasError('email')\n      ? 'Not a valid email'\n      : '';\n  }\n  createContactForm(): FormGroup {\n    return this.fb.group({\n      id: [this.teachers.id],\n      // email: [\n      //   this.teachers.email,\n      //   [Validators.required, Validators.email, Validators.minLength(5)],\n      // ],\n      date: [this.teachers.date],\n      accountName: [this.teachers.accountName],\n      paidAmount: [this.teachers.paidAmount]\n    });\n  }\n  submit() {\n    // emppty stuff\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  public confirmAdd(): void {\n    // console.log(this.proForm.value.date);\n    if (this.action === \"add\") {\n      this.firestore\n        .collection(\"paymentreport\")\n        .add({\n          id: this.teachers.id,\n          date: formatDate(this.proForm.value.date, \"yyyy-MM-dd\", \"en\"),\n          accountName: this.proForm.value.accountName,\n          paidAmount: this.proForm.value.paidAmount,\n        })\n        .then((res) => {\n          console.log(res);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n      this.teachersService.addTeachers(this.proForm.getRawValue());\n    } else if (this.action === \"edit\") {\n      this.firestore\n        .collection(\"paymentreport\")\n        .doc(this.docId)\n        .update({\n          id: this.teachers.id,\n          date: formatDate(this.proForm.value.date, \"yyyy-MM-dd\", \"en\"),\n          accountName: this.proForm.value.accountName,\n          paidAmount: this.proForm.value.paidAmount,\n        });\n      this.teachersService.addTeachers(this.proForm.getRawValue());\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"addContainer\">\n  <div class=\"modalHeader\">\n    <div class=\"editRowModal\">\n      <div class=\"modalHeader clearfix\">\n        <!-- <img [src]='teachers.img' alt=\"avatar\"> -->\n        <div class=\"modal-about\">\n          <div class=\"font-weight-bold p-t-5 font-17\">\n            {{dialogTitle}}</div>\n        </div>\n      </div>\n    </div>\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n  <div mat-dialog-content>\n    <form class=\"register-form m-4\" [formGroup]=\"proForm\" (ngSubmit)=\"submit\">\n      <div class=\"row\">\n        <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>S.NO</mat-label>\n            <input matInput formControlName=\"sno\" required>\n            <mat-icon matSuffix>note</mat-icon>\n            <mat-error *ngIf=\"proForm.get('sno')\">\n              sno is required\n            </mat-error>\n          </mat-form-field>\n        </div> -->\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Date</mat-label>\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"date\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n            <mat-error *ngIf=\"proForm.get('date')\">\n              Please select date\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Account Name</mat-label>\n            <input matInput formControlName=\"accountName\" required>\n            <mat-icon matSuffix>face</mat-icon>\n            <mat-error *ngIf=\"proForm.get('accountName')\">\n              Account Name is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Paid Amount</mat-label>\n            <input matInput formControlName=\"paidAmount\" required>\n            <mat-icon matSuffix>money</mat-icon>\n            <mat-error *ngIf=\"proForm.get('paidAmount')\">\n              Paid Amount is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n          <div class=\"example-button-row\">\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!proForm.valid\" [mat-dialog-close]=\"1\"\n              (click)=\"confirmAdd()\">Save</button>\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PaymentsreportComponent } from './paymentsreport.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PaymentsreportComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PaymentsreportRoutingModule { }\n","import { AuthService } from \"src/app/core/service/auth.service\";\nimport { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\nimport { TeachersService } from \"./teachers.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { Teachers } from \"./teachers.model\";\nimport { DataSource } from \"@angular/cdk/collections\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { BehaviorSubject, fromEvent, merge, Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { FormDialogComponent } from \"./dialogs/form-dialog/form-dialog.component\";\nimport { DeleteDialogComponent } from \"./dialogs/delete/delete.component\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { SelectionModel } from \"@angular/cdk/collections\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { AngularFirestore } from '@angular/fire/firestore';\n\nimport {\n  ChartComponent,\n  ApexAxisChartSeries,\n  ApexChart,\n  ApexXAxis,\n  ApexDataLabels,\n  ApexTooltip,\n  ApexYAxis,\n  ApexPlotOptions,\n  ApexStroke,\n  ApexLegend,\n  ApexFill,\n} from \"ng-apexcharts\";\nexport type areaChartOptions = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  xaxis: ApexXAxis;\n  yaxis: ApexYAxis;\n  stroke: ApexStroke;\n  tooltip: ApexTooltip;\n  dataLabels: ApexDataLabels;\n  legend: ApexLegend;\n  colors: string[];\n};\n\nexport type barChartOptions = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  dataLabels: ApexDataLabels;\n  plotOptions: ApexPlotOptions;\n  yaxis: ApexYAxis;\n  xaxis: ApexXAxis;\n  fill: ApexFill;\n  colors: string[];\n};\n\n@Component({\n  selector: \"app-paymentsreport\",\n  templateUrl: \"./paymentsreport.component.html\",\n  styleUrls: [\"./paymentsreport.component.sass\"],\n})\nexport class PaymentsreportComponent implements OnInit {\n  displayedColumns = [\n    \"select\",\n    \"date\",\n    \"accountName\",\n    \"paidAmount\",\n    \"actions\",\n  ];\n  exampleDatabase: TeachersService | null;\n  dataSource: ExampleDataSource | null;\n  selection = new SelectionModel<Teachers>(true, []);\n  id: number;\n  teachers: Teachers | null;\n\n  @ViewChild(\"chart\") chart: ChartComponent;\n  public areaChartOptions: Partial<areaChartOptions>;\n  public barChartOptions: Partial<barChartOptions>;\n\n  proForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    public httpClient: HttpClient,\n    public dialog: MatDialog,\n    public teachersService: TeachersService,\n    public firestore: AngularFirestore,\n    private snackBar: MatSnackBar,\n    public authService: AuthService\n  ) {\n    this.proForm = this.fb.group({\n      from: [\"\", [Validators.required, Validators.pattern(\"[a-zA-Z]+\")]],\n      to: [\"\"],\n    });\n  }\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild(\"filter\", { static: true }) filter: ElementRef;\n  @ViewChild(MatMenuTrigger)\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n\n  userRole = this.authService.currentUserValue[\"role\"];\n\n  isAdmin(): boolean {\n    if (this.userRole == \"Admin\") {\n      return true;\n    }\n  }\n\n  onSubmit() {\n    console.log(\"Form Value\", this.proForm.value);\n  }\n\n  ngOnInit(): void {\n    this.loadData();\n    this.chart2();\n    this.isAdmin();\n  }\n\n  addNew() {\n    const dialogRef = this.dialog.open(FormDialogComponent, {\n      data: {\n        teachers: this.teachers,\n        action: \"add\",\n      },\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        // After dialog is closed we're doing frontend updates\n        // For add we're just pushing a new row inside DataServicex\n        this.exampleDatabase.dataChange.value.unshift(\n          this.teachersService.getDialogData()\n        );\n        this.refreshTable();\n        this.showNotification(\n          \"snackbar-success\",\n          \"Add Record Successfully...!!!\",\n          \"bottom\",\n          \"center\"\n        );\n      }\n    });\n  }\n  editCall(row) {\n    this.id = row.id;\n    const dialogRef = this.dialog.open(FormDialogComponent, {\n      data: {\n        teachers: row,\n        action: \"edit\",\n      },\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        // When using an edit things are little different, firstly we find record inside DataService by id\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          (x) => x.id === this.id\n        );\n        // Then you update that record using data from dialogData (values you enetered)\n        this.exampleDatabase.dataChange.value[\n          foundIndex\n        ] = this.teachersService.getDialogData();\n        // And lastly refresh table\n        this.refreshTable();\n        this.showNotification(\n          \"black\",\n          \"Edit Record Successfully...!!!\",\n          \"bottom\",\n          \"center\"\n        );\n      }\n    });\n  }\n  deleteItem(row) {\n    this.id = row.id;\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: row,\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          (x) => x.id === this.id\n        );\n        // for delete we use splice in order to remove single object from DataService\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\n        this.refreshTable();\n        this.showNotification(\n          \"snackbar-danger\",\n          \"Delete Record Successfully...!!!\",\n          \"bottom\",\n          \"center\"\n        );\n      }\n    });\n  }\n  private refreshTable() {\n    this.paginator._changePageSize(this.paginator.pageSize);\n  }\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.renderedData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selection.clear()\n      : this.dataSource.renderedData.forEach((row) =>\n          this.selection.select(row)\n        );\n  }\n  removeSelectedRows() {\n    const totalSelect = this.selection.selected.length;\n    this.selection.selected.forEach((item) => {\n      const index: number = this.dataSource.renderedData.findIndex(\n        (d) => d === item\n      );\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\n      this.exampleDatabase.dataChange.value.splice(index, 1);\n      this.refreshTable();\n      this.selection = new SelectionModel<Teachers>(true, []);\n    });\n    this.showNotification(\n      \"snackbar-danger\",\n      totalSelect + \" Record Delete Successfully...!!!\",\n      \"bottom\",\n      \"center\"\n    );\n  }\n  public loadData() {\n    this.exampleDatabase = new TeachersService(this.httpClient, this.firestore);\n    console.log(\"exampleDatabase\", this.exampleDatabase);\n    this.dataSource = new ExampleDataSource(\n      this.exampleDatabase,\n      this.paginator,\n      this.sort\n    );\n    console.log(\"dataSource\", this.dataSource);\n    fromEvent(this.filter.nativeElement, \"keyup\").subscribe(() => {\n      if (!this.dataSource) {\n        return;\n      }\n      this.dataSource.filter = this.filter.nativeElement.value;\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this.snackBar.open(text, \"\", {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName,\n    });\n  }\n  // context menu\n  onContextMenu(event: MouseEvent, item: Teachers) {\n    event.preventDefault();\n    this.contextMenuPosition.x = event.clientX + \"px\";\n    this.contextMenuPosition.y = event.clientY + \"px\";\n    // this.contextMenu.menuData = { item: item };\n    // this.contextMenu.menu.focusFirstItem('mouse');\n    // this.contextMenu.openMenu();\n  }\n\n  private chart2() {\n    this.barChartOptions = {\n      series: [\n        {\n          name: \"Investment\",\n          data: [15000, 2500, 5000, 7000],\n        },\n      ],\n      chart: {\n        height: 320,\n        type: \"bar\",\n        toolbar: {\n          show: false,\n        },\n        foreColor: \"#9aa0ac\",\n      },\n      plotOptions: {\n        bar: {\n          dataLabels: {\n            position: \"top\", // top, center, bottom\n          },\n        },\n      },\n      dataLabels: {\n        enabled: false,\n        formatter: function (val) {\n          return val + \"%\";\n        },\n        offsetY: -20,\n        style: {\n          fontSize: \"12px\",\n          colors: [\"#9aa0ac\"],\n        },\n      },\n\n      xaxis: {\n        categories: [\"Gowtham\", \"Divya\", \"Besedin\", \"Musthafa\"],\n        position: \"bottom\",\n        labels: {\n          offsetY: 0,\n        },\n        axisBorder: {\n          show: false,\n        },\n        axisTicks: {\n          show: false,\n        },\n        crosshairs: {\n          fill: {\n            type: \"gradient\",\n            gradient: {\n              colorFrom: \"#D8E3F0\",\n              colorTo: \"#BED1E6\",\n              stops: [0, 100],\n              opacityFrom: 0.4,\n              opacityTo: 0.5,\n            },\n          },\n        },\n        tooltip: {\n          enabled: true,\n          offsetY: -35,\n        },\n      },\n      fill: {\n        type: \"gradient\",\n        colors: [\"#4F86F8\", \"#4F86F8\"],\n        gradient: {\n          shade: \"light\",\n          type: \"horizontal\",\n          shadeIntensity: 0.25,\n          gradientToColors: undefined,\n          inverseColors: true,\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [50, 0, 100, 100],\n        },\n      },\n      yaxis: {\n        axisBorder: {\n          show: false,\n        },\n        axisTicks: {\n          show: false,\n        },\n        labels: {\n          show: true,\n          formatter: function (val) {\n            return val + \"\";\n          },\n        },\n      },\n    };\n  }\n}\nexport class ExampleDataSource extends DataSource<Teachers> {\n  filterChange = new BehaviorSubject(\"\");\n  get filter(): string {\n    return this.filterChange.value;\n  }\n  set filter(filter: string) {\n    this.filterChange.next(filter);\n  }\n  filteredData: Teachers[] = [];\n  renderedData: Teachers[] = [];\n  constructor(\n    public exampleDatabase: TeachersService,\n    public paginator: MatPaginator,\n    public _sort: MatSort\n  ) {\n    super();\n    // Reset to the first page when the user changes the filter.\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\n  }\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<Teachers[]> {\n    // Listen for any changes in the base data, sorting, filtering, or pagination\n    const displayDataChanges = [\n      this.exampleDatabase.dataChange,\n      this._sort.sortChange,\n      this.filterChange,\n      this.paginator.page,\n    ];\n    this.exampleDatabase.getAllTeacherss();\n    return merge(...displayDataChanges).pipe(\n      map(() => {\n        // Filter data\n        this.filteredData = this.exampleDatabase.data\n          .slice()\n          .filter((teachers: Teachers) => {\n            const searchStr = (\n              teachers.date +\n              teachers.accountName +\n              teachers.paidAmount\n            ).toLowerCase();\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\n          });\n        // Sort filtered data\n        const sortedData = this.sortData(this.filteredData.slice());\n        // Grab the page's slice of the filtered sorted data.\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        this.renderedData = sortedData.splice(\n          startIndex,\n          this.paginator.pageSize\n        );\n        return this.renderedData;\n      })\n    );\n  }\n  disconnect() {}\n  /** Returns a sorted copy of the database data. */\n  sortData(data: Teachers[]): Teachers[] {\n    if (!this._sort.active || this._sort.direction === \"\") {\n      return data;\n    }\n    return data.sort((a, b) => {\n      let propertyA: number | string = \"\";\n      let propertyB: number | string = \"\";\n      switch (this._sort.active) {\n        case \"id\":\n          [propertyA, propertyB] = [a.id, b.id];\n          break;\n        case \"date\":\n          [propertyA, propertyB] = [a.date, b.date];\n          break;\n        case \"accountName\":\n          [propertyA, propertyB] = [a.accountName, b.accountName];\n          break;\n        case \"paidAmount\":\n          [propertyA, propertyB] = [a.paidAmount, b.paidAmount];\n          break;\n      }\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n      return (\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === \"asc\" ? 1 : -1)\n      );\n    });\n  }\n}\n","<section class=\"content\" style=\"margin-top: 10px\">\n  <div class=\"container-fluid\">\n    <div class=\"block-header\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n          <ul class=\"breadcrumb breadcrumb-style \">\n            <li class=\"breadcrumb-item\">\n              <h4 class=\"page-title\">Payment Report</h4>\n            </li>\n            <li class=\"breadcrumb-item bcrumb-1\">\n              <a routerLink=\"/admin/dashboard/main\">\n                <i class=\"fas fa-home\"></i></a>\n            </li>\n            <a class=\"active\" style=\"color: #444444; padding: 3px 0;\">Payment Report</a>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row clearfix\">\n    <div class=\"col-xs-3 col-sm-3 col-md-3 col-md-3\">\n      <div class=\"card\">\n        <form class=\"m-4\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"row\">\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                <mat-label>Name</mat-label>\n                <input matInput required>\n                <mat-error *ngIf=\"proForm.get('from').hasError('required')\">\n                  First name is required\n                </mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>From</mat-label>\n                <input matInput [matDatepicker]=\"picker1\">\n                <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n                <mat-datepicker #picker1></mat-datepicker>\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>To</mat-label>\n                <input matInput [matDatepicker]=\"picker2\">\n                <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n                <mat-datepicker #picker2></mat-datepicker>\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n              <button class=\"mr-auto\" mat-raised-button color=\"primary\">Submit</button>\n              <!-- <button type=\"button\" mat-button>Cancel</button> -->\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n    <div class=\"col-xs-9 col-sm-9 col-md-9 col-lg-9\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n          <div class=\"card\">\n            <div class=\"body\">\n              <div class=\"table-responsive\">\n                <div class=\"materialTableHeader\">\n                  <div class=\"row\">\n                    <div class=\"col-8\">\n                      <ul class=\"header-buttons-left ml-0\">\n                        <!-- <li class=\"dropdown\">\n                          <h2>\n                            <strong>Teachers</strong></h2>\n                        </li> -->\n                        <li class=\"dropdown m-l-20\">\n                          <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                          <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\n                            aria-label=\"Search box\">\n                        </li>\n                        <li>\n                          <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\n                            <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\n                              <mat-icon class=\"col-white\">delete\n                              </mat-icon>\n                            </button>\n                          </div>\n                        </li>\n                      </ul>\n                    </div>\n                    <div class=\"col-4\">\n                      <ul class=\"header-buttons\">\n                        <li *ngIf=\"isAdmin()\">\n                          <div class=\"icon-button-demo\">\n                            <button mat-raised-button color=\"primary\" (click)=\"addNew()\">\n                              <mat-icon class=\"col-white\" style=\"font-size: 16px; padding: 3px;\">add</mat-icon>Add\n                            </button>\n                          </div>\n                        </li>\n                        <!-- <li>\n                          <div class=\"icon-button-demo\">\n                            <button mat-mini-fab color=\"primary\">\n                              <mat-icon class=\"col-white\">refresh\n                              </mat-icon>\n                            </button>\n                          </div>\n                        </li> -->\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n                <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\n                  <!-- Checkbox Column -->\n                  <ng-container matColumnDef=\"select\">\n                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\n                      <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\n                      </mat-checkbox>\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\n                      <mat-checkbox (click)=\"$event.stopPropagation()\"\n                        (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\n                        [ngClass]=\"'tbl-checkbox'\">\n                      </mat-checkbox>\n                    </mat-cell>\n                  </ng-container>\n                  <!-- ID Column -->\n                  <ng-container matColumnDef=\"id\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Id\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\n                  </ng-container>\n                  <!-- <ng-container matColumnDef=\"sno\">\n                    <mat-header-cell mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\"> S.NO\n                    </mat-header-cell>\n                    <mat-cell mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"\n                    class=\"table-img tbl-col-width-per-6\"> {{row.sno}}\n                    </mat-cell>\n                  </ng-container> -->\n                  <ng-container matColumnDef=\"date\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Date\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"> {{row.date | date: 'yyyy-MM-dd'}}\n                    </mat-cell>\n                  </ng-container>\n                  <ng-container matColumnDef=\"accountName\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Account Name\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                      {{row.accountName}}</mat-cell>\n                  </ng-container>\n                  <ng-container matColumnDef=\"paidAmount\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Paid Amount\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"> {{row.paidAmount}}\n                    </mat-cell>\n                  </ng-container>\n                  <!-- actions -->\n                  <ng-container matColumnDef=\"actions\">\n                    <mat-header-cell class=\"pr-0\" *matHeaderCellDef><a *ngIf=\"isAdmin()\">Actions</a>\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\n                      <button *ngIf=\"isAdmin()\" mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\n                        (click)=\"editCall(row)\">\n                        <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\n                      </button>\n                      <button *ngIf=\"isAdmin()\" mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\n                        (click)=\"deleteItem(row)\">\n                        <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\n                      </button>\n                    </mat-cell>\n                  </ng-container>\n                  <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                  </mat-header-row>\n                  <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\n                  <mat-row *matRowDef=\"let row; columns: displayedColumns;\" [style.cursor]=\"'pointer'\" matRipple>\n                  </mat-row>\n                </mat-table>\n                <!-- Loading spinner -->\n                <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\n                  <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                  </mat-progress-spinner>\n                </div>\n                <!-- context menu start -->\n                <div style=\"visibility: hidden; position: fixed\" [style.left]=\"contextMenuPosition.x\"\n                  [style.top]=\"contextMenuPosition.y\" [matMenuTriggerFor]=\"contextMenu\">\n                </div>\n                <mat-menu #contextMenu=\"matMenu\">\n                  <ng-template matMenuContent let-item=\"item\">\n                    <button mat-menu-item (click)=\"addNew()\">\n                      <mat-icon>add_box</mat-icon>\n                      <span>Add Record</span>\n                    </button>\n                    <button mat-menu-item (click)=\"editCall(item)\">\n                      <mat-icon>create</mat-icon>\n                      <span>Edit Record</span>\n                    </button>\n                    <button mat-menu-item (click)=\"deleteItem(item)\">\n                      <mat-icon>delete</mat-icon>\n                      <span>Delete Record</span>\n                    </button>\n                    <button mat-menu-item (click)=\"refresh()\">\n                      <mat-icon>refresh</mat-icon>\n                      <span>Refresh Record</span>\n                    </button>\n                    <button mat-menu-item disabled>\n                      <mat-icon>no_encryption</mat-icon>\n                      <span>Disable</span>\n                    </button>\n                    <button mat-menu-item [matMenuTriggerFor]=\"nestedmenu\">\n                      <mat-icon>list_alt</mat-icon>\n                      <span> Nested Menu</span>\n                    </button>\n                  </ng-template>\n                </mat-menu>\n                <mat-menu #nestedmenu=\"matMenu\">\n                  <button mat-menu-item>\n                    <mat-icon>mail_outline</mat-icon>\n                    <span>Item 1</span>\n                  </button>\n                  <button mat-menu-item>\n                    <mat-icon>call</mat-icon>\n                    <span>Item 2</span>\n                  </button>\n                  <button mat-menu-item>\n                    <mat-icon>chat</mat-icon>\n                    <span>Item 3</span>\n                  </button>\n                </mat-menu>\n                <!-- context menu end -->\n                <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\n                  [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\n                  No results\n                </div>\n                <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\"\n                  [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\">\n                </mat-paginator>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n          <div class=\"card\">\n            <div class=\"header\">\n              <h2>Payment Report</h2>\n              <!-- <button mat-button [matMenuTriggerFor]=\"menu\" class=\"header-dropdown\">\n                <mat-icon>more_vert</mat-icon>\n              </button>\n              <mat-menu #menu=\"matMenu\">\n                <button mat-menu-item>Action</button>\n                <button mat-menu-item>Another action</button>\n                <button mat-menu-item>Something else here</button>\n              </mat-menu> -->\n            </div>\n            <div class=\"body\">\n              <apx-chart [series]=\"barChartOptions.series\" [chart]=\"barChartOptions.chart\"\n                [dataLabels]=\"barChartOptions.dataLabels\" [plotOptions]=\"barChartOptions.plotOptions\"\n                [yaxis]=\"barChartOptions.yaxis\" [xaxis]=\"barChartOptions.xaxis\" [fill]=\"barChartOptions.fill\"></apx-chart>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n"]}