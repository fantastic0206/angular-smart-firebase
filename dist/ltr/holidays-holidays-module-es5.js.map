{"version":3,"sources":["webpack:///src/app/admin/holidays/all-holidays/dialogs/form-dialog/form-dialog.component.ts","webpack:///src/app/admin/holidays/all-holidays/dialogs/form-dialog/form-dialog.component.html","webpack:///src/app/admin/holidays/edit-holiday/edit-holiday.component.ts","webpack:///src/app/admin/holidays/edit-holiday/edit-holiday.component.html","webpack:///src/app/admin/holidays/all-holidays/holiday.service.ts","webpack:///src/app/admin/holidays/holidays.module.ts","webpack:///src/app/admin/holidays/all-holidays/dialogs/delete/delete.component.ts","webpack:///src/app/admin/holidays/all-holidays/dialogs/delete/delete.component.html","webpack:///src/app/admin/holidays/all-holidays/holiday.model.ts","webpack:///src/app/admin/holidays/all-holidays/all-holidays.component.ts","webpack:///src/app/admin/holidays/all-holidays/all-holidays.component.html","webpack:///src/app/admin/holidays/holidays-routing.module.ts","webpack:///src/app/admin/holidays/add-holiday/add-holiday.component.ts","webpack:///src/app/admin/holidays/add-holiday/add-holiday.component.html"],"names":["FormDialogComponent","dialogRef","data","holidayService","fb","formControl","required","action","console","log","holiday","date","dialogTitle","title","holidayForm","createContactForm","hasError","group","id","no","sDate","eDate","type","details","close","addHoliday","getRawValue","provide","useValue","confirmAdd","onNoClick","selector","templateUrl","styleUrls","providers","EditHolidayComponent","formdata","value","onSubmit","HolidayService","httpClient","API_URL","isTblLoading","dataChange","dialogData","get","subscribe","next","error","name","message","HolidaysModule","declarations","imports","DeleteDialogComponent","deleteHoliday","confirmDelete","Holiday","getRandomID","Date","S4","Math","random","toString","substring","$event","stopPropagation","selection","AllHolidaysComponent","dialog","snackBar","displayedColumns","contextMenuPosition","x","y","loadData","open","afterClosed","result","exampleDatabase","unshift","getDialogData","refreshTable","showNotification","row","foundIndex","findIndex","splice","paginator","_changePageSize","pageSize","numSelected","selected","length","numRows","dataSource","renderedData","isAllSelected","clear","forEach","select","totalSelect","item","index","d","ExampleDataSource","sort","filter","nativeElement","colorName","text","placementFrom","placementAlign","duration","verticalPosition","horizontalPosition","panelClass","event","preventDefault","clientX","clientY","contextMenu","menuData","menu","focusFirstItem","openMenu","removeSelectedRows","addNew","refresh","_sort","filterChange","filteredData","pageIndex","displayDataChanges","sortChange","page","getAllHolidays","pipe","slice","searchStr","toLowerCase","indexOf","sortedData","sortData","startIndex","active","direction","a","b","propertyA","propertyB","valueA","isNaN","valueB","routes","path","component","HolidaysRoutingModule","forChild","exports","AddHolidayComponent"],"mappings":"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","file":"holidays-holidays-module-es5.js","sourcesContent":["import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { HolidayService } from '../../holiday.service';\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormGroup,\r\n  FormBuilder\r\n} from '@angular/forms';\r\nimport { Holiday } from '../../holiday.model';\r\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { formatDate } from '@angular/common';\r\n@Component({\r\n  selector: 'app-form-dialog',\r\n  templateUrl: './form-dialog.component.html',\r\n  styleUrls: ['./form-dialog.component.sass'],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: 'en-GB' }]\r\n})\r\nexport class FormDialogComponent {\r\n  action: string;\r\n  dialogTitle: string;\r\n  holidayForm: FormGroup;\r\n  holiday: Holiday;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public holidayService: HolidayService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === 'edit') {\r\n      console.log(data.holiday.date);\r\n      this.dialogTitle = data.holiday.title;\r\n      this.holiday = data.holiday;\r\n    } else {\r\n      this.dialogTitle = 'New Holiday';\r\n      this.holiday = new Holiday({});\r\n    }\r\n    this.holidayForm = this.createContactForm();\r\n  }\r\n  formControl = new FormControl('', [\r\n    Validators.required\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError('required')\r\n      ? 'Required field'\r\n      : this.formControl.hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      id: [this.holiday.id],\r\n      no: [this.holiday.no, [Validators.required]],\r\n      title: [this.holiday.title, [Validators.required]],\r\n      sDate: [\r\n        formatDate(this.holiday.sDate, 'yyyy-MM-dd', 'en'),\r\n        [Validators.required]\r\n      ],\r\n      eDate: [\r\n        formatDate(this.holiday.eDate, 'yyyy-MM-dd', 'en'),\r\n        [Validators.required]\r\n      ],\r\n      type: [this.holiday.type, [Validators.required]],\r\n      details: [this.holiday.details]\r\n    });\r\n  }\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  public confirmAdd(): void {\r\n    this.holidayService.addHoliday(this.holidayForm.getRawValue());\r\n  }\r\n}\r\n","<div class=\"addContainer\">\r\n    <div class=\"modalHeader\">\r\n        <div class=\"editRowModal\">\r\n            <div class=\"modalHeader clearfix\">\r\n                <div class=\"modal-about\">\r\n                    <div class=\"font-weight-bold p-t-5 font-17\">\r\n                        {{dialogTitle}}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </div>\r\n    <div mat-dialog-content>\r\n        <form class=\"register-form m-4\" [formGroup]=\"holidayForm\" (ngSubmit)=\"submit\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Title</mat-label>\r\n                        <input matInput formControlName=\"title\" required>\r\n                        <mat-icon matSuffix>event_note</mat-icon>\r\n                        <mat-error *ngIf=\"holidayForm.get('title').hasError('required')\">\r\n                            Please enter title\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Start date</mat-label>\r\n                        <input matInput [matDatepicker]=\"picker1\" formControlName=\"sDate\" required>\r\n                        <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #picker1></mat-datepicker>\r\n                        <mat-error *ngIf=\"holidayForm.get('sDate').hasError('required')\">\r\n                            Please select start date\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>End date</mat-label>\r\n                        <input matInput [matDatepicker]=\"picker2\" formControlName=\"eDate\" required>\r\n                        <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #picker2></mat-datepicker>\r\n                        <mat-error *ngIf=\"holidayForm.get('eDate').hasError('required')\">\r\n                            Please select end date\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Holiday type</mat-label>\r\n                        <input matInput formControlName=\"type\" required>\r\n                        <mat-icon matSuffix>storefront</mat-icon>\r\n                        <mat-error *ngIf=\"holidayForm.get('type').hasError('required')\">\r\n                            Holiday type is required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\" col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Details</mat-label>\r\n                        <textarea matInput formControlName=\"details\"></textarea>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                    <div class=\"example-button-row\">\r\n                        <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!holidayForm.valid\"\r\n                            [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\r\n                        <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-edit-holiday',\r\n  templateUrl: './edit-holiday.component.html',\r\n  styleUrls: ['./edit-holiday.component.sass']\r\n})\r\nexport class EditHolidayComponent {\r\n  holidayForm: FormGroup;\r\n  formdata = {\r\n    no: '99',\r\n    title: 'christmas Holiday',\r\n    sDate: '2019-12-17T14:22:18Z',\r\n    eDate: '2020-01-04T14:22:18Z',\r\n    type: '1',\r\n    details: 'christmas Holiday'\r\n  };\r\n  constructor(private fb: FormBuilder) {\r\n    this.holidayForm = this.createContactForm();\r\n  }\r\n  onSubmit() {\r\n    console.log('Form Value', this.holidayForm.value);\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      no: [this.formdata.no, [Validators.required]],\r\n      title: [this.formdata.title, [Validators.required]],\r\n      sDate: [this.formdata.sDate, [Validators.required]],\r\n      eDate: [this.formdata.eDate, [Validators.required]],\r\n      type: [this.formdata.type, [Validators.required]],\r\n      details: [this.formdata.details]\r\n    });\r\n  }\r\n}\r\n","<section class=\"content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"block-header\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <ul class=\"breadcrumb breadcrumb-style \">\r\n                        <li class=\"breadcrumb-item\">\r\n                            <h4 class=\"page-title\">Holiday</h4>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-1\">\r\n                            <a routerLink=\"/admin/dashboard/main\">\r\n                                <i class=\"fas fa-home\"></i> Home</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-2\">\r\n                            <a href=\"#\" onClick=\"return false;\">Holiday</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item active\">Add Holiday Details</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row clearfix\">\r\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"header\">\r\n                        <h2>Add Holiday Details</h2>\r\n                        \r\n                    </div>\r\n                    <div class=\"body\">\r\n                        <form class=\"m-4\" [formGroup]=\"holidayForm\" (ngSubmit)=\"onSubmit()\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Title</mat-label>\r\n                                        <input matInput formControlName=\"title\" required>\r\n                                        <mat-icon matSuffix>event_note</mat-icon>\r\n                                        <mat-error *ngIf=\"holidayForm.get('title').hasError('required')\">\r\n                                            Please enter title\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Start date</mat-label>\r\n                                        <input matInput [matDatepicker]=\"picker1\" formControlName=\"sDate\" required>\r\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                                        <mat-datepicker #picker1></mat-datepicker>\r\n                                        <mat-error *ngIf=\"holidayForm.get('sDate').hasError('required')\">\r\n                                            Please select start date\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>End date</mat-label>\r\n                                        <input matInput [matDatepicker]=\"picker2\" formControlName=\"eDate\" required>\r\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n                                        <mat-datepicker #picker2></mat-datepicker>\r\n                                        <mat-error *ngIf=\"holidayForm.get('eDate').hasError('required')\">\r\n                                            Please select end date\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Holiday type</mat-label>\r\n                                        <mat-select formControlName=\"type\" required>\r\n                                            <mat-option [value]=\"'1'\">\r\n                                                Public Holiday\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'2'\">\r\n                                                Holiday by school\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"holidayForm.get('type').hasError('required')\">\r\n                                            type is required\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\" col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Holiday Details</mat-label>\r\n                                        <textarea matInput formControlName=\"details\"></textarea>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <button class=\"mr-3\" [disabled]=\"!holidayForm.valid \" mat-raised-button\r\n                                        color=\"primary\">Submit</button>\r\n                                    <button type=\"button\" mat-button>Cancel</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Holiday } from './holiday.model';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\n@Injectable()\r\nexport class HolidayService {\r\n  private readonly API_URL = 'assets/data/holiday.json';\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<Holiday[]> = new BehaviorSubject<Holiday[]>([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {}\r\n  get data(): Holiday[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllHolidays(): void {\r\n    this.httpClient.get<Holiday[]>(this.API_URL).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + ' ' + error.message);\r\n      }\r\n    );\r\n  }\r\n  addHoliday(holiday: Holiday): void {\r\n    this.dialogData = holiday;\r\n\r\n    /*  this.httpClient.post(this.API_URL, holiday).subscribe(data => {\r\n      this.dialogData = holiday;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updateHoliday(holiday: Holiday): void {\r\n    this.dialogData = holiday;\r\n\r\n    /* this.httpClient.put(this.API_URL + holiday.id, holiday).subscribe(data => {\r\n      this.dialogData = holiday;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deleteHoliday(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\nimport { HolidaysRoutingModule } from './holidays-routing.module';\r\nimport { AddHolidayComponent } from './add-holiday/add-holiday.component';\r\nimport { AllHolidaysComponent } from './all-holidays/all-holidays.component';\r\nimport { EditHolidayComponent } from './edit-holiday/edit-holiday.component';\r\nimport { DeleteDialogComponent } from './all-holidays/dialogs/delete/delete.component';\r\nimport { FormDialogComponent } from './all-holidays/dialogs/form-dialog/form-dialog.component';\r\nimport { HolidayService } from './all-holidays/holiday.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AddHolidayComponent,\r\n    AllHolidaysComponent,\r\n    EditHolidayComponent,\r\n    DeleteDialogComponent,\r\n    FormDialogComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSortModule,\r\n    MatToolbarModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatCheckboxModule,\r\n    MatTabsModule,\r\n    MatMenuModule,\r\n    MaterialFileInputModule,\r\n    HolidaysRoutingModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  providers: [HolidayService],\r\n})\r\nexport class HolidaysModule {}\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { HolidayService } from '../../holiday.service';\r\n@Component({\r\n  selector: 'app-delete',\r\n  templateUrl: './delete.component.html',\r\n  styleUrls: ['./delete.component.sass']\r\n})\r\nexport class DeleteDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public holidayService: HolidayService\r\n  ) {}\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    this.holidayService.deleteHoliday(this.data.id);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <h3 mat-dialog-title>Are you sure?</h3>\r\n    <div mat-dialog-content>\r\n        <ul class=\"clearfix\">\r\n            <li>\r\n                <p><span class=\"font-weight-bold\">No: </span>{{ data.no }}</p>\r\n            </li>\r\n            <li>\r\n                <p><span class=\"font-weight-bold\"> Name: </span>{{ data.title }}</p>\r\n            </li>\r\n            <li>\r\n                <p>\r\n                    <span class=\"font-weight-bold\">Start Date: </span>{{ data.sDate | date: 'MM/dd/yyyy' }}\r\n                </p>\r\n            </li>\r\n            <li>\r\n                <p>\r\n                    <span class=\"font-weight-bold\">End Date: </span>{{ data.eDate | date: 'MM/dd/yyyy' }}\r\n                </p>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div mat-dialog-actions class=\"mb-1\">\r\n        <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\r\n            Delete\r\n        </button>\r\n        <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n    </div>\r\n</div>","import { formatDate } from '@angular/common';\r\nexport class Holiday {\r\n  id: number;\r\n  no: string;\r\n  title: string;\r\n  sDate: string;\r\n  eDate: string;\r\n  type: string;\r\n  details: string;\r\n  constructor(holiday) {\r\n    {\r\n      this.id = holiday.id || this.getRandomID();\r\n      this.no = holiday.no || '';\r\n      this.title = holiday.title || '';\r\n      this.sDate = formatDate(new Date(), 'yyyy-MM-dd', 'en') || '';\r\n      this.eDate = formatDate(new Date(), 'yyyy-MM-dd', 'en') || '';\r\n      this.type = holiday.type || '';\r\n      this.details = holiday.details || '';\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { HolidayService } from './holiday.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { Holiday } from './holiday.model';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { FormDialogComponent } from './dialogs/form-dialog/form-dialog.component';\r\nimport { DeleteDialogComponent } from './dialogs/delete/delete.component';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\n@Component({\r\n  selector: 'app-all-holidays',\r\n  templateUrl: './all-holidays.component.html',\r\n  styleUrls: ['./all-holidays.component.sass'],\r\n})\r\nexport class AllHolidaysComponent implements OnInit {\r\n  displayedColumns = [\r\n    'select',\r\n    'no',\r\n    'title',\r\n    'sDate',\r\n    'eDate',\r\n    'type',\r\n    'details',\r\n    'actions',\r\n  ];\r\n  exampleDatabase: HolidayService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<Holiday>(true, []);\r\n  id: number;\r\n  holiday: Holiday | null;\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public holidayService: HolidayService,\r\n    private snackBar: MatSnackBar\r\n  ) {}\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild('filter', { static: true }) filter: ElementRef;\r\n  @ViewChild(MatMenuTrigger)\r\n  contextMenu: MatMenuTrigger;\r\n  contextMenuPosition = { x: '0px', y: '0px' };\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n  addNew() {\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        holiday: this.holiday,\r\n        action: 'add',\r\n      },\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // After dialog is closed we're doing frontend updates\r\n        // For add we're just pushing a new row inside DataService\r\n        this.exampleDatabase.dataChange.value.unshift(\r\n          this.holidayService.getDialogData()\r\n        );\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'snackbar-success',\r\n          'Add Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  editCall(row) {\r\n    this.id = row.id;\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        holiday: row,\r\n        action: 'edit',\r\n      },\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // When using an edit things are little different, firstly we find record inside DataService by id\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // Then you update that record using data from dialogData (values you enetered)\r\n        this.exampleDatabase.dataChange.value[\r\n          foundIndex\r\n        ] = this.holidayService.getDialogData();\r\n        // And lastly refresh table\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'black',\r\n          'Edit Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  deleteItem(row) {\r\n    this.id = row.id;\r\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: row,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // for delete we use splice in order to remove single object from DataService\r\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'snackbar-danger',\r\n          'Delete Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.renderedData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.renderedData.forEach((row) =>\r\n          this.selection.select(row)\r\n        );\r\n  }\r\n  removeSelectedRows() {\r\n    const totalSelect = this.selection.selected.length;\r\n    this.selection.selected.forEach((item) => {\r\n      const index: number = this.dataSource.renderedData.findIndex(\r\n        (d) => d === item\r\n      );\r\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\r\n      this.exampleDatabase.dataChange.value.splice(index, 1);\r\n      this.refreshTable();\r\n      this.selection = new SelectionModel<Holiday>(true, []);\r\n    });\r\n    this.showNotification(\r\n      'snackbar-danger',\r\n      totalSelect + ' Record Delete Successfully...!!!',\r\n      'bottom',\r\n      'center'\r\n    );\r\n  }\r\n  public loadData() {\r\n    this.exampleDatabase = new HolidayService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    fromEvent(this.filter.nativeElement, 'keyup').subscribe(() => {\r\n      if (!this.dataSource) {\r\n        return;\r\n      }\r\n      this.dataSource.filter = this.filter.nativeElement.value;\r\n    });\r\n  }\r\n  showNotification(colorName, text, placementFrom, placementAlign) {\r\n    this.snackBar.open(text, '', {\r\n      duration: 2000,\r\n      verticalPosition: placementFrom,\r\n      horizontalPosition: placementAlign,\r\n      panelClass: colorName,\r\n    });\r\n  }\r\n  // context menu\r\n  onContextMenu(event: MouseEvent, item: Holiday) {\r\n    event.preventDefault();\r\n    this.contextMenuPosition.x = event.clientX + 'px';\r\n    this.contextMenuPosition.y = event.clientY + 'px';\r\n    this.contextMenu.menuData = { item: item };\r\n    this.contextMenu.menu.focusFirstItem('mouse');\r\n    this.contextMenu.openMenu();\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<Holiday> {\r\n  filterChange = new BehaviorSubject('');\r\n  get filter(): string {\r\n    return this.filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this.filterChange.next(filter);\r\n  }\r\n  filteredData: Holiday[] = [];\r\n  renderedData: Holiday[] = [];\r\n  constructor(\r\n    public exampleDatabase: HolidayService,\r\n    public paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<Holiday[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this.exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this.filterChange,\r\n      this.paginator.page,\r\n    ];\r\n    this.exampleDatabase.getAllHolidays();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this.exampleDatabase.data\r\n          .slice()\r\n          .filter((holiday: Holiday) => {\r\n            const searchStr = (\r\n              holiday.no +\r\n              holiday.title +\r\n              holiday.sDate +\r\n              holiday.eDate +\r\n              holiday.type +\r\n              holiday.details\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this.paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() {}\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: Holiday[]): Holiday[] {\r\n    if (!this._sort.active || this._sort.direction === '') {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = '';\r\n      let propertyB: number | string = '';\r\n      switch (this._sort.active) {\r\n        case 'id':\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case 'no':\r\n          [propertyA, propertyB] = [a.no, b.no];\r\n          break;\r\n        case 'title':\r\n          [propertyA, propertyB] = [a.title, b.title];\r\n          break;\r\n        // case 'date': [propertyA, propertyB] = [a.date, b.date]; break;\r\n        case 'type':\r\n          [propertyA, propertyB] = [a.type, b.type];\r\n          break;\r\n        case 'details':\r\n          [propertyA, propertyB] = [a.details, b.details];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">All Holidays</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Holidays</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">All</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n        <div class=\"card\">\r\n          <div class=\"body\">\r\n            <div class=\"responsive_table\">\r\n              <div class=\"materialTableHeader\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-8\">\r\n                    <ul class=\"header-buttons-left ml-0\">\r\n                      <li class=\"dropdown\">\r\n                        <h2>\r\n                          <strong>Holidays</strong></h2>\r\n                      </li>\r\n                      <li class=\"dropdown m-l-20\">\r\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\r\n                          aria-label=\"Search box\">\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\r\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\r\n                            <mat-icon class=\"col-white\">delete\r\n                            </mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div class=\"col-4\">\r\n                    <ul class=\"header-buttons\">\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\r\n                            <mat-icon class=\"col-white\">add</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\r\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\r\n                <!-- Checkbox Column -->\r\n                <ng-container matColumnDef=\"select\">\r\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\r\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"no\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-6'\">No\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"\r\n                    [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    {{row.no}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"title\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Title</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.title}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"sDate\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-15'\">Start Date\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"\r\n                    [ngClass]=\"'tbl-col-width-per-15'\">\r\n                    {{row.sDate | date: 'MM/dd/yyyy' }}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"eDate\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-15'\">End Date\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"\r\n                    [ngClass]=\"'tbl-col-width-per-15'\">\r\n                    {{row.eDate | date: 'MM/dd/yyyy' }}\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"type\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-15'\">Type\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"\r\n                    [ngClass]=\"'tbl-col-width-per-15'\">\r\n                    {{row.type}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"details\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Details\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\" class=\"column-nowrap\">\r\n                    {{row.details}}</mat-cell>\r\n                </ng-container>\r\n                <!-- actions -->\r\n                <ng-container matColumnDef=\"actions\">\r\n                  <mat-header-cell *matHeaderCellDef class=\"pl-3 tbl-col-width-per-10\">Actions\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pl-3 tbl-col-width-per-10\">\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"editCall(row)\">\r\n                      <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"deleteItem(row)\">\r\n                      <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\r\n                    </button>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\r\n                  [style.cursor]=\"'pointer'\" matRipple>\r\n                </mat-row>\r\n              </mat-table>\r\n              <!-- Loading spinner -->\r\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\r\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\r\n                </mat-progress-spinner>\r\n              </div>\r\n              <!-- context menu start -->\r\n              <div style=\"visibility: hidden; position: fixed\" [style.left]=\"contextMenuPosition.x\"\r\n                [style.top]=\"contextMenuPosition.y\" [matMenuTriggerFor]=\"contextMenu\">\r\n              </div>\r\n              <mat-menu #contextMenu=\"matMenu\">\r\n                <ng-template matMenuContent let-item=\"item\">\r\n                  <button mat-menu-item (click)=\"addNew()\">\r\n                    <mat-icon>add_box</mat-icon>\r\n                    <span>Add Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"editCall(item)\">\r\n                    <mat-icon>create</mat-icon>\r\n                    <span>Edit Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"deleteItem(item)\">\r\n                    <mat-icon>delete</mat-icon>\r\n                    <span>Delete Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"refresh()\">\r\n                    <mat-icon>refresh</mat-icon>\r\n                    <span>Refresh Record</span>\r\n                  </button>\r\n                  <button mat-menu-item disabled>\r\n                    <mat-icon>no_encryption</mat-icon>\r\n                    <span>Disable</span>\r\n                  </button>\r\n                  <button mat-menu-item [matMenuTriggerFor]=\"nestedmenu\">\r\n                    <mat-icon>list_alt</mat-icon>\r\n                    <span> Nested Menu</span>\r\n                  </button>\r\n                </ng-template>\r\n              </mat-menu>\r\n              <mat-menu #nestedmenu=\"matMenu\">\r\n                <button mat-menu-item>\r\n                  <mat-icon>mail_outline</mat-icon>\r\n                  <span>Item 1</span>\r\n                </button>\r\n                <button mat-menu-item>\r\n                  <mat-icon>call</mat-icon>\r\n                  <span>Item 2</span>\r\n                </button>\r\n                <button mat-menu-item>\r\n                  <mat-icon>chat</mat-icon>\r\n                  <span>Item 3</span>\r\n                </button>\r\n              </mat-menu>\r\n              <!-- context menu end -->\r\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\r\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\r\n                No results\r\n              </div>\r\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\r\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n              </mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AllHolidaysComponent } from './all-holidays/all-holidays.component';\r\nimport { AddHolidayComponent } from './add-holiday/add-holiday.component';\r\nimport { EditHolidayComponent } from './edit-holiday/edit-holiday.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'all-holidays',\r\n    component: AllHolidaysComponent\r\n  },\r\n  {\r\n    path: 'add-holiday',\r\n    component: AddHolidayComponent\r\n  },\r\n  {\r\n    path: 'edit-holiday',\r\n    component: EditHolidayComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class HolidaysRoutingModule {}\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-add-holiday',\r\n  templateUrl: './add-holiday.component.html',\r\n  styleUrls: ['./add-holiday.component.sass']\r\n})\r\nexport class AddHolidayComponent {\r\n  holidayForm: FormGroup;\r\n  constructor(private fb: FormBuilder) {\r\n    this.holidayForm = this.fb.group({\r\n      no: ['', [Validators.required]],\r\n      title: ['', [Validators.required]],\r\n      sDate: ['', [Validators.required]],\r\n      eDate: ['', [Validators.required]],\r\n      type: ['', [Validators.required]],\r\n      details: ['']\r\n    });\r\n  }\r\n  onSubmit() {\r\n    console.log('Form Value', this.holidayForm.value);\r\n  }\r\n}\r\n","<section class=\"content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"block-header\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <ul class=\"breadcrumb breadcrumb-style \">\r\n                        <li class=\"breadcrumb-item\">\r\n                            <h4 class=\"page-title\">Holiday</h4>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-1\">\r\n                            <a routerLink=\"/admin/dashboard/main\">\r\n                                <i class=\"fas fa-home\"></i> Home</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-2\">\r\n                            <a href=\"#\" onClick=\"return false;\">Holiday</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item active\">Add Holiday Details</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row clearfix\">\r\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"header\">\r\n                        <h2>Add Holiday Details</h2>\r\n                        \r\n                    </div>\r\n                    <div class=\"body\">\r\n                        <form class=\"m-4\" [formGroup]=\"holidayForm\" (ngSubmit)=\"onSubmit()\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Title</mat-label>\r\n                                        <input matInput formControlName=\"title\" required>\r\n                                        <mat-icon matSuffix>event_note</mat-icon>\r\n                                        <mat-error *ngIf=\"holidayForm.get('title').hasError('required')\">\r\n                                            Please enter title\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Start date</mat-label>\r\n                                        <input matInput [matDatepicker]=\"picker1\" formControlName=\"sDate\" required>\r\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                                        <mat-datepicker #picker1></mat-datepicker>\r\n                                        <mat-error *ngIf=\"holidayForm.get('sDate').hasError('required')\">\r\n                                            Please select start date\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>End date</mat-label>\r\n                                        <input matInput [matDatepicker]=\"picker2\" formControlName=\"eDate\" required>\r\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n                                        <mat-datepicker #picker2></mat-datepicker>\r\n                                        <mat-error *ngIf=\"holidayForm.get('eDate').hasError('required')\">\r\n                                            Please select end date\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Holiday type</mat-label>\r\n                                        <mat-select formControlName=\"type\" required>\r\n                                            <mat-option [value]=\"'1'\">\r\n                                                Public Holiday\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'2'\">\r\n                                                Holiday by school\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"holidayForm.get('type').hasError('required')\">\r\n                                            type is required\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\" col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Holiday Details</mat-label>\r\n                                        <textarea matInput formControlName=\"details\"></textarea>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <button class=\"mr-3\" [disabled]=\"!holidayForm.valid \" mat-raised-button\r\n                                        color=\"primary\">Submit</button>\r\n                                    <button type=\"button\" mat-button>Cancel</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>"]}