{"version":3,"sources":["webpack:///src/app/teacher/exam-schedule/exam-schedule.component.ts","webpack:///src/app/teacher/exam-schedule/exam-schedule.component.html","webpack:///src/app/teacher/lectures/lectures.service.ts","webpack:///src/app/teacher/teacher.module.ts","webpack:///src/app/teacher/lectures/lectures.model.ts","webpack:///src/app/teacher/lectures/dialogs/form-dialog/form-dialog.component.ts","webpack:///src/app/teacher/lectures/dialogs/form-dialog/form-dialog.component.html","webpack:///src/app/teacher/leave-request/leave-request.service.ts","webpack:///src/app/teacher/exam-schedule/exam-schedule.service.ts","webpack:///src/app/teacher/teacher-routing.module.ts","webpack:///src/app/teacher/leave-request/leave-request.component.ts","webpack:///src/app/teacher/leave-request/leave-request.component.html","webpack:///src/app/teacher/lectures/dialogs/delete/delete.component.ts","webpack:///src/app/teacher/lectures/dialogs/delete/delete.component.html","webpack:///src/app/teacher/settings/settings.component.ts","webpack:///src/app/teacher/settings/settings.component.html","webpack:///src/app/teacher/lectures/lectures.component.ts","webpack:///src/app/teacher/lectures/lectures.component.html"],"names":["ExamScheduleComponent","httpClient","examScheduleService","displayedColumns","selection","loadData","exampleDatabase","dataSource","ExampleDataSource","paginator","sort","filter","nativeElement","subscribe","value","selector","templateUrl","styleUrls","_sort","filterChange","filteredData","renderedData","pageIndex","displayDataChanges","dataChange","sortChange","page","getAllExamSchedule","pipe","data","slice","examSchedule","searchStr","subject","date","time","duration","totalMarks","toLowerCase","indexOf","sortedData","sortData","startIndex","pageSize","splice","active","direction","a","b","propertyA","propertyB","id","valueA","isNaN","valueB","next","LecturesService","API_URL","isTblLoading","dialogData","get","error","console","log","name","message","lectures","TeacherModule","forRoot","echarts","declarations","imports","providers","Lectures","getRandomID","sName","dName","hod","phone","email","status","sYear","S4","Math","random","toString","substring","FormDialogComponent","dialogRef","lecturesService","fb","formControl","required","action","dialogTitle","lecturesForm","createContactForm","hasError","group","close","addLectures","getRawValue","provide","useValue","confirmAdd","onNoClick","LeaveRequestService","leaveRequest","ExamScheduleService","routes","path","component","TeacherRoutingModule","forChild","exports","$event","stopPropagation","LeaveRequestComponent","leaveRequestService","snackBar","numSelected","selected","length","numRows","isAllSelected","clear","forEach","row","select","totalSelect","item","index","findIndex","d","refreshTable","showNotification","_changePageSize","colorName","text","placementFrom","placementAlign","open","verticalPosition","horizontalPosition","panelClass","removeSelectedRows","getAllLeaveRequest","rNo","fromDate","toDate","reason","DeleteDialogComponent","deleteLectures","confirmDelete","SettingsComponent","LecturesComponent","dialog","contextMenuPosition","x","y","afterClosed","result","unshift","getDialogData","foundIndex","event","preventDefault","clientX","clientY","contextMenu","menuData","menu","focusFirstItem","openMenu","addNew","refresh","getAllLecturess"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AC2CkB;;AAAmD;;AAAE;;;;;;AACrD;;AAAgC;;AAAU;;;;;;AAAV;;AAAA;;;;;;AAGhC;;AAAmD;;AACnD;;;;;;AACA;;AAAiC;;AAAe;;;;;;AAAf;;AAAA;;;;;;AAGjC;;AAAmD;;AAAU;;;;;;AAC7D;;AAAiC;;AAAa;;;;;;AAAb;;AAAA;;;;;;AAGjC;;AAAmD;;AAAU;;;;;;AAC7D;;AAAiC;;;;AACjC;;;;;;AADiC;;AAAA;;;;;;AAIjC;;AAAmD;;AAAI;;;;;;AACvD;;AAAiC;;AACjC;;;;;;AADiC;;AAAA;;;;;;AAIjC;;AAAmD;;AAAQ;;;;;;AAC3D;;AAAiC;;AAAgB;;;;;;AAAhB;;AAAA;;;;;;AAGjC;;AAAmD;;AACnD;;;;;;AACA;;AAAuD;;AAAc;;;;;;AAAd;;AAAA;;;;;;AAGvD;;AAAmD;;AAAW;;;;;;AAC9D;;AAAiC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAGjC;;AAAmD;;AAAa;;;;;;AAChE;;AAAiC;;AAAgB;;;;;;AAAhB;;AAAA;;;;;;AAEnC;;;;;;AAEA;;;;AAA0D;;;;;;AAI5D;;AACE;;AAEF;;;;AAFwC;;AAAA;;;;;;AAGxC;;AAEE;;AACF;;;;;;AAFE;;;;;;;;UD5EHA,qB;AAiBX,uCACSC,UADT,EAESC,mBAFT,EAEiD;AAAA;;AADxC,eAAAD,UAAA,GAAAA,UAAA;AACA,eAAAC,mBAAA,GAAAA,mBAAA;AAlBT,eAAAC,gBAAA,GAAmB,CACjB,SADiB,EAEjB,OAFiB,EAGjB,MAHiB,EAIjB,MAJiB,EAKjB,UALiB,EAMjB,QANiB,EAOjB,YAPiB,EAQjB,UARiB,CAAnB;AAYA,eAAAC,SAAA,GAAY,IAAI,uEAAJ,CAAiC,IAAjC,EAAuC,EAAvC,CAAZ;AAOI;;;;qCAKO;AACT,iBAAKC,QAAL;AACD;;;qCAEiB;AAAA;;AAChB,iBAAKC,eAAL,GAAuB,IAAI,0EAAJ,CAAwB,KAAKL,UAA7B,CAAvB;AACA,iBAAKM,UAAL,GAAkB,IAAIC,iBAAJ,CAChB,KAAKF,eADW,EAEhB,KAAKG,SAFW,EAGhB,KAAKC,IAHW,CAAlB;AAKA,mEAAU,KAAKC,MAAL,CAAYC,aAAtB,EAAqC,OAArC,EAA8CC,SAA9C,CAAwD,YAAM;AAC5D,kBAAI,CAAC,KAAI,CAACN,UAAV,EAAsB;AACpB;AACD;;AACD,mBAAI,CAACA,UAAL,CAAgBI,MAAhB,GAAyB,KAAI,CAACA,MAAL,CAAYC,aAAZ,CAA0BE,KAAnD;AACD,aALD;AAMD;;;;;;;yBA1CUd,qB,EAAqB,gI,EAAA,2I;AAAA,O;;;cAArBA,qB;AAAqB,0C;AAAA;AAAA;4EAqBrB,wE,EAAc,I;;4EACd,8D,EAAS,I;;;;;;;;;;;;;;;;;;ACvCtB;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAuB;;AAAa;;AACtC;;AACA;;AACE;;AACE;;AAA4B;;AAAI;;AACpC;;AACA;;AAAmC;;AAAa;;AAClD;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAQ;;AAAa;;AAAS;;AAClC;;AACA;;AACE;;AAA0B;;AAAsC;;AAAM;;AAAI;;AAC1E;;AAEF;;AACF;;AACF;;AACF;;AACF;;AACA;;AAEE;;AACE;;AACA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AAEF;;AACA;;AACE;;AACA;;AAEF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AACA;;AAEA;;AAEF;;AAEA;;AAIA;;AAIA;;AAGF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AAjEgC;;AAAA;;AA0CA;;AAAA;;AAEP;;AAAA;;AAIN;;AAAA;;AAIA;;AAAA;;AAIqB;;AAAA,mHAAyC,WAAzC,EAAyC,CAAzC,EAAyC,UAAzC,EAAyC,EAAzC,EAAyC,iBAAzC,EAAyC,qEAAzC;;;;;;;;;;wED/E3BA,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACTe,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD;AAHF,W;AAKuB,U;;;;;;;AAqBWR,mBAAS,EAAE,CAAF;kBAAnD,uDAAmD;mBAAzC,wE,EAAc;AAAE,wBAAQ;AAAV,a;AAA2B,WAAE,C;AAChBC,cAAI,EAAE,CAAF;kBAAzC,uDAAyC;mBAA/B,8D,EAAS;AAAE,wBAAQ;AAAV,a;AAAsB,WAAE,C;AACLC,gBAAM,EAAE,CAAF;kBAA5C,uDAA4C;mBAAlC,Q,EAAU;AAAE,wBAAQ;AAAV,a;AAAwB,WAAE;;;;UAqBpCH,iB;;;;;AAUX,mCACSF,eADT,EAESG,SAFT,EAGSS,KAHT,EAGuB;AAAA;;AAAA;;AAErB;AAJO,iBAAAZ,eAAA,GAAAA,eAAA;AACA,iBAAAG,SAAA,GAAAA,SAAA;AACA,iBAAAS,KAAA,GAAAA,KAAA;AAZT,iBAAAC,YAAA,GAAe,IAAI,oDAAJ,CAAoB,EAApB,CAAf;AAOA,iBAAAC,YAAA,GAA+B,EAA/B;AACA,iBAAAC,YAAA,GAA+B,EAA/B,CAIuB,CAGrB;;AACA,iBAAKF,YAAL,CAAkBN,SAAlB,CAA4B;AAAA,mBAAO,OAAKJ,SAAL,CAAea,SAAf,GAA2B,CAAlC;AAAA,WAA5B;;AAJqB;AAKtB;;;;;AACD;oCACO;AAAA;;AACL;AACA,gBAAMC,kBAAkB,GAAG,CACzB,KAAKjB,eAAL,CAAqBkB,UADI,EAEzB,KAAKN,KAAL,CAAWO,UAFc,EAGzB,KAAKN,YAHoB,EAIzB,KAAKV,SAAL,CAAeiB,IAJU,CAA3B;AAMA,iBAAKpB,eAAL,CAAqBqB,kBAArB;AACA,mBAAO,iEAASJ,kBAAT,EAA6BK,IAA7B,CACL,2DAAI,YAAM;AACR;AACA,oBAAI,CAACR,YAAL,GAAoB,MAAI,CAACd,eAAL,CAAqBuB,IAArB,CACjBC,KADiB,GAEjBnB,MAFiB,CAEV,UAACoB,YAAD,EAAgC;AACtC,oBAAMC,SAAS,GAAG,CAChBD,YAAY,CAACE,OAAb,GACAF,YAAY,SADZ,GAEAA,YAAY,CAACG,IAFb,GAGAH,YAAY,CAACI,IAHb,GAIAJ,YAAY,CAACK,QAJb,GAKAL,YAAY,CAACM,UANG,EAOhBC,WAPgB,EAAlB;AAQA,uBAAON,SAAS,CAACO,OAAV,CAAkB,MAAI,CAAC5B,MAAL,CAAY2B,WAAZ,EAAlB,MAAiD,CAAC,CAAzD;AACD,eAZiB,CAApB,CAFQ,CAeR;;AACA,kBAAME,UAAU,GAAG,MAAI,CAACC,QAAL,CAAc,MAAI,CAACrB,YAAL,CAAkBU,KAAlB,EAAd,CAAnB,CAhBQ,CAiBR;;;AACA,kBAAMY,UAAU,GAAG,MAAI,CAACjC,SAAL,CAAea,SAAf,GAA2B,MAAI,CAACb,SAAL,CAAekC,QAA7D;AACA,oBAAI,CAACtB,YAAL,GAAoBmB,UAAU,CAACI,MAAX,CAClBF,UADkB,EAElB,MAAI,CAACjC,SAAL,CAAekC,QAFG,CAApB;AAIA,qBAAO,MAAI,CAACtB,YAAZ;AACD,aAxBD,CADK,CAAP;AA2BD;;;uCACY,CAAE;AACf;;;;mCACSQ,I,EAAoB;AAAA;;AAC3B,gBAAI,CAAC,KAAKX,KAAL,CAAW2B,MAAZ,IAAsB,KAAK3B,KAAL,CAAW4B,SAAX,KAAyB,EAAnD,EAAuD;AACrD,qBAAOjB,IAAP;AACD;;AACD,mBAAOA,IAAI,CAACnB,IAAL,CAAU,UAACqC,CAAD,EAAIC,CAAJ,EAAU;AACzB,kBAAIC,SAAS,GAAoB,EAAjC;AACA,kBAAIC,SAAS,GAAoB,EAAjC;;AACA,sBAAQ,MAAI,CAAChC,KAAL,CAAW2B,MAAnB;AACE,qBAAK,IAAL;AAAA,6BAC2B,CAACE,CAAC,CAACI,EAAH,EAAOH,CAAC,CAACG,EAAT,CAD3B;AACGF,2BADH;AACcC,2BADd;AAEE;;AACF,qBAAK,SAAL;AAAA,8BAC2B,CAACH,CAAC,CAACd,OAAH,EAAYe,CAAC,CAACf,OAAd,CAD3B;AACGgB,2BADH;AACcC,2BADd;AAEE;;AACF,qBAAK,OAAL;AAAA,8BAC2B,CAACH,CAAC,SAAF,EAAUC,CAAC,SAAX,CAD3B;AACGC,2BADH;AACcC,2BADd;AAEE;;AACF,qBAAK,MAAL;AAAA,8BAC2B,CAACH,CAAC,CAACb,IAAH,EAASc,CAAC,CAACd,IAAX,CAD3B;AACGe,2BADH;AACcC,2BADd;AAEE;AAZJ;;AAcA,kBAAME,MAAM,GAAGC,KAAK,CAAC,CAACJ,SAAF,CAAL,GAAoBA,SAApB,GAAgC,CAACA,SAAhD;AACA,kBAAMK,MAAM,GAAGD,KAAK,CAAC,CAACH,SAAF,CAAL,GAAoBA,SAApB,GAAgC,CAACA,SAAhD;AACA,qBACE,CAACE,MAAM,GAAGE,MAAT,GAAkB,CAAC,CAAnB,GAAuB,CAAxB,KAA8B,MAAI,CAACpC,KAAL,CAAW4B,SAAX,KAAyB,KAAzB,GAAiC,CAAjC,GAAqC,CAAC,CAApE,CADF;AAGD,aAtBM,CAAP;AAuBD;;;8BApFS;AACR,mBAAO,KAAK3B,YAAL,CAAkBL,KAAzB;AACD,W;4BACUH,M,EAAgB;AACzB,iBAAKQ,YAAL,CAAkBoC,IAAlB,CAAuB5C,MAAvB;AACD;;;;QAPoC,mE;;;;;;;;;;;;;;;;;AE7DvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAKa6C,e;AAMX,iCAAoBvD,UAApB,EAA4C;AAAA;;AAAxB,eAAAA,UAAA,GAAAA,UAAA;AALH,eAAAwD,OAAA,GAAU,2BAAV;AACjB,eAAAC,YAAA,GAAe,IAAf;AACA,eAAAlC,UAAA,GAA0C,IAAI,oDAAJ,CAAgC,EAAhC,CAA1C;AAG8C;;;;0CAI9B;AACd,mBAAO,KAAKmC,UAAZ;AACD;AACD;;;;4CACe;AAAA;;AACb,iBAAK1D,UAAL,CAAgB2D,GAAhB,CAAgC,KAAKH,OAArC,EAA8C5C,SAA9C,CACE,UAACgB,IAAD,EAAU;AACR,oBAAI,CAAC6B,YAAL,GAAoB,KAApB;;AACA,oBAAI,CAAClC,UAAL,CAAgB+B,IAAhB,CAAqB1B,IAArB;AACD,aAJH,EAKE,UAACgC,KAAD,EAA8B;AAC5B,oBAAI,CAACH,YAAL,GAAoB,KAApB;AACAI,qBAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,IAAN,GAAa,GAAb,GAAmBH,KAAK,CAACI,OAArC;AACD,aARH;AAUD;;;sCACWC,Q,EAAkB;AAC5B,iBAAKP,UAAL,GAAkBO,QAAlB;AAEA;;;;;;AAMD;;;yCACcA,Q,EAAkB;AAC/B,iBAAKP,UAAL,GAAkBO,QAAlB;AAEA;;;;;;;AAOD;;;yCACcf,E,EAAU;AACvBW,mBAAO,CAACC,GAAR,CAAYZ,EAAZ;AAEA;;;;;;;AAOD;;;8BAlDO;AACN,mBAAO,KAAK3B,UAAL,CAAgBV,KAAvB;AACD;;;;;;;yBATU0C,e,EAAe,uH;AAAA,O;;;eAAfA,e;AAAe,iBAAfA,eAAe;;;;;wEAAfA,e,EAAe;gBAD3B;AAC2B,U;;;;;;;;;;;;;;;;;;;;;;ACL5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UA+EaW,a;;;;;cAAAA;;;;2BAAAA,a;AAAa,S;AAAA,mBAFb,CAAC,2EAAD,EAAkB,yFAAlB,EAAuC,yFAAvC,C;AAA2D,kBA9B7D,CACP,4DADO,EAEP,6EAFO,EAGP,uDAHO,EAIP,6DAAiBC,OAAjB,CAAyB;AACvBC,iBAAO,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,uBAAN;AAAA;AADc,SAAzB,CAJO,EAOP,0DAPO,EAQP,kEARO,EASP,4EATO,EAUP,oEAVO,EAWP,wEAXO,EAYP,gEAZO,EAaP,sEAbO,EAcP,+EAdO,EAeP,gFAfO,EAgBP,uEAhBO,EAiBP,8EAjBO,EAkBP,yEAlBO,EAmBP,uEAnBO,EAoBP,iFApBO,EAqBP,yEArBO,EAsBP,qEAtBO,EAuBP,qEAvBO,EAwBP,6EAxBO,EAyBP,2EAzBO,EA0BP,4FA1BO,EA2BP,mEA3BO,EA4BP,yEA5BO,CA8B6D;;;;4HAE3DF,a,EAAa;AAAA,yBAxCtB,kFAwCsB,EAvCtB,+EAuCsB,EAtCtB,gGAsCsB,EArCtB,wGAqCsB,EApCtB,6FAoCsB,EAnCtB,+EAmCsB,EAlCtB,6FAkCsB;AAlCD,oBAGrB,4DAHqB,EAIrB,6EAJqB,EAKrB,uDALqB,EAKR,4DALQ,EASrB,0DATqB,EAUrB,kEAVqB,EAWrB,4EAXqB,EAYrB,oEAZqB,EAarB,wEAbqB,EAcrB,gEAdqB,EAerB,sEAfqB,EAgBrB,+EAhBqB,EAiBrB,gFAjBqB,EAkBrB,uEAlBqB,EAmBrB,8EAnBqB,EAoBrB,yEApBqB,EAqBrB,uEArBqB,EAsBrB,iFAtBqB,EAuBrB,yEAvBqB,EAwBrB,qEAxBqB,EAyBrB,qEAzBqB,EA0BrB,6EA1BqB,EA2BrB,2EA3BqB,EA4BrB,4FA5BqB,EA6BrB,mEA7BqB,EA8BrB,yEA9BqB;AAkCC,S;AAJC,O;;;;;wEAIdA,a,EAAa;gBA1CzB,sDA0CyB;iBA1ChB;AACRG,wBAAY,EAAE,CACZ,kFADY,EAEZ,+EAFY,EAGZ,gGAHY,EAIZ,wGAJY,EAKZ,6FALY,EAMZ,+EANY,EAOZ,6FAPY,CADN;AAURC,mBAAO,EAAE,CACP,4DADO,EAEP,6EAFO,EAGP,uDAHO,EAIP,6DAAiBH,OAAjB,CAAyB;AACvBC,qBAAO,EAAE;AAAA,uBAAM;AAAA;AAAA;AAAA;AAAA,2BAAN;AAAA;AADc,aAAzB,CAJO,EAOP,0DAPO,EAQP,kEARO,EASP,4EATO,EAUP,oEAVO,EAWP,wEAXO,EAYP,gEAZO,EAaP,sEAbO,EAcP,+EAdO,EAeP,gFAfO,EAgBP,uEAhBO,EAiBP,8EAjBO,EAkBP,yEAlBO,EAmBP,uEAnBO,EAoBP,iFApBO,EAqBP,yEArBO,EAsBP,qEAtBO,EAuBP,qEAvBO,EAwBP,6EAxBO,EAyBP,2EAzBO,EA0BP,4FA1BO,EA2BP,mEA3BO,EA4BP,yEA5BO,CAVD;AAwCRG,qBAAS,EAAE,CAAC,2EAAD,EAAkB,yFAAlB,EAAuC,yFAAvC;AAxCH,W;AA0CgB,U;;;;;;;;;;;;;;;;;;AC/E1B;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,Q;AAOX,0BAAYP,QAAZ,EAAsB;AAAA;;AACpB;AACE,iBAAKf,EAAL,GAAUe,QAAQ,CAACf,EAAT,IAAe,KAAKuB,WAAL,EAAzB;AACA,iBAAKC,KAAL,GAAaT,QAAQ,CAACU,KAAT,IAAkB,EAA/B;AACA,4BAAaV,QAAQ,CAACW,GAAT,IAAgB,EAA7B;AACA,iBAAK3C,IAAL,GAAYgC,QAAQ,CAACY,KAAT,IAAkB,EAA9B;AACA,iBAAK3C,IAAL,GAAY+B,QAAQ,CAACa,KAAT,IAAkB,EAA9B;AACA,iBAAKC,MAAL,GAAcd,QAAQ,CAACe,KAAT,IAAkB,EAAhC;AACD;AACF;;;;wCACiB;AAChB,gBAAMC,EAAE,GAAG,SAALA,EAAK,GAAM;AACf,qBAAO,CAAE,CAAC,IAAIC,IAAI,CAACC,MAAL,EAAL,IAAsB,OAAvB,GAAkC,CAAnC,EAAsCC,QAAtC,CAA+C,EAA/C,EAAmDC,SAAnD,CAA6D,CAA7D,CAAP;AACD,aAFD;;AAGA,mBAAOJ,EAAE,KAAKA,EAAE,EAAhB;AACD;;;;;;;;;;;;;;;;;;;;;ACtBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkCY;;AACE;;AACF;;;;;;AAQA;;AACE;;AACF;;;;;;AAWA;;AACE;;AACF;;;;;;AAQA;;AACE;;AACF;;;;;;AAgBA;;AACE;;AACF;;;;UDtECK,mB;AAKX,qCACSC,SADT,EAEkC3D,IAFlC,EAGS4D,eAHT,EAIUC,EAJV,EAIyB;AAAA;;AAHhB,eAAAF,SAAA,GAAAA,SAAA;AACyB,eAAA3D,IAAA,GAAAA,IAAA;AACzB,eAAA4D,eAAA,GAAAA,eAAA;AACC,eAAAC,EAAA,GAAAA,EAAA;AAaV,eAAAC,WAAA,GAAc,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAChC,0DAAWC,QADqB,CAApB,CAAd,CAbyB,CAEvB;;AACA,eAAKC,MAAL,GAAchE,IAAI,CAACgE,MAAnB;;AACA,cAAI,KAAKA,MAAL,KAAgB,MAApB,EAA4B;AAC1B,iBAAKC,WAAL,GAAmBjE,IAAI,CAACqC,QAAL,CAAcS,KAAjC;AACA,iBAAKT,QAAL,GAAgBrC,IAAI,CAACqC,QAArB;AACD,WAHD,MAGO;AACL,iBAAK4B,WAAL,GAAmB,cAAnB;AACA,iBAAK5B,QAAL,GAAgB,IAAI,wDAAJ,CAAa,EAAb,CAAhB;AACD;;AACD,eAAK6B,YAAL,GAAoB,KAAKC,iBAAL,EAApB;AACD;;;;4CAKiB;AAChB,mBAAO,KAAKL,WAAL,CAAiBM,QAAjB,CAA0B,UAA1B,IACH,gBADG,GAEH,KAAKN,WAAL,CAAiBM,QAAjB,CAA0B,OAA1B,IACA,mBADA,GAEA,EAJJ;AAKD;;;8CACgB;AACf,mBAAO,KAAKP,EAAL,CAAQQ,KAAR,CAAc;AACnB/C,gBAAE,EAAE,CAAC,KAAKe,QAAL,CAAcf,EAAf,CADe;AAEnBwB,mBAAK,EAAE,CAAC,KAAKT,QAAL,CAAcS,KAAf,EAAsB,CAAC,0DAAWiB,QAAZ,CAAtB,CAFY;AAGnB,uBAAO,CAAC,KAAK1B,QAAL,SAAD,EAAsB,CAAC,0DAAW0B,QAAZ,CAAtB,CAHY;AAInB1D,kBAAI,EAAE,CAAC,KAAKgC,QAAL,CAAchC,IAAf,EAAqB,CAAC,0DAAW0D,QAAZ,CAArB,CAJa;AAKnBzD,kBAAI,EAAE,CAAC,KAAK+B,QAAL,CAAc/B,IAAf,EAAqB,CAAC,0DAAWyD,QAAZ,CAArB,CALa;AAMnBZ,oBAAM,EAAE,CAAC,KAAKd,QAAL,CAAcc,MAAf,EAAuB,CAAC,0DAAWY,QAAZ,CAAvB;AANW,aAAd,CAAP;AAQD;;;mCACQ,CACP;AACD;;;sCACQ;AACP,iBAAKJ,SAAL,CAAeW,KAAf;AACD;;;uCACgB;AACf,iBAAKV,eAAL,CAAqBW,WAArB,CAAiC,KAAKL,YAAL,CAAkBM,WAAlB,EAAjC;AACD;;;;;;;yBAnDUd,mB,EAAmB,sI,EAAA,gEAOpB,wEAPoB,C,EAOL,kI,EAAA,2H;AAAA,O;;;cAPdA,mB;AAAmB,wC;AAAA,oFAFnB,CAAC;AAAEe,iBAAO,EAAE,sEAAX;AAA4BC,kBAAQ,EAAE;AAAtC,SAAD,CAEmB,E;AAF8B,iB;AAAA,gB;AAAA,+oC;AAAA;AAAA;ACf9D;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAe;;AACnB;;AACF;;AACF;;AACA;;AAAwB;AAAA,qBAAS,IAAAf,SAAA,QAAT;AAA0B,aAA1B;;AACtB;;AAAU;;AAAK;;AACjB;;AACF;;AACA;;AACE;;AAA2D;AAAA;AAAA;;AACzD;;AACE;;AACE;;AACE;;AAAW;;AAAY;;AACvB;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAU;;AACrB;;AACA;;AAAoB;;AAAM;;AAC1B;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAa;;AACxB;;AACA;;AACA;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAI;;AACf;;AACA;;AAAoB;;AAAQ;;AAC5B;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACyB;AAAA,qBAAS,IAAAgB,UAAA,EAAT;AAAqB,aAArB;;AAAuB;;AAAI;;AACpD;;AAAuC;AAAA,qBAAS,IAAAC,SAAA,EAAT;AAAoB,aAApB;;AAAoC;;AAAM;;AACnF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AAhGY;;AAAA;;AASwB;;AAAA;;AAMV;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAIH;;AAAA;;AAUA;;AAAA;;AAUK;;AAAA;;AACiB;;AAAA;;AAEtB;;AAAA;;AAUA;;AAAA;;AAWG;;AAAA;;AAGA;;AAAA;;AAIH;;AAAA;;AAS+B;;AAAA,yFAAe,UAAf,EAAe,uBAAf,EAAe,kBAAf,EAAe,CAAf;;;;;;;;;wED7EzClB,mB,EAAmB;gBAN/B,uDAM+B;iBANrB;AACTxE,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD,CAHF;AAITuD,qBAAS,EAAE,CAAC;AAAE8B,qBAAO,EAAE,sEAAX;AAA4BC,sBAAQ,EAAE;AAAtC,aAAD;AAJF,W;AAMqB,U;;;;;;oBAO3B,oD;qBAAO,wE;;;;;;;;;;;;;;;;;;;;;;;;;AExBZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAKaG,mB;AAQX,qCAAoBzG,UAApB,EAA4C;AAAA;;AAAxB,eAAAA,UAAA,GAAAA,UAAA;AAPH,eAAAwD,OAAA,GAAU,+BAAV;AACjB,eAAAC,YAAA,GAAe,IAAf;AACA,eAAAlC,UAAA,GAA8C,IAAI,oDAAJ,CAE5C,EAF4C,CAA9C;AAK8C;;;;0CAI9B;AACd,mBAAO,KAAKmC,UAAZ;AACD;AACD;;;;+CACkB;AAAA;;AAChB,iBAAK1D,UAAL,CAAgB2D,GAAhB,CAAoC,KAAKH,OAAzC,EAAkD5C,SAAlD,CACE,UAACgB,IAAD,EAAU;AACR,oBAAI,CAAC6B,YAAL,GAAoB,KAApB;;AACA,oBAAI,CAAClC,UAAL,CAAgB+B,IAAhB,CAAqB1B,IAArB;AACD,aAJH,EAKE,UAACgC,KAAD,EAA8B;AAC5B,oBAAI,CAACH,YAAL,GAAoB,KAApB;AACAI,qBAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,IAAN,GAAa,GAAb,GAAmBH,KAAK,CAACI,OAArC;AACD,aARH;AAUD;;;0CACe0C,Y,EAA0B;AACxC,iBAAKhD,UAAL,GAAkBgD,YAAlB;AAEA;;;;;;AAMD;;;6CACkBA,Y,EAA0B;AAC3C,iBAAKhD,UAAL,GAAkBgD,YAAlB;AAEA;;;;;;;AAOD;;;6CACkBxD,E,EAAU;AAC3BW,mBAAO,CAACC,GAAR,CAAYZ,EAAZ;AAEA;;;;;;;AAOD;;;8BAlDO;AACN,mBAAO,KAAK3B,UAAL,CAAgBV,KAAvB;AACD;;;;;;;yBAXU4F,mB,EAAmB,uH;AAAA,O;;;eAAnBA,mB;AAAmB,iBAAnBA,mBAAmB;;;;;wEAAnBA,mB,EAAmB;gBAD/B;AAC+B,U;;;;;;;;;;;;;;;;;;;;;;ACLhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAKaE,mB;AAQX,qCAAoB3G,UAApB,EAA4C;AAAA;;AAAxB,eAAAA,UAAA,GAAAA,UAAA;AAPH,eAAAwD,OAAA,GAAU,+BAAV;AACjB,eAAAC,YAAA,GAAe,IAAf;AACA,eAAAlC,UAAA,GAA8C,IAAI,oDAAJ,CAE5C,EAF4C,CAA9C;AAK8C;;;;0CAI9B;AACd,mBAAO,KAAKmC,UAAZ;AACD;AACD;;;;+CACkB;AAAA;;AAChB,iBAAK1D,UAAL,CAAgB2D,GAAhB,CAAoC,KAAKH,OAAzC,EAAkD5C,SAAlD,CACE,UAACgB,IAAD,EAAU;AACR,oBAAI,CAAC6B,YAAL,GAAoB,KAApB;;AACA,oBAAI,CAAClC,UAAL,CAAgB+B,IAAhB,CAAqB1B,IAArB;AACD,aAJH,EAKE,UAACgC,KAAD,EAA8B;AAC5B,oBAAI,CAACH,YAAL,GAAoB,KAApB;AACAI,qBAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,IAAN,GAAa,GAAb,GAAmBH,KAAK,CAACI,OAArC;AACD,aARH;AAUD;;;0CACelC,Y,EAA0B;AACxC,iBAAK4B,UAAL,GAAkB5B,YAAlB;AAEA;;;;;;AAMD;;;6CACkBA,Y,EAA0B;AAC3C,iBAAK4B,UAAL,GAAkB5B,YAAlB;AAEA;;;;;;;AAOD;;;6CACkBoB,E,EAAU;AAC3BW,mBAAO,CAACC,GAAR,CAAYZ,EAAZ;AAEA;;;;;;;AAOD;;;8BAlDO;AACN,mBAAO,KAAK3B,UAAL,CAAgBV,KAAvB;AACD;;;;;;;yBAXU8F,mB,EAAmB,uH;AAAA,O;;;eAAnBA,mB;AAAmB,iBAAnBA,mBAAmB;;;;;wEAAnBA,mB,EAAmB;gBAD/B;AAC+B,U;;;;;;;;;;;;;;;;;;;;;;ACLhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASA,UAAMC,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,WADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,EAKrB;AACED,YAAI,EAAE,UADR;AAEEC,iBAAS,EAAE;AAFb,OALqB,EASrB;AACED,YAAI,EAAE,eADR;AAEEC,iBAAS,EAAE;AAFb,OATqB,EAarB;AACED,YAAI,EAAE,eADR;AAEEC,iBAAS,EAAE;AAFb,OAbqB,EAiBrB;AACED,YAAI,EAAE,UADR;AAEEC,iBAAS,EAAE;AAFb,OAjBqB,EAqBrB;AAAED,YAAI,EAAE,IAAR;AAAcC,iBAAS,EAAE;AAAzB,OArBqB,CAAvB;;UA4BaC,oB;;;;;cAAAA;;;;2BAAAA,oB;AAAoB,S;AAAA,kBAHtB,CAAC,6DAAaC,QAAb,CAAsBJ,MAAtB,CAAD,CAGsB,EAFrB,4DAEqB;;;;4HAApBG,oB,EAAoB;AAAA;AAAA,oBAFrB,4DAEqB;AAAA,S;AAFT,O;;;;;wEAEXA,oB,EAAoB;gBAJhC,sDAIgC;iBAJvB;AACRzC,mBAAO,EAAE,CAAC,6DAAa0C,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERK,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAIuB,U;;;;;;;;;;;;;;;;;;ACrCjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACkDkB;;AACE;;AAAc;AAAA;;AAAA;;AAAA,qDAAoC,IAApC;AAAwC,WAAxC;;AAGd;;AACF;;;;;;AALmC;;AAE/B;;AAAA,qIAAmD,eAAnD,EAAmD,sDAAnD,EAAmD,SAAnD,EAAmD,cAAnD;;;;;;;;AAIJ;;AACE;;AAAc;AAAA;;AAAA,mBAASC,MAAM,CAACC,eAAP,EAAT;AAAiC,WAAjC,EAAkC,QAAlC,EAAkC;AAAA;;AAAA;;AAAA;;AAAA,4BAAoB,QAAAhH,SAAA,gBAApB,GAA4C,IAA5C;AAAgD,WAAlF;;AAEd;;AACF;;;;;;;;AAJgC;;AAE5B;;AAAA,oHAAqC,SAArC,EAAqC,cAArC;;;;;;AAMJ;;AAAmD;;AAAE;;;;;;AACrD;;AAAgC;;AAAU;;;;;;AAAV;;AAAA;;;;;;AAGhC;;AAAsF;;AACtF;;;;AADmD;;;;;;AAEnD;;AAAgF;;AAEhF;;;;;;AADI;;AAAA;;;;;;AAIJ;;AAAoF;;AACpF;;;;;;AACA;;AAAkE;;AAAW;;;;;;AAAX;;AAAA;;;;;;AAGlE;;AAAmD;;AAAY;;;;;;AAC/D;;AAAiC;;AAAY;;;;;;AAAZ;;AAAA;;;;;;AAGjC;;AAAmD;;AAAS;;;;;;AAC5D;;AAAiC;;;;AACjC;;;;;;AADiC;;AAAA;;;;;;AAIjC;;AAAmD;;AAAO;;;;;;AAC1D;;AAAiC;;;;AACjC;;;;;;AADiC;;AAAA;;;;;;AAIjC;;AAAmD;;AAAM;;;;;;AACzD;;AAAiC;;AAAc;;;;;;AAAd;;AAAA;;;;;;AAGjC;;AAAmD;;AACnD;;;;;;AACA;;AAAuD;;AAAc;;;;;;AAAd;;AAAA;;;;;;AAIvD;;AAAqE;;AAAO;;;;;;;;AAC5E;;AACE;;AACE;AAAA;;AAAA,mBAAS+G,MAAM,CAACC,eAAP,EAAT;AAAiC,WAAjC;;AACA;;AAAiD;;AAAK;;AACxD;;AACA;;AACE;AAAA;;AAAA,mBAASD,MAAM,CAACC,eAAP,EAAT;AAAiC,WAAjC;;AACA;;AAAgD;;AAAK;;AACvD;;AACF;;;;;;AAEF;;;;;;AAEA;;;;AAA0D;;;;;;AAI5D;;AACE;;AAEF;;;;AAFwC;;AAAA;;;;;;AAGxC;;AAEE;;AACF;;;;;;AAFE;;;;;;;;UD5GHC,qB;AAkBX,uCACSpH,UADT,EAESqH,mBAFT,EAGUC,QAHV,EAG+B;AAAA;;AAFtB,eAAAtH,UAAA,GAAAA,UAAA;AACA,eAAAqH,mBAAA,GAAAA,mBAAA;AACC,eAAAC,QAAA,GAAAA,QAAA;AApBV,eAAApH,gBAAA,GAAmB,CACjB,QADiB,EAEjB,KAFiB,EAGjB,KAHiB,EAIjB,MAJiB,EAKjB,UALiB,EAMjB,QANiB,EAOjB,QAPiB,EAQjB,QARiB,EASjB,SATiB,CAAnB;AAaA,eAAAC,SAAA,GAAY,IAAI,uEAAJ,CAAiC,IAAjC,EAAuC,EAAvC,CAAZ;AAQI;;;;qCAKO;AACT,iBAAKC,QAAL;AACD;AACD;;;;0CACgB;AACd,gBAAMmH,WAAW,GAAG,KAAKpH,SAAL,CAAeqH,QAAf,CAAwBC,MAA5C;AACA,gBAAMC,OAAO,GAAG,KAAKpH,UAAL,CAAgBc,YAAhB,CAA6BqG,MAA7C;AACA,mBAAOF,WAAW,KAAKG,OAAvB;AACD;AAED;;;;yCACe;AAAA;;AACb,iBAAKC,aAAL,KACI,KAAKxH,SAAL,CAAeyH,KAAf,EADJ,GAEI,KAAKtH,UAAL,CAAgBc,YAAhB,CAA6ByG,OAA7B,CAAqC,UAACC,GAAD;AAAA,qBACnC,MAAI,CAAC3H,SAAL,CAAe4H,MAAf,CAAsBD,GAAtB,CADmC;AAAA,aAArC,CAFJ;AAKD;;;+CACoB;AAAA;;AACnB,gBAAME,WAAW,GAAG,KAAK7H,SAAL,CAAeqH,QAAf,CAAwBC,MAA5C;AACA,iBAAKtH,SAAL,CAAeqH,QAAf,CAAwBK,OAAxB,CAAgC,UAACI,IAAD,EAAU;AACxC,kBAAMC,KAAK,GAAW,MAAI,CAAC5H,UAAL,CAAgBc,YAAhB,CAA6B+G,SAA7B,CACpB,UAACC,CAAD;AAAA,uBAAOA,CAAC,KAAKH,IAAb;AAAA,eADoB,CAAtB,CADwC,CAIxC;;;AACA,oBAAI,CAAC5H,eAAL,CAAqBkB,UAArB,CAAgCV,KAAhC,CAAsC8B,MAAtC,CAA6CuF,KAA7C,EAAoD,CAApD;;AACA,oBAAI,CAACG,YAAL;;AACA,oBAAI,CAAClI,SAAL,GAAiB,IAAI,uEAAJ,CAAiC,IAAjC,EAAuC,EAAvC,CAAjB;AACD,aARD;AASA,iBAAKmI,gBAAL,CACE,iBADF,EAEEN,WAAW,GAAG,mCAFhB,EAGE,QAHF,EAIE,QAJF;AAMD;;;yCAEsB;AACrB,iBAAKxH,SAAL,CAAe+H,eAAf,CAA+B,KAAK/H,SAAL,CAAekC,QAA9C;AACD;;;qCACiB;AAAA;;AAChB,iBAAKrC,eAAL,GAAuB,IAAI,0EAAJ,CAAwB,KAAKL,UAA7B,CAAvB;AACA,iBAAKM,UAAL,GAAkB,IAAIC,iBAAJ,CAChB,KAAKF,eADW,EAEhB,KAAKG,SAFW,EAGhB,KAAKC,IAHW,CAAlB;AAKA,mEAAU,KAAKC,MAAL,CAAYC,aAAtB,EAAqC,OAArC,EAA8CC,SAA9C,CAAwD,YAAM;AAC5D,kBAAI,CAAC,OAAI,CAACN,UAAV,EAAsB;AACpB;AACD;;AACD,qBAAI,CAACA,UAAL,CAAgBI,MAAhB,GAAyB,OAAI,CAACA,MAAL,CAAYC,aAAZ,CAA0BE,KAAnD;AACD,aALD;AAMD;;;2CACgB2H,S,EAAWC,I,EAAMC,a,EAAeC,c,EAAgB;AAC/D,iBAAKrB,QAAL,CAAcsB,IAAd,CAAmBH,IAAnB,EAAyB,EAAzB,EAA6B;AAC3BtG,sBAAQ,EAAE,IADiB;AAE3B0G,8BAAgB,EAAEH,aAFS;AAG3BI,gCAAkB,EAAEH,cAHO;AAI3BI,wBAAU,EAAEP;AAJe,aAA7B;AAMD;;;;;;;yBAxFUpB,qB,EAAqB,gI,EAAA,2I,EAAA,wI;AAAA,O;;;cAArBA,qB;AAAqB,0C;AAAA;AAAA;4EAuBrB,wE,EAAc,I;;4EACd,8D,EAAS,I;;;;;;;;;;;;;oFA1BT,CAAC;AAAEf,iBAAO,EAAE,sEAAX;AAA4BC,kBAAQ,EAAE;AAAtC,SAAD,C;AAAiD,iB;AAAA,gB;AAAA,+zF;AAAA;AAAA;ACjB9D;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAuB;;AAAa;;AACtC;;AACA;;AACE;;AACE;;AAA4B;;AAAI;;AACpC;;AACA;;AAAmC;;AAAa;;AAClD;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAQ;;AAAa;;AAAS;;AAClC;;AACA;;AACE;;AAA0B;;AAAsC;;AAAM;;AAAI;;AAC1E;;AAEF;;AACA;;AACE;;AACE;;AAAkC;AAAA,qBAAS,IAAA0C,kBAAA,EAAT;AAA6B,aAA7B;;AAChC;;AAA4B;;AAAM;;AACpC;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AAEE;;AACE;;AAMA;;AAKF;;AAEA;;AACE;;AACA;;AACF;;AACA;;AACE;;AAEA;;AAGF;;AACA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AAEF;;AACA;;AACE;;AACA;;AAEF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AACA;;AAUF;;AACA;;AAEA;;AAEF;;AAEA;;AAIA;;AAIA;;AAGF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AAtG6D;;AAAA;;AAU7B;;AAAA;;AAqEA;;AAAA;;AAEP;;AAAA;;AAIN;;AAAA;;AAIA;;AAAA;;AAIqB;;AAAA,mHAAyC,WAAzC,EAAyC,CAAzC,EAAyC,UAAzC,EAAyC,EAAzC,EAAyC,iBAAzC,EAAyC,sEAAzC;;;;;;;;;;wED/G3B5B,qB,EAAqB;gBANjC,uDAMiC;iBANvB;AACTtG,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD,CAHF;AAITuD,qBAAS,EAAE,CAAC;AAAE8B,qBAAO,EAAE,sEAAX;AAA4BC,sBAAQ,EAAE;AAAtC,aAAD;AAJF,W;AAMuB,U;;;;;;;;;AAuBW9F,mBAAS,EAAE,CAAF;kBAAnD,uDAAmD;mBAAzC,wE,EAAc;AAAE,wBAAQ;AAAV,a;AAA2B,WAAE,C;AAChBC,cAAI,EAAE,CAAF;kBAAzC,uDAAyC;mBAA/B,8D,EAAS;AAAE,wBAAQ;AAAV,a;AAAsB,WAAE,C;AACLC,gBAAM,EAAE,CAAF;kBAA5C,uDAA4C;mBAAlC,Q,EAAU;AAAE,wBAAQ;AAAV,a;AAAwB,WAAE;;;;UAiEpCH,iB;;;;;AAUX,mCACSF,eADT,EAESG,SAFT,EAGSS,KAHT,EAGuB;AAAA;;AAAA;;AAErB;AAJO,kBAAAZ,eAAA,GAAAA,eAAA;AACA,kBAAAG,SAAA,GAAAA,SAAA;AACA,kBAAAS,KAAA,GAAAA,KAAA;AAZT,kBAAAC,YAAA,GAAe,IAAI,oDAAJ,CAAoB,EAApB,CAAf;AAOA,kBAAAC,YAAA,GAA+B,EAA/B;AACA,kBAAAC,YAAA,GAA+B,EAA/B,CAIuB,CAGrB;;AACA,kBAAKF,YAAL,CAAkBN,SAAlB,CAA4B;AAAA,mBAAO,QAAKJ,SAAL,CAAea,SAAf,GAA2B,CAAlC;AAAA,WAA5B;;AAJqB;AAKtB;;;;;AACD;oCACO;AAAA;;AACL;AACA,gBAAMC,kBAAkB,GAAG,CACzB,KAAKjB,eAAL,CAAqBkB,UADI,EAEzB,KAAKN,KAAL,CAAWO,UAFc,EAGzB,KAAKN,YAHoB,EAIzB,KAAKV,SAAL,CAAeiB,IAJU,CAA3B;AAMA,iBAAKpB,eAAL,CAAqB4I,kBAArB;AACA,mBAAO,iEAAS3H,kBAAT,EAA6BK,IAA7B,CACL,2DAAI,YAAM;AACR;AACA,qBAAI,CAACR,YAAL,GAAoB,OAAI,CAACd,eAAL,CAAqBuB,IAArB,CACjBC,KADiB,GAEjBnB,MAFiB,CAEV,UAACgG,YAAD,EAAgC;AACtC,oBAAM3E,SAAS,GAAG,CAChB2E,YAAY,CAACwC,GAAb,GACAxC,YAAY,CAAC3C,IADb,GAEA2C,YAAY,CAACyC,QAFb,GAGAzC,YAAY,CAAC0C,MAHb,GAIA1C,YAAY,CAAC3B,MAJb,GAKA2B,YAAY,CAAC2C,MANG,EAOhBhH,WAPgB,EAAlB;AAQA,uBAAON,SAAS,CAACO,OAAV,CAAkB,OAAI,CAAC5B,MAAL,CAAY2B,WAAZ,EAAlB,MAAiD,CAAC,CAAzD;AACD,eAZiB,CAApB,CAFQ,CAeR;;AACA,kBAAME,UAAU,GAAG,OAAI,CAACC,QAAL,CAAc,OAAI,CAACrB,YAAL,CAAkBU,KAAlB,EAAd,CAAnB,CAhBQ,CAiBR;;;AACA,kBAAMY,UAAU,GAAG,OAAI,CAACjC,SAAL,CAAea,SAAf,GAA2B,OAAI,CAACb,SAAL,CAAekC,QAA7D;AACA,qBAAI,CAACtB,YAAL,GAAoBmB,UAAU,CAACI,MAAX,CAClBF,UADkB,EAElB,OAAI,CAACjC,SAAL,CAAekC,QAFG,CAApB;AAIA,qBAAO,OAAI,CAACtB,YAAZ;AACD,aAxBD,CADK,CAAP;AA2BD;;;uCACY,CAAE;AACf;;;;mCACSQ,I,EAAoB;AAAA;;AAC3B,gBAAI,CAAC,KAAKX,KAAL,CAAW2B,MAAZ,IAAsB,KAAK3B,KAAL,CAAW4B,SAAX,KAAyB,EAAnD,EAAuD;AACrD,qBAAOjB,IAAP;AACD;;AACD,mBAAOA,IAAI,CAACnB,IAAL,CAAU,UAACqC,CAAD,EAAIC,CAAJ,EAAU;AACzB,kBAAIC,SAAS,GAAoB,EAAjC;AACA,kBAAIC,SAAS,GAAoB,EAAjC;;AACA,sBAAQ,OAAI,CAAChC,KAAL,CAAW2B,MAAnB;AACE,qBAAK,IAAL;AAAA,8BAC2B,CAACE,CAAC,CAACI,EAAH,EAAOH,CAAC,CAACG,EAAT,CAD3B;AACGF,2BADH;AACcC,2BADd;AAEE;;AACF,qBAAK,KAAL;AAAA,8BAC2B,CAACH,CAAC,CAACoG,GAAH,EAAQnG,CAAC,CAACmG,GAAV,CAD3B;AACGlG,2BADH;AACcC,2BADd;AAEE;;AACF,qBAAK,MAAL;AAAA,8BAC2B,CAACH,CAAC,CAACiB,IAAH,EAAShB,CAAC,CAACgB,IAAX,CAD3B;AACGf,2BADH;AACcC,2BADd;AAEE;;AACF,qBAAK,UAAL;AAAA,8BAC2B,CAACH,CAAC,CAACqG,QAAH,EAAapG,CAAC,CAACoG,QAAf,CAD3B;AACGnG,2BADH;AACcC,2BADd;AAEE;;AACF,qBAAK,QAAL;AAAA,8BAC2B,CAACH,CAAC,CAACsG,MAAH,EAAWrG,CAAC,CAACqG,MAAb,CAD3B;AACGpG,2BADH;AACcC,2BADd;AAEE;;AACF,qBAAK,QAAL;AAAA,+BAC2B,CAACH,CAAC,CAACiC,MAAH,EAAWhC,CAAC,CAACgC,MAAb,CAD3B;AACG/B,2BADH;AACcC,2BADd;AAEE;AAlBJ;;AAoBA,kBAAME,MAAM,GAAGC,KAAK,CAAC,CAACJ,SAAF,CAAL,GAAoBA,SAApB,GAAgC,CAACA,SAAhD;AACA,kBAAMK,MAAM,GAAGD,KAAK,CAAC,CAACH,SAAF,CAAL,GAAoBA,SAApB,GAAgC,CAACA,SAAhD;AACA,qBACE,CAACE,MAAM,GAAGE,MAAT,GAAkB,CAAC,CAAnB,GAAuB,CAAxB,KAA8B,OAAI,CAACpC,KAAL,CAAW4B,SAAX,KAAyB,KAAzB,GAAiC,CAAjC,GAAqC,CAAC,CAApE,CADF;AAGD,aA5BM,CAAP;AA6BD;;;8BA1FS;AACR,mBAAO,KAAK3B,YAAL,CAAkBL,KAAzB;AACD,W;4BACUH,M,EAAgB;AACzB,iBAAKQ,YAAL,CAAkBoC,IAAlB,CAAuB5C,MAAvB;AACD;;;;QAPoC,mE;;;;;;;;;;;;;;;;;AE7GvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQa4I,qB;AACX,uCACS/D,SADT,EAEkC3D,IAFlC,EAGS4D,eAHT,EAGyC;AAAA;;AAFhC,eAAAD,SAAA,GAAAA,SAAA;AACyB,eAAA3D,IAAA,GAAAA,IAAA;AACzB,eAAA4D,eAAA,GAAAA,eAAA;AACL;;;;sCACK;AACP,iBAAKD,SAAL,CAAeW,KAAf;AACD;;;0CACY;AACX,iBAAKV,eAAL,CAAqB+D,cAArB,CAAoC,KAAK3H,IAAL,CAAUsB,EAA9C;AACD;;;;;;;yBAXUoG,qB,EAAqB,sI,EAAA,gEAGtB,wEAHsB,C,EAGP,kI;AAAA,O;;;cAHdA,qB;AAAqB,mC;AAAA,iB;AAAA,e;AAAA,0S;AAAA;AAAA;ACRlC;;AACE;;AAAqB;;AAAa;;AAClC;;AACE;;AACE;;AACE;;AAAG;;AAAgC;;AAAc;;AAAO;;AAAc;;AACxE;;AACA;;AACE;;AAAG;;AAAgC;;AAAO;;AAAO;;AAAgB;;AACnE;;AACA;;AACE;;AACE;;AAA+B;;AAAM;;AAAO;;;;AAC9C;;AACF;;AACF;;AACF;;AACA;;AACE;;AAA4D;AAAA,qBAAS,IAAAE,aAAA,EAAT;AAAwB,aAAxB;;AAC1D;;AACF;;AACA;;AAAwB;AAAA,qBAAS,IAAAhD,SAAA,EAAT;AAAoB,aAApB;;AAAoC;;AAAM;;AACpE;;AACF;;;;AAlBgE;;AAAA;;AAGP;;AAAA;;AAIH;;AAAA;;AAMb;;AAAA;;;;;;;;;;wEDV5B8C,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACTxI,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD;AAHF,W;AAKuB,U;;;;;;oBAG7B,oD;qBAAO,wE;;;;;;;;;;;;;;;;;;;;;;;AEXZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOayI,iB;AAEX,qCAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,iB;AAAiB,O;;;cAAjBA,iB;AAAiB,qC;AAAA,iB;AAAA,e;AAAA,6rB;AAAA;AAAA;ACP9B;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAuB;;AAAQ;;AACjC;;AACA;;AACE;;AACE;;AAA4B;;AAAI;;AACpC;;AACA;;AAAmC;;AAAQ;;AAC7C;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAI;;AAAiB;;AACvB;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAQ;;AACnB;;AACF;;AACA;;AACE;;AAAW;;AAAgB;;AAC3B;;AACF;;AACA;;AACE;;AAAW;;AAAY;;AACvB;;AACF;;AACF;;AACA;;AAA0C;;AAAI;;AAChD;;AACF;;AACA;;AACE;;AACE;;AAAI;;AAAgB;;AACtB;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAW;;AAAU;;AACrB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAI;;AACf;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAK;;AAChB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAO;;AAClB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAO;;AAClB;;AACF;;AACF;;AACF;;AACA;;AACE;;AAA0C;;AAAY;;AACxD;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;;;;wED9FaA,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACT3I,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKmB,U;;;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACwEkB;;AACE;;AAAc;AAAA;;AAAA;;AAAA,qDAAoC,IAApC;AAAwC,WAAxC;;AAGd;;AACF;;;;;;AALmC;;AAE/B;;AAAA,qIAAmD,eAAnD,EAAmD,sDAAnD,EAAmD,SAAnD,EAAmD,cAAnD;;;;;;;;AAIJ;;AACE;;AAAc;AAAA;;AAAA,mBAASkG,MAAM,CAACC,eAAP,EAAT;AAAiC,WAAjC,EAAkC,QAAlC,EAAkC;AAAA;;AAAA;;AAAA;;AAAA,4BAAoB,QAAAhH,SAAA,gBAApB,GAA4C,IAA5C;AAAgD,WAAlF;;AAEd;;AACF;;;;;;;;AAJgC;;AAE5B;;AAAA,oHAAqC,SAArC,EAAqC,cAArC;;;;;;AAMJ;;AAAmD;;AAAE;;;;;;AACrD;;AAAgC;;AAAU;;;;;;AAAV;;AAAA;;;;;;AAGhC;;AAAmD;;AAAY;;;;;;;;AAC/D;;AAAgC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC9B;;AAAa;;;;;;AAAb;;AAAA;;;;;;AAGF;;AAAmD;;AACnD;;;;;;;;AACA;;AAAgC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC9B;;AAAa;;;;;;AAAb;;AAAA;;;;;;AAGF;;AAAmD;;AAAI;;;;;;;;AACvD;;AAAgC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC9B;;;;AACF;;;;;;AADE;;AAAA;;;;;;AAIF;;AAAmD;;AAAI;;;;;;;;AACvD;;AAAgC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC9B;;AAAY;;;;;;AAAZ;;AAAA;;;;;;AAGF;;AAAmD;;AAAM;;;;;;;;AACzD;;AAAgC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC9B;;AAAc;;;;;;AAAd;;AAAA;;;;;;AAIF;;AAAgD;;AAAO;;;;;;;;AACvD;;AACE;;AAA4D;AAAA;;AAAA,mBAAS+G,MAAM,CAACC,eAAP,EAAT;AAAiC,WAAjC,EAAkC,OAAlC,EAAkC;AAAA;;AAAA;;AAAA;;AAAA;AAAA,WAAlC;;AAE1D;;AAA8C;;AAAI;;AACpD;;AACA;;AAA8D;AAAA;;AAAA,mBAASD,MAAM,CAACC,eAAP,EAAT;AAAiC,WAAjC,EAAkC,OAAlC,EAAkC;AAAA;;AAAA;;AAAA;;AAAA;AAAA,WAAlC;;AAE5D;;AAAgD;;AAAM;;AACxD;;AACF;;;;;;AAEF;;;;;;;;AAEA;;AAA0D;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAE1D;;;;AADE;;;;;;AAIJ;;AACE;;AAEF;;;;AAFwC;;AAAA;;;;;;;;AASpC;;AAAsB;AAAA;;AAAA;;AAAA;AAAA;;AACpB;;AAAU;;AAAO;;AACjB;;AAAM;;AAAU;;AAClB;;AACA;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACpB;;AAAU;;AAAM;;AAChB;;AAAM;;AAAW;;AACnB;;AACA;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACpB;;AAAU;;AAAM;;AAChB;;AAAM;;AAAa;;AACrB;;AACA;;AAAsB;AAAA;;AAAA;;AAAA;AAAA;;AACpB;;AAAU;;AAAO;;AACjB;;AAAM;;AAAc;;AACtB;;AACA;;AACE;;AAAU;;AAAa;;AACvB;;AAAM;;AAAO;;AACf;;AACA;;AACE;;AAAU;;AAAQ;;AAClB;;AAAO;;AAAW;;AACpB;;;;;;;;AAHsB;;AAAA;;;;;;AAqB1B;;AAEE;;AACF;;;;;;AAFE;;;;;;;;UDxKHuC,iB;AAeX,mCACS1J,UADT,EAES2J,MAFT,EAGSnE,eAHT,EAIU8B,QAJV,EAI+B;AAAA;;AAHtB,eAAAtH,UAAA,GAAAA,UAAA;AACA,eAAA2J,MAAA,GAAAA,MAAA;AACA,eAAAnE,eAAA,GAAAA,eAAA;AACC,eAAA8B,QAAA,GAAAA,QAAA;AAlBV,eAAApH,gBAAA,GAAmB,CACjB,QADiB,EAEjB,OAFiB,EAGjB,OAHiB,EAIjB,MAJiB,EAKjB,MALiB,EAMjB,QANiB,EAOjB,SAPiB,CAAnB;AAWA,eAAAC,SAAA,GAAY,IAAI,uEAAJ,CAA6B,IAA7B,EAAmC,EAAnC,CAAZ;AAcA,eAAAyJ,mBAAA,GAAsB;AAAEC,aAAC,EAAE,KAAL;AAAYC,aAAC,EAAE;AAAf,WAAtB;AANI;;;;qCAQO;AACT,iBAAK1J,QAAL;AACD;;;oCACS;AACR,iBAAKA,QAAL;AACD;;;mCACQ;AAAA;;AACP,gBAAMmF,SAAS,GAAG,KAAKoE,MAAL,CAAYf,IAAZ,CAAiB,+FAAjB,EAAsC;AACtDhH,kBAAI,EAAE;AACJqC,wBAAQ,EAAE,KAAKA,QADX;AAEJ2B,sBAAM,EAAE;AAFJ;AADgD,aAAtC,CAAlB;AAMAL,qBAAS,CAACwE,WAAV,GAAwBnJ,SAAxB,CAAkC,UAACoJ,MAAD,EAAY;AAC5C,kBAAIA,MAAM,KAAK,CAAf,EAAkB;AAChB;AACA;AACA,uBAAI,CAAC3J,eAAL,CAAqBkB,UAArB,CAAgCV,KAAhC,CAAsCoJ,OAAtC,CACE,OAAI,CAACzE,eAAL,CAAqB0E,aAArB,EADF;;AAGA,uBAAI,CAAC7B,YAAL;;AACA,uBAAI,CAACC,gBAAL,CACE,kBADF,EAEE,+BAFF,EAGE,QAHF,EAIE,QAJF;AAMD;AACF,aAfD;AAgBD;;;mCACQR,G,EAAK;AAAA;;AACZ,iBAAK5E,EAAL,GAAU4E,GAAG,CAAC5E,EAAd;AACA,gBAAMqC,SAAS,GAAG,KAAKoE,MAAL,CAAYf,IAAZ,CAAiB,+FAAjB,EAAsC;AACtDhH,kBAAI,EAAE;AACJqC,wBAAQ,EAAE6D,GADN;AAEJlC,sBAAM,EAAE;AAFJ;AADgD,aAAtC,CAAlB;AAMAL,qBAAS,CAACwE,WAAV,GAAwBnJ,SAAxB,CAAkC,UAACoJ,MAAD,EAAY;AAC5C,kBAAIA,MAAM,KAAK,CAAf,EAAkB;AAChB;AACA,oBAAMG,UAAU,GAAG,OAAI,CAAC9J,eAAL,CAAqBkB,UAArB,CAAgCV,KAAhC,CAAsCsH,SAAtC,CACjB,UAAC0B,CAAD;AAAA,yBAAOA,CAAC,CAAC3G,EAAF,KAAS,OAAI,CAACA,EAArB;AAAA,iBADiB,CAAnB,CAFgB,CAKhB;;;AACA,uBAAI,CAAC7C,eAAL,CAAqBkB,UAArB,CAAgCV,KAAhC,CACEsJ,UADF,IAEI,OAAI,CAAC3E,eAAL,CAAqB0E,aAArB,EAFJ,CANgB,CAShB;;AACA,uBAAI,CAAC7B,YAAL;;AACA,uBAAI,CAACC,gBAAL,CACE,OADF,EAEE,gCAFF,EAGE,QAHF,EAIE,QAJF;AAMD;AACF,aAnBD;AAoBD;;;qCACUR,G,EAAK;AAAA;;AACd,iBAAK5E,EAAL,GAAU4E,GAAG,CAAC5E,EAAd;AACA,gBAAMqC,SAAS,GAAG,KAAKoE,MAAL,CAAYf,IAAZ,CAAiB,uFAAjB,EAAwC;AACxDhH,kBAAI,EAAEkG;AADkD,aAAxC,CAAlB;AAGAvC,qBAAS,CAACwE,WAAV,GAAwBnJ,SAAxB,CAAkC,UAACoJ,MAAD,EAAY;AAC5C,kBAAIA,MAAM,KAAK,CAAf,EAAkB;AAChB,oBAAMG,UAAU,GAAG,OAAI,CAAC9J,eAAL,CAAqBkB,UAArB,CAAgCV,KAAhC,CAAsCsH,SAAtC,CACjB,UAAC0B,CAAD;AAAA,yBAAOA,CAAC,CAAC3G,EAAF,KAAS,OAAI,CAACA,EAArB;AAAA,iBADiB,CAAnB,CADgB,CAIhB;;;AACA,uBAAI,CAAC7C,eAAL,CAAqBkB,UAArB,CAAgCV,KAAhC,CAAsC8B,MAAtC,CAA6CwH,UAA7C,EAAyD,CAAzD;;AACA,uBAAI,CAAC9B,YAAL;;AACA,uBAAI,CAACC,gBAAL,CACE,iBADF,EAEE,kCAFF,EAGE,QAHF,EAIE,QAJF;AAMD;AACF,aAfD;AAgBD;;;yCACsB;AACrB,iBAAK9H,SAAL,CAAe+H,eAAf,CAA+B,KAAK/H,SAAL,CAAekC,QAA9C;AACD;AACD;;;;0CACgB;AACd,gBAAM6E,WAAW,GAAG,KAAKpH,SAAL,CAAeqH,QAAf,CAAwBC,MAA5C;AACA,gBAAMC,OAAO,GAAG,KAAKpH,UAAL,CAAgBc,YAAhB,CAA6BqG,MAA7C;AACA,mBAAOF,WAAW,KAAKG,OAAvB;AACD;AAED;;;;yCACe;AAAA;;AACb,iBAAKC,aAAL,KACI,KAAKxH,SAAL,CAAeyH,KAAf,EADJ,GAEI,KAAKtH,UAAL,CAAgBc,YAAhB,CAA6ByG,OAA7B,CAAqC,UAACC,GAAD;AAAA,qBACnC,OAAI,CAAC3H,SAAL,CAAe4H,MAAf,CAAsBD,GAAtB,CADmC;AAAA,aAArC,CAFJ;AAKD;;;+CACoB;AAAA;;AACnB,gBAAME,WAAW,GAAG,KAAK7H,SAAL,CAAeqH,QAAf,CAAwBC,MAA5C;AACA,iBAAKtH,SAAL,CAAeqH,QAAf,CAAwBK,OAAxB,CAAgC,UAACI,IAAD,EAAU;AACxC,kBAAMC,KAAK,GAAW,OAAI,CAAC5H,UAAL,CAAgBc,YAAhB,CAA6B+G,SAA7B,CACpB,UAACC,CAAD;AAAA,uBAAOA,CAAC,KAAKH,IAAb;AAAA,eADoB,CAAtB,CADwC,CAIxC;;;AACA,qBAAI,CAAC5H,eAAL,CAAqBkB,UAArB,CAAgCV,KAAhC,CAAsC8B,MAAtC,CAA6CuF,KAA7C,EAAoD,CAApD;;AACA,qBAAI,CAACG,YAAL;;AACA,qBAAI,CAAClI,SAAL,GAAiB,IAAI,uEAAJ,CAA6B,IAA7B,EAAmC,EAAnC,CAAjB;AACD,aARD;AASA,iBAAKmI,gBAAL,CACE,iBADF,EAEEN,WAAW,GAAG,mCAFhB,EAGE,QAHF,EAIE,QAJF;AAMD;;;qCACiB;AAAA;;AAChB,iBAAK3H,eAAL,GAAuB,IAAI,iEAAJ,CAAoB,KAAKL,UAAzB,CAAvB;AACA,iBAAKM,UAAL,GAAkB,IAAIC,iBAAJ,CAChB,KAAKF,eADW,EAEhB,KAAKG,SAFW,EAGhB,KAAKC,IAHW,CAAlB;AAKA,mEAAU,KAAKC,MAAL,CAAYC,aAAtB,EAAqC,OAArC,EAA8CC,SAA9C,CAAwD,YAAM;AAC5D,kBAAI,CAAC,OAAI,CAACN,UAAV,EAAsB;AACpB;AACD;;AACD,qBAAI,CAACA,UAAL,CAAgBI,MAAhB,GAAyB,OAAI,CAACA,MAAL,CAAYC,aAAZ,CAA0BE,KAAnD;AACD,aALD;AAMD;;;2CACgB2H,S,EAAWC,I,EAAMC,a,EAAeC,c,EAAgB;AAC/D,iBAAKrB,QAAL,CAAcsB,IAAd,CAAmBH,IAAnB,EAAyB,EAAzB,EAA6B;AAC3BtG,sBAAQ,EAAE,IADiB;AAE3B0G,8BAAgB,EAAEH,aAFS;AAG3BI,gCAAkB,EAAEH,cAHO;AAI3BI,wBAAU,EAAEP;AAJe,aAA7B;AAMD,W,CACD;;;;wCACc4B,K,EAAmBnC,I,EAAgB;AAC/CmC,iBAAK,CAACC,cAAN;AACA,iBAAKT,mBAAL,CAAyBC,CAAzB,GAA6BO,KAAK,CAACE,OAAN,GAAgB,IAA7C;AACA,iBAAKV,mBAAL,CAAyBE,CAAzB,GAA6BM,KAAK,CAACG,OAAN,GAAgB,IAA7C;AACA,iBAAKC,WAAL,CAAiBC,QAAjB,GAA4B;AAAExC,kBAAI,EAAEA;AAAR,aAA5B;AACA,iBAAKuC,WAAL,CAAiBE,IAAjB,CAAsBC,cAAtB,CAAqC,OAArC;AACA,iBAAKH,WAAL,CAAiBI,QAAjB;AACD;;;;;;;yBA/KUlB,iB,EAAiB,gI,EAAA,mI,EAAA,kI,EAAA,wI;AAAA,O;;;cAAjBA,iB;AAAiB,qC;AAAA;AAAA;4EAqBjB,wE,EAAc,I;;4EACd,8D,EAAS,I;;;;sEAET,sE,EAAc,I;;;;;;;;;;;;;;;;;AC7C3B;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAuB;;AAAa;;AACtC;;AACA;;AACE;;AACE;;AAA4B;;AAAI;;AACpC;;AACA;;AACE;;AAAoC;;AAAS;;AAC/C;;AACA;;AAAmC;;AAAG;;AACxC;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAQ;;AAAS;;AAAS;;AAC9B;;AACA;;AACE;;AAA0B;;AAAsC;;AAAM;;AAAI;;AAC1E;;AAEF;;AACA;;AACE;;AACE;;AAAkC;AAAA,qBAAS,IAAAV,kBAAA,EAAT;AAA6B,aAA7B;;AAChC;;AAA4B;;AAC5B;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAqC;AAAA,qBAAS,IAAA6B,MAAA,EAAT;AAAiB,aAAjB;;AACnC;;AAA4B;;AAAG;;AACjC;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAqC;AAAA,qBAAS,IAAAC,OAAA,EAAT;AAAkB,aAAlB;;AACnC;;AAA4B;;AAAO;;AACrC;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AAEE;;AACE;;AAMA;;AAKF;;AAEA;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AAEF;;AACA;;AACE;;AAEA;;AAEF;;AACA;;AACE;;AACA;;AAGF;;AACA;;AACE;;AACA;;AAEF;;AACA;;AACE;;AACA;;AAEF;;AAEA;;AACE;;AACA;;AAUF;;AACA;;AAEA;;AAGF;;AAEA;;AAKA;;AAGA;;AACE;;AA0BF;;AACA;;AACE;;AACE;;AAAU;;AAAY;;AACtB;;AAAM;;AAAM;;AACd;;AACA;;AACE;;AAAU;;AAAI;;AACd;;AAAM;;AAAM;;AACd;;AACA;;AACE;;AAAU;;AAAI;;AACd;;AAAM;;AAAM;;AACd;;AACF;;AAEA;;AAIA;;AAGF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AAjK6D;;AAAA;;AA6B7B;;AAAA;;AA6DA;;AAAA;;AAEP;;AAAA;;AAKN;;AAAA;;AAK4C;;AAAA,yGAAoC,KAApC,EAAoC,yBAApC;;AACX;;AA6CjC;;AAAA;;AAIqB;;AAAA,mHAAyC,WAAzC,EAAyC,CAAzC,EAAyC,UAAzC,EAAyC,EAAzC,EAAyC,iBAAzC,EAAyC,sEAAzC;;;;;;;;;;wED3K3BpB,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACT5I,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKmB,U;;;;;;;;;;;AAqBeR,mBAAS,EAAE,CAAF;kBAAnD,uDAAmD;mBAAzC,wE,EAAc;AAAE,wBAAQ;AAAV,a;AAA2B,WAAE,C;AAChBC,cAAI,EAAE,CAAF;kBAAzC,uDAAyC;mBAA/B,8D,EAAS;AAAE,wBAAQ;AAAV,a;AAAsB,WAAE,C;AACLC,gBAAM,EAAE,CAAF;kBAA5C,uDAA4C;mBAAlC,Q,EAAU;AAAE,wBAAQ;AAAV,a;AAAwB,WAAE,C;AAE/C8J,qBAAW,EAAE,CAAF;kBADV,uDACU;mBADA,sE;AACA,WAAE;;;;UAwJFjK,iB;;;;;AAUX,mCACSF,eADT,EAESG,SAFT,EAGSS,KAHT,EAGuB;AAAA;;AAAA;;AAErB;AAJO,kBAAAZ,eAAA,GAAAA,eAAA;AACA,kBAAAG,SAAA,GAAAA,SAAA;AACA,kBAAAS,KAAA,GAAAA,KAAA;AAZT,kBAAAC,YAAA,GAAe,IAAI,oDAAJ,CAAoB,EAApB,CAAf;AAOA,kBAAAC,YAAA,GAA2B,EAA3B;AACA,kBAAAC,YAAA,GAA2B,EAA3B,CAIuB,CAGrB;;AACA,kBAAKF,YAAL,CAAkBN,SAAlB,CAA4B;AAAA,mBAAO,QAAKJ,SAAL,CAAea,SAAf,GAA2B,CAAlC;AAAA,WAA5B;;AAJqB;AAKtB;;;;;AACD;oCACO;AAAA;;AACL;AACA,gBAAMC,kBAAkB,GAAG,CACzB,KAAKjB,eAAL,CAAqBkB,UADI,EAEzB,KAAKN,KAAL,CAAWO,UAFc,EAGzB,KAAKN,YAHoB,EAIzB,KAAKV,SAAL,CAAeiB,IAJU,CAA3B;AAMA,iBAAKpB,eAAL,CAAqB0K,eAArB;AACA,mBAAO,iEAASzJ,kBAAT,EAA6BK,IAA7B,CACL,2DAAI,YAAM;AACR;AACA,qBAAI,CAACR,YAAL,GAAoB,OAAI,CAACd,eAAL,CAAqBuB,IAArB,CACjBC,KADiB,GAEjBnB,MAFiB,CAEV,UAACuD,QAAD,EAAwB;AAC9B,oBAAMlC,SAAS,GAAG,CAChBkC,QAAQ,CAACS,KAAT,GACAT,QAAQ,SADR,GAEAA,QAAQ,CAAChC,IAFT,GAGAgC,QAAQ,CAAC/B,IAJO,EAKhBG,WALgB,EAAlB;AAMA,uBAAON,SAAS,CAACO,OAAV,CAAkB,OAAI,CAAC5B,MAAL,CAAY2B,WAAZ,EAAlB,MAAiD,CAAC,CAAzD;AACD,eAViB,CAApB,CAFQ,CAaR;;AACA,kBAAME,UAAU,GAAG,OAAI,CAACC,QAAL,CAAc,OAAI,CAACrB,YAAL,CAAkBU,KAAlB,EAAd,CAAnB,CAdQ,CAeR;;;AACA,kBAAMY,UAAU,GAAG,OAAI,CAACjC,SAAL,CAAea,SAAf,GAA2B,OAAI,CAACb,SAAL,CAAekC,QAA7D;AACA,qBAAI,CAACtB,YAAL,GAAoBmB,UAAU,CAACI,MAAX,CAClBF,UADkB,EAElB,OAAI,CAACjC,SAAL,CAAekC,QAFG,CAApB;AAIA,qBAAO,OAAI,CAACtB,YAAZ;AACD,aAtBD,CADK,CAAP;AAyBD;;;uCACY,CAAE;AACf;;;;mCACSQ,I,EAAgB;AAAA;;AACvB,gBAAI,CAAC,KAAKX,KAAL,CAAW2B,MAAZ,IAAsB,KAAK3B,KAAL,CAAW4B,SAAX,KAAyB,EAAnD,EAAuD;AACrD,qBAAOjB,IAAP;AACD;;AACD,mBAAOA,IAAI,CAACnB,IAAL,CAAU,UAACqC,CAAD,EAAIC,CAAJ,EAAU;AACzB,kBAAIC,SAAS,GAAoB,EAAjC;AACA,kBAAIC,SAAS,GAAoB,EAAjC;;AACA,sBAAQ,OAAI,CAAChC,KAAL,CAAW2B,MAAnB;AACE,qBAAK,IAAL;AAAA,+BAC2B,CAACE,CAAC,CAACI,EAAH,EAAOH,CAAC,CAACG,EAAT,CAD3B;AACGF,2BADH;AACcC,2BADd;AAEE;;AACF,qBAAK,OAAL;AAAA,+BAC2B,CAACH,CAAC,CAAC4B,KAAH,EAAU3B,CAAC,CAAC2B,KAAZ,CAD3B;AACG1B,2BADH;AACcC,2BADd;AAEE;;AACF,qBAAK,OAAL;AAAA,+BAC2B,CAACH,CAAC,SAAF,EAAUC,CAAC,SAAX,CAD3B;AACGC,2BADH;AACcC,2BADd;AAEE;;AACF,qBAAK,MAAL;AAAA,+BAC2B,CAACH,CAAC,CAACb,IAAH,EAASc,CAAC,CAACd,IAAX,CAD3B;AACGe,2BADH;AACcC,2BADd;AAEE;;AACF,qBAAK,MAAL;AAAA,+BAC2B,CAACH,CAAC,CAACZ,IAAH,EAASa,CAAC,CAACb,IAAX,CAD3B;AACGc,2BADH;AACcC,2BADd;AAEE;AAfJ;;AAiBA,kBAAME,MAAM,GAAGC,KAAK,CAAC,CAACJ,SAAF,CAAL,GAAoBA,SAApB,GAAgC,CAACA,SAAhD;AACA,kBAAMK,MAAM,GAAGD,KAAK,CAAC,CAACH,SAAF,CAAL,GAAoBA,SAApB,GAAgC,CAACA,SAAhD;AACA,qBACE,CAACE,MAAM,GAAGE,MAAT,GAAkB,CAAC,CAAnB,GAAuB,CAAxB,KAA8B,OAAI,CAACpC,KAAL,CAAW4B,SAAX,KAAyB,KAAzB,GAAiC,CAAjC,GAAqC,CAAC,CAApE,CADF;AAGD,aAzBM,CAAP;AA0BD;;;8BArFS;AACR,mBAAO,KAAK3B,YAAL,CAAkBL,KAAzB;AACD,W;4BACUH,M,EAAgB;AACzB,iBAAKQ,YAAL,CAAkBoC,IAAlB,CAAuB5C,MAAvB;AACD;;;;QAPoC,mE","file":"teacher-teacher-module-es5.js","sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { ExamScheduleService } from './exam-schedule.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { ExamSchedule } from './exam-schedule.model';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\n@Component({\r\n  selector: 'app-exam-schedule',\r\n  templateUrl: './exam-schedule.component.html',\r\n  styleUrls: ['./exam-schedule.component.sass'],\r\n})\r\nexport class ExamScheduleComponent implements OnInit {\r\n  displayedColumns = [\r\n    'subject',\r\n    'class',\r\n    'date',\r\n    'time',\r\n    'duration',\r\n    'roomNo',\r\n    'totalMarks',\r\n    'reqMarks',\r\n  ];\r\n  exampleDatabase: ExamScheduleService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<ExamSchedule>(true, []);\r\n  index: number;\r\n  id: number;\r\n  examSchedule: ExamSchedule | null;\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public examScheduleService: ExamScheduleService\r\n  ) {}\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild('filter', { static: true }) filter: ElementRef;\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n\r\n  public loadData() {\r\n    this.exampleDatabase = new ExamScheduleService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    fromEvent(this.filter.nativeElement, 'keyup').subscribe(() => {\r\n      if (!this.dataSource) {\r\n        return;\r\n      }\r\n      this.dataSource.filter = this.filter.nativeElement.value;\r\n    });\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<ExamSchedule> {\r\n  filterChange = new BehaviorSubject('');\r\n  get filter(): string {\r\n    return this.filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this.filterChange.next(filter);\r\n  }\r\n  filteredData: ExamSchedule[] = [];\r\n  renderedData: ExamSchedule[] = [];\r\n  constructor(\r\n    public exampleDatabase: ExamScheduleService,\r\n    public paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<ExamSchedule[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this.exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this.filterChange,\r\n      this.paginator.page,\r\n    ];\r\n    this.exampleDatabase.getAllExamSchedule();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this.exampleDatabase.data\r\n          .slice()\r\n          .filter((examSchedule: ExamSchedule) => {\r\n            const searchStr = (\r\n              examSchedule.subject +\r\n              examSchedule.class +\r\n              examSchedule.date +\r\n              examSchedule.time +\r\n              examSchedule.duration +\r\n              examSchedule.totalMarks\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this.paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() {}\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: ExamSchedule[]): ExamSchedule[] {\r\n    if (!this._sort.active || this._sort.direction === '') {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = '';\r\n      let propertyB: number | string = '';\r\n      switch (this._sort.active) {\r\n        case 'id':\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case 'subject':\r\n          [propertyA, propertyB] = [a.subject, b.subject];\r\n          break;\r\n        case 'class':\r\n          [propertyA, propertyB] = [a.class, b.class];\r\n          break;\r\n        case 'date':\r\n          [propertyA, propertyB] = [a.date, b.date];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n    <div class=\"block-header\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n          <ul class=\"breadcrumb breadcrumb-style \">\n            <li class=\"breadcrumb-item\">\n              <h4 class=\"page-title\">Exam Schedule</h4>\n            </li>\n            <li class=\"breadcrumb-item bcrumb-1\">\n              <a routerLink=\"/patient/dashboard\">\n                <i class=\"fas fa-home\"></i> Home</a>\n            </li>\n            <li class=\"breadcrumb-item active\">Exam Schedule</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"body\">\n            <div class=\"responsive_table\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ml-0\">\n                      <li class=\"dropdown\">\n                        <h2>\n                          <strong>Exam Schedule</strong></h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\n                          aria-label=\"Search box\">\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\n                <!-- ID Column -->\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"subject\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>subject\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.subject}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"class\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Class Name</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.class}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"date\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Start Date</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.date | date: 'MM/dd/yyyy' }}\n                  </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"time\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Time</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.time }}\n                  </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"duration\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Duration</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.duration}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"roomNo\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Room No\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap\"> {{row.roomNo}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"totalMarks\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Total Marks</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.totalMarks}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"reqMarks\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Require Marks</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.reqMarks}}</mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n              </mat-table>\n              <!-- Loading spinner -->\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\n                No results\n              </div>\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\n              </mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Lectures } from './lectures.model';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\n@Injectable()\r\nexport class LecturesService {\r\n  private readonly API_URL = 'assets/data/lectures.json';\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<Lectures[]> = new BehaviorSubject<Lectures[]>([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {}\r\n  get data(): Lectures[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllLecturess(): void {\r\n    this.httpClient.get<Lectures[]>(this.API_URL).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + ' ' + error.message);\r\n      }\r\n    );\r\n  }\r\n  addLectures(lectures: Lectures): void {\r\n    this.dialogData = lectures;\r\n\r\n    /*  this.httpClient.post(this.API_URL, lectures).subscribe(data => {\r\n      this.dialogData = lectures;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updateLectures(lectures: Lectures): void {\r\n    this.dialogData = lectures;\r\n\r\n    /* this.httpClient.put(this.API_URL + lectures.id, lectures).subscribe(data => {\r\n      this.dialogData = lectures;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deleteLectures(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { ChartsModule as chartjsModule } from 'ng2-charts';\nimport { NgxEchartsModule } from 'ngx-echarts';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { TeacherRoutingModule } from './teacher-routing.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { LecturesComponent } from './lectures/lectures.component';\nimport { DeleteDialogComponent } from './lectures/dialogs/delete/delete.component';\nimport { FormDialogComponent } from './lectures/dialogs/form-dialog/form-dialog.component';\nimport { LeaveRequestComponent } from './leave-request/leave-request.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { ExamScheduleComponent } from './exam-schedule/exam-schedule.component';\nimport { LecturesService } from './lectures/lectures.service';\nimport { LeaveRequestService } from './leave-request/leave-request.service';\nimport { ExamScheduleService } from './exam-schedule/exam-schedule.service';\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    LecturesComponent,\n    DeleteDialogComponent,\n    FormDialogComponent,\n    LeaveRequestComponent,\n    SettingsComponent,\n    ExamScheduleComponent,\n  ],\n  imports: [\n    CommonModule,\n    TeacherRoutingModule,\n    chartjsModule,\n    NgxEchartsModule.forRoot({\n      echarts: () => import('echarts'),\n    }),\n    FormsModule,\n    ReactiveFormsModule,\n    PerfectScrollbarModule,\n    MatIconModule,\n    MatButtonModule,\n    NgApexchartsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatSortModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    MatProgressSpinnerModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule,\n  ],\n  providers: [LecturesService, LeaveRequestService, ExamScheduleService],\n})\nexport class TeacherModule {}\n","export class Lectures {\r\n  id: number;\r\n  sName: string;\r\n  class: string;\r\n  date: string;\r\n  time: string;\r\n  status: string;\r\n  constructor(lectures) {\r\n    {\r\n      this.id = lectures.id || this.getRandomID();\r\n      this.sName = lectures.dName || '';\r\n      this.class = lectures.hod || '';\r\n      this.date = lectures.phone || '';\r\n      this.time = lectures.email || '';\r\n      this.status = lectures.sYear || '';\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, Inject } from '@angular/core';\nimport { LecturesService } from '../../lectures.service';\nimport {\n  FormControl,\n  Validators,\n  FormGroup,\n  FormBuilder,\n} from '@angular/forms';\nimport { Lectures } from '../../lectures.model';\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\n@Component({\n  selector: 'app-form-dialog',\n  templateUrl: './form-dialog.component.html',\n  styleUrls: ['./form-dialog.component.sass'],\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: 'en-GB' }],\n})\nexport class FormDialogComponent {\n  action: string;\n  dialogTitle: string;\n  lecturesForm: FormGroup;\n  lectures: Lectures;\n  constructor(\n    public dialogRef: MatDialogRef<FormDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public lecturesService: LecturesService,\n    private fb: FormBuilder\n  ) {\n    // Set the defaults\n    this.action = data.action;\n    if (this.action === 'edit') {\n      this.dialogTitle = data.lectures.sName;\n      this.lectures = data.lectures;\n    } else {\n      this.dialogTitle = 'New Lectures';\n      this.lectures = new Lectures({});\n    }\n    this.lecturesForm = this.createContactForm();\n  }\n  formControl = new FormControl('', [\n    Validators.required,\n    // Validators.email,\n  ]);\n  getErrorMessage() {\n    return this.formControl.hasError('required')\n      ? 'Required field'\n      : this.formControl.hasError('email')\n      ? 'Not a valid email'\n      : '';\n  }\n  createContactForm(): FormGroup {\n    return this.fb.group({\n      id: [this.lectures.id],\n      sName: [this.lectures.sName, [Validators.required]],\n      class: [this.lectures.class, [Validators.required]],\n      date: [this.lectures.date, [Validators.required]],\n      time: [this.lectures.time, [Validators.required]],\n      status: [this.lectures.status, [Validators.required]],\n    });\n  }\n  submit() {\n    // emppty stuff\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  public confirmAdd(): void {\n    this.lecturesService.addLectures(this.lecturesForm.getRawValue());\n  }\n}\n","<div class=\"addContainer\">\n  <div class=\"modalHeader\">\n    <div class=\"editRowModal\">\n      <div class=\"modalHeader clearfix\">\n        <div class=\"modal-about\">\n          <div class=\"font-weight-bold p-t-5 font-17\">\n            {{dialogTitle}}</div>\n        </div>\n      </div>\n    </div>\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n  <div mat-dialog-content>\n    <form class=\"register-form m-4\" [formGroup]=\"lecturesForm\" (ngSubmit)=\"submit\">\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Subject Name</mat-label>\n            <mat-select formControlName=\"sName\" required>\n              <mat-option [value]=\"'Mathematics'\">\n                Mathematics\n              </mat-option>\n              <mat-option [value]=\"'Chemistry'\">\n                Chemistry\n              </mat-option>\n              <mat-option [value]=\"'Physics'\">\n                Physics\n              </mat-option>\n              <mat-option [value]=\"'Biology'\">\n                Biology\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"lecturesForm.get('sName').hasError('required')\">\n              Select Any Subject\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Class Name</mat-label>\n            <input matInput formControlName=\"class\" required>\n            <mat-icon matSuffix>person</mat-icon>\n            <mat-error *ngIf=\"lecturesForm.get('class').hasError('required')\">\n              Class name required\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Choose a date</mat-label>\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"date\" required>\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n            <mat-error *ngIf=\"lecturesForm.get('date').hasError('required')\">\n              Please select date\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Time</mat-label>\n            <input matInput formControlName=\"time\" required>\n            <mat-icon matSuffix>schedule</mat-icon>\n            <mat-error *ngIf=\"lecturesForm.get('time').hasError('required')\">\n              Please enter a valid time\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Status</mat-label>\n            <mat-select formControlName=\"status\" required>\n              <mat-option [value]=\"'Confirm'\">\n                Confirm\n              </mat-option>\n              <mat-option [value]=\"'Cancelled'\">\n                Cancelled\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"lecturesForm.get('status').hasError('required')\">\n              Select Status\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n          <div class=\"example-button-row\">\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!lecturesForm.valid\"\n              [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { LeaveRequest } from './leave-request.model';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\n@Injectable()\r\nexport class LeaveRequestService {\r\n  private readonly API_URL = 'assets/data/leaveRequest.json';\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<LeaveRequest[]> = new BehaviorSubject<\r\n    LeaveRequest[]\r\n  >([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {}\r\n  get data(): LeaveRequest[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllLeaveRequest(): void {\r\n    this.httpClient.get<LeaveRequest[]>(this.API_URL).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + ' ' + error.message);\r\n      }\r\n    );\r\n  }\r\n  addLeaveRequest(leaveRequest: LeaveRequest): void {\r\n    this.dialogData = leaveRequest;\r\n\r\n    /*  this.httpClient.post(this.API_URL, leaveRequest).subscribe(data => {\r\n      this.dialogData = leaveRequest;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updateLeaveRequest(leaveRequest: LeaveRequest): void {\r\n    this.dialogData = leaveRequest;\r\n\r\n    /* this.httpClient.put(this.API_URL + leaveRequest.id, leaveRequest).subscribe(data => {\r\n      this.dialogData = leaveRequest;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deleteLeaveRequest(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { ExamSchedule } from './exam-schedule.model';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\n@Injectable()\r\nexport class ExamScheduleService {\r\n  private readonly API_URL = 'assets/data/examSchedule.json';\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<ExamSchedule[]> = new BehaviorSubject<\r\n    ExamSchedule[]\r\n  >([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {}\r\n  get data(): ExamSchedule[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllExamSchedule(): void {\r\n    this.httpClient.get<ExamSchedule[]>(this.API_URL).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + ' ' + error.message);\r\n      }\r\n    );\r\n  }\r\n  addExamSchedule(examSchedule: ExamSchedule): void {\r\n    this.dialogData = examSchedule;\r\n\r\n    /*  this.httpClient.post(this.API_URL, examSchedule).subscribe(data => {\r\n      this.dialogData = examSchedule;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updateExamSchedule(examSchedule: ExamSchedule): void {\r\n    this.dialogData = examSchedule;\r\n\r\n    /* this.httpClient.put(this.API_URL + examSchedule.id, examSchedule).subscribe(data => {\r\n      this.dialogData = examSchedule;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deleteExamSchedule(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","import { ExamScheduleComponent } from './exam-schedule/exam-schedule.component';\nimport { LecturesComponent } from './lectures/lectures.component';\nimport { Page404Component } from './../authentication/page404/page404.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { LeaveRequestComponent } from './leave-request/leave-request.component';\nimport { SettingsComponent } from './settings/settings.component';\n\nconst routes: Routes = [\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n  },\n  {\n    path: 'lectures',\n    component: LecturesComponent,\n  },\n  {\n    path: 'leave-request',\n    component: LeaveRequestComponent,\n  },\n  {\n    path: 'exam-schedule',\n    component: ExamScheduleComponent,\n  },\n  {\n    path: 'settings',\n    component: SettingsComponent,\n  },\n  { path: '**', component: Page404Component },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TeacherRoutingModule {}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { LeaveRequestService } from './leave-request.service';\nimport { HttpClient } from '@angular/common/http';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { LeaveRequest } from './leave-request.model';\nimport { DataSource } from '@angular/cdk/collections';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\nimport { SelectionModel } from '@angular/cdk/collections';\n\n@Component({\n  selector: 'app-leave-request',\n  templateUrl: './leave-request.component.html',\n  styleUrls: ['./leave-request.component.sass'],\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: 'en-GB' }],\n})\nexport class LeaveRequestComponent implements OnInit {\n  displayedColumns = [\n    'select',\n    'img',\n    'rNo',\n    'name',\n    'fromDate',\n    'toDate',\n    'status',\n    'reason',\n    'actions',\n  ];\n  exampleDatabase: LeaveRequestService | null;\n  dataSource: ExampleDataSource | null;\n  selection = new SelectionModel<LeaveRequest>(true, []);\n  index: number;\n  id: number;\n  leaveRequest: LeaveRequest | null;\n  constructor(\n    public httpClient: HttpClient,\n    public leaveRequestService: LeaveRequestService,\n    private snackBar: MatSnackBar\n  ) {}\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild('filter', { static: true }) filter: ElementRef;\n\n  ngOnInit() {\n    this.loadData();\n  }\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.renderedData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selection.clear()\n      : this.dataSource.renderedData.forEach((row) =>\n          this.selection.select(row)\n        );\n  }\n  removeSelectedRows() {\n    const totalSelect = this.selection.selected.length;\n    this.selection.selected.forEach((item) => {\n      const index: number = this.dataSource.renderedData.findIndex(\n        (d) => d === item\n      );\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\n      this.exampleDatabase.dataChange.value.splice(index, 1);\n      this.refreshTable();\n      this.selection = new SelectionModel<LeaveRequest>(true, []);\n    });\n    this.showNotification(\n      'snackbar-danger',\n      totalSelect + ' Record Delete Successfully...!!!',\n      'bottom',\n      'center'\n    );\n  }\n\n  private refreshTable() {\n    this.paginator._changePageSize(this.paginator.pageSize);\n  }\n  public loadData() {\n    this.exampleDatabase = new LeaveRequestService(this.httpClient);\n    this.dataSource = new ExampleDataSource(\n      this.exampleDatabase,\n      this.paginator,\n      this.sort\n    );\n    fromEvent(this.filter.nativeElement, 'keyup').subscribe(() => {\n      if (!this.dataSource) {\n        return;\n      }\n      this.dataSource.filter = this.filter.nativeElement.value;\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this.snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName,\n    });\n  }\n}\nexport class ExampleDataSource extends DataSource<LeaveRequest> {\n  filterChange = new BehaviorSubject('');\n  get filter(): string {\n    return this.filterChange.value;\n  }\n  set filter(filter: string) {\n    this.filterChange.next(filter);\n  }\n  filteredData: LeaveRequest[] = [];\n  renderedData: LeaveRequest[] = [];\n  constructor(\n    public exampleDatabase: LeaveRequestService,\n    public paginator: MatPaginator,\n    public _sort: MatSort\n  ) {\n    super();\n    // Reset to the first page when the user changes the filter.\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\n  }\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<LeaveRequest[]> {\n    // Listen for any changes in the base data, sorting, filtering, or pagination\n    const displayDataChanges = [\n      this.exampleDatabase.dataChange,\n      this._sort.sortChange,\n      this.filterChange,\n      this.paginator.page,\n    ];\n    this.exampleDatabase.getAllLeaveRequest();\n    return merge(...displayDataChanges).pipe(\n      map(() => {\n        // Filter data\n        this.filteredData = this.exampleDatabase.data\n          .slice()\n          .filter((leaveRequest: LeaveRequest) => {\n            const searchStr = (\n              leaveRequest.rNo +\n              leaveRequest.name +\n              leaveRequest.fromDate +\n              leaveRequest.toDate +\n              leaveRequest.status +\n              leaveRequest.reason\n            ).toLowerCase();\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\n          });\n        // Sort filtered data\n        const sortedData = this.sortData(this.filteredData.slice());\n        // Grab the page's slice of the filtered sorted data.\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        this.renderedData = sortedData.splice(\n          startIndex,\n          this.paginator.pageSize\n        );\n        return this.renderedData;\n      })\n    );\n  }\n  disconnect() {}\n  /** Returns a sorted copy of the database data. */\n  sortData(data: LeaveRequest[]): LeaveRequest[] {\n    if (!this._sort.active || this._sort.direction === '') {\n      return data;\n    }\n    return data.sort((a, b) => {\n      let propertyA: number | string = '';\n      let propertyB: number | string = '';\n      switch (this._sort.active) {\n        case 'id':\n          [propertyA, propertyB] = [a.id, b.id];\n          break;\n        case 'rNo':\n          [propertyA, propertyB] = [a.rNo, b.rNo];\n          break;\n        case 'name':\n          [propertyA, propertyB] = [a.name, b.name];\n          break;\n        case 'fromDate':\n          [propertyA, propertyB] = [a.fromDate, b.fromDate];\n          break;\n        case 'toDate':\n          [propertyA, propertyB] = [a.toDate, b.toDate];\n          break;\n        case 'status':\n          [propertyA, propertyB] = [a.status, b.status];\n          break;\n      }\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n      return (\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\n      );\n    });\n  }\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n    <div class=\"block-header\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n          <ul class=\"breadcrumb breadcrumb-style \">\n            <li class=\"breadcrumb-item\">\n              <h4 class=\"page-title\">Leave Request</h4>\n            </li>\n            <li class=\"breadcrumb-item bcrumb-1\">\n              <a routerLink=\"/patient/dashboard\">\n                <i class=\"fas fa-home\"></i> Home</a>\n            </li>\n            <li class=\"breadcrumb-item active\">Leave Request</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"body\">\n            <div class=\"responsive_table\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ml-0\">\n                      <li class=\"dropdown\">\n                        <h2>\n                          <strong>Leave Request</strong></h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\n                          aria-label=\"Search box\">\n                      </li>\n                      <li>\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\n                            <mat-icon class=\"col-white\">delete</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\n                <!-- Checkbox Column -->\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n                <!-- ID Column -->\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"img\">\n                  <mat-header-cell mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-5'\"> Image\n                  </mat-header-cell>\n                  <mat-cell mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-5\"> <img\n                      [src]=\"row.img\" />\n                  </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"rNo\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"pl-3 tbl-col-width-per-8\">Roll No\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"pl-3 tbl-col-width-per-8\"> {{row.rNo}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"name\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Student Name</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.name}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"fromDate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>From Date</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.fromDate | date: 'MM/dd/yyyy' }}\n                  </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"toDate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>To Date</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.toDate | date: 'MM/dd/yyyy' }}\n                  </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"status\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Status</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.status}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"reason\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Reason\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap\"> {{row.reason}}</mat-cell>\n                </ng-container>\n                <!-- actions -->\n                <ng-container matColumnDef=\"actions\">\n                  <mat-header-cell *matHeaderCellDef class=\"pl-3 tbl-col-width-per-10\">Actions</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pl-3 tbl-col-width-per-10\">\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" matTooltip=\"Approve\"\n                      (click)=\"$event.stopPropagation()\">\n                      <mat-icon aria-label=\"Approve\" class=\"col-white\">check</mat-icon>\n                    </button>\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" matTooltip=\"Reject\"\n                      (click)=\"$event.stopPropagation()\">\n                      <mat-icon aria-label=\"Reject\" class=\"col-white\">clear</mat-icon>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n              </mat-table>\n              <!-- Loading spinner -->\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\n                No results\n              </div>\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\n              </mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, Inject } from '@angular/core';\nimport { LecturesService } from '../../lectures.service';\n@Component({\n  selector: 'app-delete',\n  templateUrl: './delete.component.html',\n  styleUrls: ['./delete.component.sass'],\n})\nexport class DeleteDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public lecturesService: LecturesService\n  ) {}\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  confirmDelete(): void {\n    this.lecturesService.deleteLectures(this.data.id);\n  }\n}\n","<div class=\"container\">\n  <h3 mat-dialog-title>Are you sure?</h3>\n  <div mat-dialog-content>\n    <ul class=\"clearfix\">\n      <li>\n        <p><span class=\"font-weight-bold\"> Subject Name: </span>{{data.sName}}</p>\n      </li>\n      <li>\n        <p><span class=\"font-weight-bold\"> Class: </span>{{ data.class }}</p>\n      </li>\n      <li>\n        <p>\n          <span class=\"font-weight-bold\">Date: </span>{{data.date | date: 'MM/dd/yyyy'}}\n        </p>\n      </li>\n    </ul>\n  </div>\n  <div mat-dialog-actions class=\"mb-1\">\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\n      Delete\n    </button>\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.sass']\n})\nexport class SettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n    <div class=\"block-header\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n          <ul class=\"breadcrumb breadcrumb-style \">\n            <li class=\"breadcrumb-item\">\n              <h4 class=\"page-title\">Settings</h4>\n            </li>\n            <li class=\"breadcrumb-item bcrumb-1\">\n              <a routerLink=\"/doctor/dashboard\">\n                <i class=\"fas fa-home\"></i> Home</a>\n            </li>\n            <li class=\"breadcrumb-item active\">Settings</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"card\">\n      <div class=\"header\">\n        <h2>Security Settings</h2>\n      </div>\n      <div class=\"body\">\n        <div class=\"example-container\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Username</mat-label>\n            <input matInput>\n          </mat-form-field>\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Current Password</mat-label>\n            <input matInput type=\"password\">\n          </mat-form-field>\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>New Password</mat-label>\n            <input matInput type=\"password\">\n          </mat-form-field>\n        </div>\n        <button mat-raised-button color=\"primary\">Save</button>\n      </div>\n    </div>\n    <div class=\"card\">\n      <div class=\"header\">\n        <h2>Account Settings</h2>\n      </div>\n      <div class=\"body\">\n        <div class=\"row clearfix\">\n          <div class=\"col-lg-6 col-md-12\">\n            <div class=\"form-group\">\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>First Name</mat-label>\n                <input matInput>\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"col-lg-6 col-md-12\">\n            <div class=\"form-group\">\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>Last Name</mat-label>\n                <input matInput>\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"col-lg-4 col-md-12\">\n            <div class=\"form-group\">\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>City</mat-label>\n                <input matInput>\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"col-lg-4 col-md-12\">\n            <div class=\"form-group\">\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>Email</mat-label>\n                <input matInput>\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"col-lg-4 col-md-12\">\n            <div class=\"form-group\">\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>Country</mat-label>\n                <input matInput>\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"col-md-12\">\n            <div class=\"form-group\">\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>Address</mat-label>\n                <textarea matInput></textarea>\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"col-md-12\">\n            <button mat-raised-button color=\"primary\">Save Changes</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { LecturesService } from './lectures.service';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { Lectures } from './lectures.model';\nimport { DataSource } from '@angular/cdk/collections';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FormDialogComponent } from './dialogs/form-dialog/form-dialog.component';\nimport { DeleteDialogComponent } from './dialogs/delete/delete.component';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { SelectionModel } from '@angular/cdk/collections';\n\n@Component({\n  selector: 'app-lectures',\n  templateUrl: './lectures.component.html',\n  styleUrls: ['./lectures.component.sass'],\n})\nexport class LecturesComponent implements OnInit {\n  displayedColumns = [\n    'select',\n    'sName',\n    'class',\n    'date',\n    'time',\n    'status',\n    'actions',\n  ];\n  exampleDatabase: LecturesService | null;\n  dataSource: ExampleDataSource | null;\n  selection = new SelectionModel<Lectures>(true, []);\n  id: number;\n  lectures: Lectures | null;\n  constructor(\n    public httpClient: HttpClient,\n    public dialog: MatDialog,\n    public lecturesService: LecturesService,\n    private snackBar: MatSnackBar\n  ) {}\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild('filter', { static: true }) filter: ElementRef;\n  @ViewChild(MatMenuTrigger)\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: '0px', y: '0px' };\n\n  ngOnInit() {\n    this.loadData();\n  }\n  refresh() {\n    this.loadData();\n  }\n  addNew() {\n    const dialogRef = this.dialog.open(FormDialogComponent, {\n      data: {\n        lectures: this.lectures,\n        action: 'add',\n      },\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        // After dialog is closed we're doing frontend updates\n        // For add we're just pushing a new row inside DataService\n        this.exampleDatabase.dataChange.value.unshift(\n          this.lecturesService.getDialogData()\n        );\n        this.refreshTable();\n        this.showNotification(\n          'snackbar-success',\n          'Add Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  editCall(row) {\n    this.id = row.id;\n    const dialogRef = this.dialog.open(FormDialogComponent, {\n      data: {\n        lectures: row,\n        action: 'edit',\n      },\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        // When using an edit things are little different, firstly we find record inside DataService by id\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          (x) => x.id === this.id\n        );\n        // Then you update that record using data from dialogData (values you enetered)\n        this.exampleDatabase.dataChange.value[\n          foundIndex\n        ] = this.lecturesService.getDialogData();\n        // And lastly refresh table\n        this.refreshTable();\n        this.showNotification(\n          'black',\n          'Edit Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  deleteItem(row) {\n    this.id = row.id;\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: row,\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          (x) => x.id === this.id\n        );\n        // for delete we use splice in order to remove single object from DataService\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\n        this.refreshTable();\n        this.showNotification(\n          'snackbar-danger',\n          'Delete Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  private refreshTable() {\n    this.paginator._changePageSize(this.paginator.pageSize);\n  }\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.renderedData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selection.clear()\n      : this.dataSource.renderedData.forEach((row) =>\n          this.selection.select(row)\n        );\n  }\n  removeSelectedRows() {\n    const totalSelect = this.selection.selected.length;\n    this.selection.selected.forEach((item) => {\n      const index: number = this.dataSource.renderedData.findIndex(\n        (d) => d === item\n      );\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\n      this.exampleDatabase.dataChange.value.splice(index, 1);\n      this.refreshTable();\n      this.selection = new SelectionModel<Lectures>(true, []);\n    });\n    this.showNotification(\n      'snackbar-danger',\n      totalSelect + ' Record Delete Successfully...!!!',\n      'bottom',\n      'center'\n    );\n  }\n  public loadData() {\n    this.exampleDatabase = new LecturesService(this.httpClient);\n    this.dataSource = new ExampleDataSource(\n      this.exampleDatabase,\n      this.paginator,\n      this.sort\n    );\n    fromEvent(this.filter.nativeElement, 'keyup').subscribe(() => {\n      if (!this.dataSource) {\n        return;\n      }\n      this.dataSource.filter = this.filter.nativeElement.value;\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this.snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName,\n    });\n  }\n  // context menu\n  onContextMenu(event: MouseEvent, item: Lectures) {\n    event.preventDefault();\n    this.contextMenuPosition.x = event.clientX + 'px';\n    this.contextMenuPosition.y = event.clientY + 'px';\n    this.contextMenu.menuData = { item: item };\n    this.contextMenu.menu.focusFirstItem('mouse');\n    this.contextMenu.openMenu();\n  }\n}\nexport class ExampleDataSource extends DataSource<Lectures> {\n  filterChange = new BehaviorSubject('');\n  get filter(): string {\n    return this.filterChange.value;\n  }\n  set filter(filter: string) {\n    this.filterChange.next(filter);\n  }\n  filteredData: Lectures[] = [];\n  renderedData: Lectures[] = [];\n  constructor(\n    public exampleDatabase: LecturesService,\n    public paginator: MatPaginator,\n    public _sort: MatSort\n  ) {\n    super();\n    // Reset to the first page when the user changes the filter.\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\n  }\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<Lectures[]> {\n    // Listen for any changes in the base data, sorting, filtering, or pagination\n    const displayDataChanges = [\n      this.exampleDatabase.dataChange,\n      this._sort.sortChange,\n      this.filterChange,\n      this.paginator.page,\n    ];\n    this.exampleDatabase.getAllLecturess();\n    return merge(...displayDataChanges).pipe(\n      map(() => {\n        // Filter data\n        this.filteredData = this.exampleDatabase.data\n          .slice()\n          .filter((lectures: Lectures) => {\n            const searchStr = (\n              lectures.sName +\n              lectures.class +\n              lectures.date +\n              lectures.time\n            ).toLowerCase();\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\n          });\n        // Sort filtered data\n        const sortedData = this.sortData(this.filteredData.slice());\n        // Grab the page's slice of the filtered sorted data.\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        this.renderedData = sortedData.splice(\n          startIndex,\n          this.paginator.pageSize\n        );\n        return this.renderedData;\n      })\n    );\n  }\n  disconnect() {}\n  /** Returns a sorted copy of the database data. */\n  sortData(data: Lectures[]): Lectures[] {\n    if (!this._sort.active || this._sort.direction === '') {\n      return data;\n    }\n    return data.sort((a, b) => {\n      let propertyA: number | string = '';\n      let propertyB: number | string = '';\n      switch (this._sort.active) {\n        case 'id':\n          [propertyA, propertyB] = [a.id, b.id];\n          break;\n        case 'sName':\n          [propertyA, propertyB] = [a.sName, b.sName];\n          break;\n        case 'class':\n          [propertyA, propertyB] = [a.class, b.class];\n          break;\n        case 'date':\n          [propertyA, propertyB] = [a.date, b.date];\n          break;\n        case 'time':\n          [propertyA, propertyB] = [a.time, b.time];\n          break;\n      }\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n      return (\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\n      );\n    });\n  }\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n    <div class=\"block-header\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n          <ul class=\"breadcrumb breadcrumb-style \">\n            <li class=\"breadcrumb-item\">\n              <h4 class=\"page-title\">All Lecturess</h4>\n            </li>\n            <li class=\"breadcrumb-item bcrumb-1\">\n              <a routerLink=\"/teacher/dashboard\">\n                <i class=\"fas fa-home\"></i> Home</a>\n            </li>\n            <li class=\"breadcrumb-item bcrumb-2\">\n              <a href=\"#\" onClick=\"return false;\">Lecturess</a>\n            </li>\n            <li class=\"breadcrumb-item active\">All</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"body\">\n            <div class=\"responsive_table\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ml-0\">\n                      <li class=\"dropdown\">\n                        <h2>\n                          <strong>Lecturess</strong></h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\n                          aria-label=\"Search box\">\n                      </li>\n                      <li>\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\n                            <mat-icon class=\"col-white\">delete\n                            </mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"icon-button-demo\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"icon-button-demo\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\n                <!-- Checkbox Column -->\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n                <!-- ID Column -->\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"sName\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Subject Name</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                    {{row.sName}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"class\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Class\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                    {{row.class}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"date\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                    {{row.date | date: 'MM/dd/yyyy'}}\n                  </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"time\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Time</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                    {{row.time}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"status\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Status</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                    {{row.status}}</mat-cell>\n                </ng-container>\n                <!-- actions -->\n                <ng-container matColumnDef=\"actions\">\n                  <mat-header-cell *matHeaderCellDef class=\"pr-0\">Actions</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"editCall(row)\">\n                      <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\n                    </button>\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"deleteItem(row)\">\n                      <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\n                  [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n              </mat-table>\n              <!-- Loading spinner -->\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <!-- context menu start -->\n              <div style=\"visibility: hidden; position: fixed\" [style.left]=\"contextMenuPosition.x\"\n                [style.top]=\"contextMenuPosition.y\" [matMenuTriggerFor]=\"contextMenu\">\n              </div>\n              <mat-menu #contextMenu=\"matMenu\">\n                <ng-template matMenuContent let-item=\"item\">\n                  <button mat-menu-item (click)=\"addNew()\">\n                    <mat-icon>add_box</mat-icon>\n                    <span>Add Record</span>\n                  </button>\n                  <button mat-menu-item (click)=\"editCall(item)\">\n                    <mat-icon>create</mat-icon>\n                    <span>Edit Record</span>\n                  </button>\n                  <button mat-menu-item (click)=\"deleteItem(item)\">\n                    <mat-icon>delete</mat-icon>\n                    <span>Delete Record</span>\n                  </button>\n                  <button mat-menu-item (click)=\"refresh()\">\n                    <mat-icon>refresh</mat-icon>\n                    <span>Refresh Record</span>\n                  </button>\n                  <button mat-menu-item disabled>\n                    <mat-icon>no_encryption</mat-icon>\n                    <span>Disable</span>\n                  </button>\n                  <button mat-menu-item [matMenuTriggerFor]=\"nestedmenu\">\n                    <mat-icon>list_alt</mat-icon>\n                    <span> Nested Menu</span>\n                  </button>\n                </ng-template>\n              </mat-menu>\n              <mat-menu #nestedmenu=\"matMenu\">\n                <button mat-menu-item>\n                  <mat-icon>mail_outline</mat-icon>\n                  <span>Item 1</span>\n                </button>\n                <button mat-menu-item>\n                  <mat-icon>call</mat-icon>\n                  <span>Item 2</span>\n                </button>\n                <button mat-menu-item>\n                  <mat-icon>chat</mat-icon>\n                  <span>Item 3</span>\n                </button>\n              </mat-menu>\n              <!-- context menu end -->\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\n                No results\n              </div>\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\n              </mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n"]}