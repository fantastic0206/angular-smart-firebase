{"version":3,"sources":["webpack:///src/app/plreport/plreport-routing.module.ts","webpack:///src/app/plreport/all-plreport/all-plreport.component.ts","webpack:///src/app/plreport/all-plreport/all-plreport.component.html","webpack:///src/app/plreport/all-plreport/dialogs/delete/delete.component.ts","webpack:///src/app/plreport/all-plreport/dialogs/delete/delete.component.html","webpack:///src/app/plreport/all-plreport/teachers.service.ts","webpack:///src/app/plreport/all-plreport/teachers.model.ts","webpack:///src/app/plreport/all-plreport/dialogs/form-dialog/form-dialog.component.ts","webpack:///src/app/plreport/all-plreport/dialogs/form-dialog/form-dialog.component.html","webpack:///src/app/plreport/plreport.module.ts"],"names":["routes","path","component","PlreportRoutingModule","forChild","imports","exports","$event","stopPropagation","selection","AllPlreportComponent","httpClient","dialog","teachersService","firestore","snackBar","authService","displayedColumns","contextMenuPosition","x","y","userRole","currentUserValue","loadData","chart1","chart2","isAdmin","barChartOptions1","series","name","data","chart","height","type","toolbar","show","foreColor","plotOptions","bar","dataLabels","position","enabled","formatter","val","offsetY","style","fontSize","colors","xaxis","categories","labels","axisBorder","axisTicks","crosshairs","fill","gradient","colorFrom","colorTo","stops","opacityFrom","opacityTo","tooltip","shade","shadeIntensity","gradientToColors","undefined","inverseColors","yaxis","barChartOptions2","dialogRef","open","teachers","action","afterClosed","subscribe","result","exampleDatabase","dataChange","value","unshift","getDialogData","refreshTable","showNotification","row","id","foundIndex","findIndex","splice","paginator","_changePageSize","pageSize","numSelected","selected","length","numRows","dataSource","renderedData","isAllSelected","clear","forEach","select","totalSelect","item","index","d","ExampleDataSource","sort","filter","nativeElement","colorName","text","placementFrom","placementAlign","duration","verticalPosition","horizontalPosition","panelClass","event","preventDefault","clientX","clientY","contextMenu","menuData","menu","focusFirstItem","openMenu","removeSelectedRows","selector","templateUrl","styleUrls","_sort","filterChange","filteredData","pageIndex","displayDataChanges","sortChange","page","getAllTeacherss","pipe","slice","searchStr","date","scriptType","scriptName","positionType","holdingPeriod","profitLoss","accountName","toLowerCase","indexOf","sortedData","sortData","startIndex","active","direction","a","b","propertyA","propertyB","valueA","isNaN","valueB","next","DeleteDialogComponent","docId","close","collection","doc","deleteTeachers","console","log","ref","where","get","ss","docs","confirmDelete","onNoClick","TeachersService","API_URL","isTblLoading","plreportData","dialogData","push","Teachers","getRandomID","Date","S4","Math","random","toString","substring","FormDialogComponent","fb","proForm","formControl","required","dialogTitle","createContactForm","hasError","group","add","then","res","e","addTeachers","getRawValue","update","confirmAdd","PlreportModule","forRoot","echarts","declarations","providers"],"mappings":"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","file":"plreport-plreport-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AllPlreportComponent } from './all-plreport/all-plreport.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AllPlreportComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PlreportRoutingModule { }\n","import { AuthService } from 'src/app/core/service/auth.service';\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { TeachersService } from './teachers.service';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { Teachers } from './teachers.model';\nimport { DataSource } from '@angular/cdk/collections';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FormDialogComponent } from './dialogs/form-dialog/form-dialog.component';\n// import { DeleteDialogComponent } from './dialogs/delete/delete.component';\nimport { DeleteDialogComponent } from './dialogs/delete/delete.component';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { AngularFirestore } from \"@angular/fire/firestore\";\n\nimport {\n  ChartComponent,\n  ApexAxisChartSeries,\n  ApexChart,\n  ApexXAxis,\n  ApexDataLabels,\n  ApexTooltip,\n  ApexYAxis,\n  ApexPlotOptions,\n  ApexStroke,\n  ApexLegend,\n  ApexFill,\n} from 'ng-apexcharts';\nexport type areaChartOptions = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  xaxis: ApexXAxis;\n  yaxis: ApexYAxis;\n  stroke: ApexStroke;\n  tooltip: ApexTooltip;\n  dataLabels: ApexDataLabels;\n  legend: ApexLegend;\n  colors: string[];\n};\n\nexport type barChartOptions1 = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  dataLabels: ApexDataLabels;\n  plotOptions: ApexPlotOptions;\n  yaxis: ApexYAxis;\n  xaxis: ApexXAxis;\n  fill: ApexFill;\n  colors: string[];\n};\n\nexport type barChartOptions2 = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  dataLabels: ApexDataLabels;\n  plotOptions: ApexPlotOptions;\n  yaxis: ApexYAxis;\n  xaxis: ApexXAxis;\n  fill: ApexFill;\n  colors: string[];\n};\n\n@Component({\n  selector: 'app-all-plreport',\n  templateUrl: './all-plreport.component.html',\n  styleUrls: ['./all-plreport.component.sass']\n})\nexport class AllPlreportComponent implements OnInit {\n  @ViewChild('chart') chart: ChartComponent;\n  public areaChartOptions: Partial<areaChartOptions>;\n  public barChartOptions1: Partial<barChartOptions1>;\n  public barChartOptions2: Partial<barChartOptions2>;\n\n  displayedColumns = [\n    'select',\n    'date',\n    'scriptType',\n    'scriptName',\n    'positionType',\n    'holdingPeriod',\n    'profitLoss',\n    'accountName',\n    'actions',\n  ];\n  exampleDatabase: TeachersService | null;\n  dataSource: ExampleDataSource | null;\n  selection = new SelectionModel<Teachers>(true, []);\n  id: number;\n  teachers: Teachers | null;\n\n  constructor(\n    public httpClient: HttpClient,\n    public dialog: MatDialog,\n    public teachersService: TeachersService,\n    public firestore: AngularFirestore,\n    private snackBar: MatSnackBar,\n    public authService: AuthService\n  ) { }\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild('filter', { static: true }) filter: ElementRef;\n  @ViewChild(MatMenuTrigger)\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: '0px', y: '0px' };\n\n  userRole = this.authService.currentUserValue['role'];\n\n  isAdmin(): boolean {\n    if(this.userRole == 'Admin') {\n      return true ;\n    }\n  }\n\n  ngOnInit() {\n    this.loadData();\n    this.chart1();\n    this.chart2();\n    this.isAdmin();\n  }\n\n  private chart1() {\n    this.barChartOptions1 = {\n      series: [\n        {\n          name: 'Investment',\n          data: [150000, 0, 0, 10000, 0],\n        },\n      ],\n      chart: {\n        height: 320,\n        type: 'bar',\n        toolbar: {\n          show: false,\n        },\n        foreColor: '#9aa0ac',\n      },\n      plotOptions: {\n        bar: {\n          dataLabels: {\n            position: 'top', // top, center, bottom\n          },\n        },\n      },\n      dataLabels: {\n        enabled: false,\n        formatter: function (val) {\n          return val + '%';\n        },\n        offsetY: -20,\n        style: {\n          fontSize: '12px',\n          colors: ['#9aa0ac'],\n        },\n      },\n\n      xaxis: {\n        categories: [\n          '1-Jan',\n          '2-Jan',\n          '3-Jan',\n          '4-Jan',\n          '5-Jan',\n        ],\n        position: 'bottom',\n        labels: {\n          offsetY: 0,\n        },\n        axisBorder: {\n          show: false,\n        },\n        axisTicks: {\n          show: false,\n        },\n        crosshairs: {\n          fill: {\n            type: 'gradient',\n            gradient: {\n              colorFrom: '#D8E3F0',\n              colorTo: '#BED1E6',\n              stops: [0, 100],\n              opacityFrom: 0.4,\n              opacityTo: 0.5,\n            },\n          },\n        },\n        tooltip: {\n          enabled: true,\n          offsetY: -35,\n        },\n      },\n      fill: {\n        type: 'gradient',\n        colors: ['#4F86F8', '#4F86F8'],\n        gradient: {\n          shade: 'light',\n          type: 'horizontal',\n          shadeIntensity: 0.25,\n          gradientToColors: undefined,\n          inverseColors: true,\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [50, 0, 100, 100],\n        },\n      },\n      yaxis: {\n        axisBorder: {\n          show: false,\n        },\n        axisTicks: {\n          show: false,\n        },\n        labels: {\n          show: true,\n          formatter: function (val) {\n            return val + '';\n          },\n        },\n      },\n    };\n  }\n\n  private chart2() {\n    this.barChartOptions2 = {\n      series: [\n        {\n          name: 'Investment',\n          data: [150000, 30000, 50000, 70000],\n        },\n      ],\n      chart: {\n        height: 320,\n        type: 'bar',\n        toolbar: {\n          show: false,\n        },\n        foreColor: '#9aa0ac',\n      },\n      plotOptions: {\n        bar: {\n          dataLabels: {\n            position: 'top', // top, center, bottom\n          },\n        },\n      },\n      dataLabels: {\n        enabled: false,\n        formatter: function (val) {\n          return val + '%';\n        },\n        offsetY: -20,\n        style: {\n          fontSize: '12px',\n          colors: ['#9aa0ac'],\n        },\n      },\n\n      xaxis: {\n        categories: [\n          'Gowtham',\n          'Divya',\n          'Besedin',\n          'Musthafa'\n        ],\n        position: 'bottom',\n        labels: {\n          offsetY: 0,\n        },\n        axisBorder: {\n          show: false,\n        },\n        axisTicks: {\n          show: false,\n        },\n        crosshairs: {\n          fill: {\n            type: 'gradient',\n            gradient: {\n              colorFrom: '#D8E3F0',\n              colorTo: '#BED1E6',\n              stops: [0, 100],\n              opacityFrom: 0.4,\n              opacityTo: 0.5,\n            },\n          },\n        },\n        tooltip: {\n          enabled: true,\n          offsetY: -35,\n        },\n      },\n      fill: {\n        type: 'gradient',\n        colors: ['#4F86F8', '#4F86F8'],\n        gradient: {\n          shade: 'light',\n          type: 'horizontal',\n          shadeIntensity: 0.25,\n          gradientToColors: undefined,\n          inverseColors: true,\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [50, 0, 100, 100],\n        },\n      },\n      yaxis: {\n        axisBorder: {\n          show: false,\n        },\n        axisTicks: {\n          show: false,\n        },\n        labels: {\n          show: true,\n          formatter: function (val) {\n            return val + '';\n          },\n        },\n      },\n    };\n  }\n\n\n  refresh() {\n    this.loadData();\n  }\n\n  addNew() {\n    const dialogRef = this.dialog.open(FormDialogComponent, {\n      data: {\n        teachers: this.teachers,\n        action: 'add',\n      },\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        // After dialog is closed we're doing frontend updates\n        // For add we're just pushing a new row inside DataServicex\n        this.exampleDatabase.dataChange.value.unshift(\n          this.teachersService.getDialogData()\n        );\n        this.refreshTable();\n        this.showNotification(\n          'snackbar-success',\n          'Add Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  editCall(row) {\n    this.id = row.id;\n    const dialogRef = this.dialog.open(FormDialogComponent, {\n      data: {\n        teachers: row,\n        action: 'edit',\n      },\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        // When using an edit things are little different, firstly we find record inside DataService by id\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          (x) => x.id === this.id\n        );\n        // Then you update that record using data from dialogData (values you enetered)\n        this.exampleDatabase.dataChange.value[\n          foundIndex\n        ] = this.teachersService.getDialogData();\n        // And lastly refresh table\n        this.refreshTable();\n        this.showNotification(\n          'black',\n          'Edit Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  deleteItem(row) {\n    this.id = row.id;\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: row,\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          (x) => x.id === this.id\n        );\n        // for delete we use splice in order to remove single object from DataService\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\n        this.refreshTable();\n        this.showNotification(\n          'snackbar-danger',\n          'Delete Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  private refreshTable() {\n    this.paginator._changePageSize(this.paginator.pageSize);\n  }\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.renderedData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selection.clear()\n      : this.dataSource.renderedData.forEach((row) =>\n          this.selection.select(row)\n        );\n  }\n  removeSelectedRows() {\n    const totalSelect = this.selection.selected.length;\n    this.selection.selected.forEach((item) => {\n      const index: number = this.dataSource.renderedData.findIndex(\n        (d) => d === item\n      );\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\n      this.exampleDatabase.dataChange.value.splice(index, 1);\n      this.refreshTable();\n      this.selection = new SelectionModel<Teachers>(true, []);\n    });\n    this.showNotification(\n      'snackbar-danger',\n      totalSelect + ' Record Delete Successfully...!!!',\n      'bottom',\n      'center'\n    );\n  }\n  public loadData() {\n    this.exampleDatabase = new TeachersService(this.httpClient, this.firestore);\n    this.dataSource = new ExampleDataSource(\n      this.exampleDatabase,\n      this.paginator,\n      this.sort\n    );\n    fromEvent(this.filter.nativeElement, 'keyup').subscribe(() => {\n      if (!this.dataSource) {\n        return;\n      }\n      this.dataSource.filter = this.filter.nativeElement.value;\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this.snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName,\n    });\n  }\n  // context menu\n  onContextMenu(event: MouseEvent, item: Teachers) {\n    event.preventDefault();\n    this.contextMenuPosition.x = event.clientX + 'px';\n    this.contextMenuPosition.y = event.clientY + 'px';\n    this.contextMenu.menuData = { item: item };\n    this.contextMenu.menu.focusFirstItem('mouse');\n    this.contextMenu.openMenu();\n  }\n}\nexport class ExampleDataSource extends DataSource<Teachers> {\n  filterChange = new BehaviorSubject('');\n  get filter(): string {\n    return this.filterChange.value;\n  }\n  set filter(filter: string) {\n    this.filterChange.next(filter);\n  }\n  filteredData: Teachers[] = [];\n  renderedData: Teachers[] = [];\n  constructor(\n    public exampleDatabase: TeachersService,\n    public paginator: MatPaginator,\n    public _sort: MatSort\n  ) {\n    super();\n    // Reset to the first page when the user changes the filter.\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\n  }\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<Teachers[]> {\n    // Listen for any changes in the base data, sorting, filtering, or pagination\n    const displayDataChanges = [\n      this.exampleDatabase.dataChange,\n      this._sort.sortChange,\n      this.filterChange,\n      this.paginator.page,\n    ];\n    this.exampleDatabase.getAllTeacherss();\n    return merge(...displayDataChanges).pipe(\n      map(() => {\n        // Filter data\n        this.filteredData = this.exampleDatabase.data\n          .slice()\n          .filter((teachers: Teachers) => {\n            const searchStr = (\n              teachers.date +\n              teachers.scriptType +\n              teachers.scriptName +\n              teachers.positionType +\n              teachers.holdingPeriod +\n              teachers.profitLoss +\n              teachers.accountName\n            ).toLowerCase();\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\n          });\n        // Sort filtered data\n        const sortedData = this.sortData(this.filteredData.slice());\n        // Grab the page's slice of the filtered sorted data.\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        this.renderedData = sortedData.splice(\n          startIndex,\n          this.paginator.pageSize\n        );\n        return this.renderedData;\n      })\n    );\n  }\n  disconnect() {}\n  /** Returns a sorted copy of the database data. */\n  sortData(data: Teachers[]): Teachers[] {\n    if (!this._sort.active || this._sort.direction === '') {\n      return data;\n    }\n    return data.sort((a, b) => {\n      let propertyA: number | string = '';\n      let propertyB: number | string = '';\n      switch (this._sort.active) {\n        case 'id':\n          [propertyA, propertyB] = [a.id, b.id];\n          break;\n        case 'date':\n          [propertyA, propertyB] = [a.date, b.date];\n          break;\n        case 'scriptType':\n          [propertyA, propertyB] = [a.scriptType, b.scriptType];\n          break;\n        case 'scriptName':\n          [propertyA, propertyB] = [a.scriptName, b.scriptName];\n          break;\n        case 'positionType':\n          [propertyA, propertyB] = [a.positionType, b.positionType];\n          break;\n        case 'holdingPeriod':\n          [propertyA, propertyB] = [a.holdingPeriod, b.holdingPeriod];\n          break;\n        case 'profitLoss':\n          [propertyA, propertyB] = [a.profitLoss, b.profitLoss];\n          break;\n        case 'accountName':\n          [propertyA, propertyB] = [a.accountName, b.accountName];\n          break;\n      }\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n      return (\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\n      );\n    });\n  }\n}\n","<section class=\"content\" style=\"margin-top: 10px\">\n  <div class=\"container-fluid\">\n    <div class=\"block-header\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n          <ul class=\"breadcrumb breadcrumb-style \">\n            <li class=\"breadcrumb-item\">\n              <h4 class=\"page-title\">P & L Report</h4>\n            </li>\n            <li class=\"breadcrumb-item bcrumb-1\">\n              <a routerLink=\"/admin/dashboard/main\">\n                <i class=\"fas fa-home\"></i></a\n              >\n            </li>\n            <a class=\"active\" style=\"color: #444444; padding: 3px 0;\">P & L Report</a>\n            <!-- <li class=\"breadcrumb-item active\">All</li> -->\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <mat-tab-group>\n          <mat-tab>\n            <ng-template mat-tab-label>\n              <i class=\"material-icons-two-tone pr-3\">list_alt</i>\n              Table View\n            </ng-template>\n            <div class=\"mt-5\">\n              <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n                  <div class=\"body\">\n                    <div class=\"table-responsive\">\n                      <div class=\"materialTableHeader\">\n                        <div class=\"row\">\n                          <div class=\"col-8\">\n                            <ul class=\"header-buttons-left ml-0\">\n                              <!-- <li class=\"dropdown\">\n                                <h2>\n                                  <strong>Search</strong></h2>\n                              </li> -->\n                              <li class=\"dropdown m-l-20\">\n                                <label for=\"search-input\"\n                                  ><i class=\"material-icons search-icon\"\n                                    >search</i\n                                  ></label\n                                >\n                                <input\n                                  placeholder=\"Search\"\n                                  type=\"text\"\n                                  #filter\n                                  class=\"browser-default search-field\"\n                                  aria-label=\"Search box\"\n                                />\n                              </li>\n                              <li>\n                                <div\n                                  class=\"icon-button-demo m-l-10\"\n                                  [hidden]=\"!selection.hasValue()\"\n                                >\n                                  <button\n                                    mat-mini-fab\n                                    color=\"warn\"\n                                    (click)=\"removeSelectedRows()\"\n                                  >\n                                    <mat-icon class=\"col-white\"\n                                      >delete\n                                    </mat-icon>\n                                  </button>\n                                </div>\n                              </li>\n                            </ul>\n                          </div>\n                          <div class=\"col-4\">\n                            <ul class=\"header-buttons\">\n                              <li *ngIf=\"isAdmin()\">\n                                <div class=\"icon-button-demo\">\n                                  <button mat-raised-button color=\"primary\" (click)=\"addNew()\">\n                                    <mat-icon class=\"col-white\" style=\"font-size: 16px; padding: 3px;\">add</mat-icon>Add\n                                  </button>\n                                </div>\n                              </li>\n                            </ul>\n                          </div>\n                        </div>\n                      </div>\n                      <mat-table\n                        #table\n                        [dataSource]=\"dataSource\"\n                        matSort\n                        class=\"mat-cell\"\n                      >\n                        <!-- Checkbox Column -->\n                        <ng-container matColumnDef=\"select\">\n                          <mat-header-cell\n                            *matHeaderCellDef\n                            [ngClass]=\"'tbl-col-width-per-6'\"\n                          >\n                            <mat-checkbox\n                              (change)=\"$event ? masterToggle() : null\"\n                              [checked]=\"selection.hasValue() && isAllSelected()\"\n                              [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                              [ngClass]=\"'tbl-checkbox'\"\n                            >\n                            </mat-checkbox>\n                          </mat-header-cell>\n                          <mat-cell\n                            *matCellDef=\"let row\"\n                            [ngClass]=\"'tbl-col-width-per-6'\"\n                          >\n                            <mat-checkbox\n                              (click)=\"$event.stopPropagation()\"\n                              (change)=\"$event ? selection.toggle(row) : null\"\n                              [checked]=\"selection.isSelected(row)\"\n                              [ngClass]=\"'tbl-checkbox'\"\n                            >\n                            </mat-checkbox>\n                          </mat-cell>\n                        </ng-container>\n                        <!-- ID Column -->\n                        <ng-container matColumnDef=\"id\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                            >Id\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\n                        </ng-container>\n                        <!-- <ng-container matColumnDef=\"sno\">\n                          <mat-header-cell\n                            mat-header-cell\n                            *matHeaderCellDef\n                            [ngClass]=\"'tbl-col-width-per-5'\"\n                          >\n                            S.NO\n                          </mat-header-cell>\n                          <mat-cell\n                            mat-cell\n                            *matCellDef=\"let row\"\n                            (contextmenu)=\"onContextMenu($event, row)\"\n                            class=\"table-img tbl-col-width-per-5\">\n                            {{row.sno}}\n                          </mat-cell>\n                        </ng-container> -->\n                        <ng-container matColumnDef=\"date\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                            >Date\n                          </mat-header-cell>\n                          <mat-cell\n                            *matCellDef=\"let row\"\n                            (contextmenu)=\"onContextMenu($event, row)\"\n                          >\n                            {{row.date | date: 'yyyy-MM-dd'}}\n                          </mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"scriptType\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                            >Script Type\n                          </mat-header-cell>\n                          <mat-cell\n                            *matCellDef=\"let row\"\n                            (contextmenu)=\"onContextMenu($event, row)\"\n                          >\n                            {{row.scriptType}}</mat-cell\n                          >\n                        </ng-container>\n                        <ng-container matColumnDef=\"scriptName\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                            >Script Name\n                          </mat-header-cell>\n                          <mat-cell\n                            *matCellDef=\"let row\"\n                            (contextmenu)=\"onContextMenu($event, row)\"\n                          >\n                            {{row.scriptName}}\n                          </mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"positionType\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                            >Position Type\n                          </mat-header-cell>\n                          <mat-cell\n                            *matCellDef=\"let row\"\n                            (contextmenu)=\"onContextMenu($event, row)\"\n                          >\n                            {{row.positionType}}\n                          </mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"holdingPeriod\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                            >Holding Period\n                          </mat-header-cell>\n                          <mat-cell\n                            *matCellDef=\"let row\"\n                            (contextmenu)=\"onContextMenu($event, row)\"\n                          >\n                            {{row.holdingPeriod}} days\n                          </mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"profitLoss\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                            >Profit/Loss\n                          </mat-header-cell>\n                          <mat-cell\n                            *matCellDef=\"let row\"\n                            (contextmenu)=\"onContextMenu($event, row)\"\n                          >\n                            {{row.profitLoss}}\n                          </mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"accountName\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                            >Account Name\n                          </mat-header-cell>\n                          <mat-cell\n                            *matCellDef=\"let row\"\n                            (contextmenu)=\"onContextMenu($event, row)\"\n                          >\n                            {{row.accountName}}</mat-cell\n                          >\n                        </ng-container>\n                        <!-- actions -->\n                        <ng-container matColumnDef=\"actions\">\n                          <mat-header-cell class=\"pr-0\" *matHeaderCellDef><a *ngIf=\"isAdmin()\">Actions</a>\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\n                            <button *ngIf=\"isAdmin()\" mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\n                              (click)=\"editCall(row)\">\n                              <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\n                            </button>\n                            <button *ngIf=\"isAdmin()\" mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\n                              (click)=\"deleteItem(row)\">\n                              <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\n                            </button>\n                          </mat-cell>\n                        </ng-container>\n                        <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                        </mat-header-row>\n                        <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\n                        <mat-row\n                          *matRowDef=\"let row; columns: displayedColumns;\"\n                          [style.cursor]=\"'pointer'\"\n                          matRipple\n                        >\n                        </mat-row>\n                      </mat-table>\n                      <!-- Loading spinner -->\n                      <div\n                        *ngIf=\"exampleDatabase.isTblLoading\"\n                        class=\"tbl-spinner\"\n                      >\n                        <mat-progress-spinner\n                          color=\"primary\"\n                          [diameter]=\"40\"\n                          mode=\"indeterminate\"\n                        >\n                        </mat-progress-spinner>\n                      </div>\n                      <!-- context menu start -->\n                      <div\n                        style=\"visibility: hidden; position: fixed\"\n                        [style.left]=\"contextMenuPosition.x\"\n                        [style.top]=\"contextMenuPosition.y\"\n                        [matMenuTriggerFor]=\"contextMenu\"\n                      ></div>\n                      <mat-menu #contextMenu=\"matMenu\">\n                        <ng-template matMenuContent let-item=\"item\">\n                          <button mat-menu-item (click)=\"addNew()\">\n                            <mat-icon>add_box</mat-icon>\n                            <span>Add Record</span>\n                          </button>\n                          <button mat-menu-item (click)=\"editCall(item)\">\n                            <mat-icon>create</mat-icon>\n                            <span>Edit Record</span>\n                          </button>\n                          <button mat-menu-item (click)=\"deleteItem(item)\">\n                            <mat-icon>delete</mat-icon>\n                            <span>Delete Record</span>\n                          </button>\n                          <button mat-menu-item (click)=\"refresh()\">\n                            <mat-icon>refresh</mat-icon>\n                            <span>Refresh Record</span>\n                          </button>\n                          <button mat-menu-item disabled>\n                            <mat-icon>no_encryption</mat-icon>\n                            <span>Disable</span>\n                          </button>\n                          <button\n                            mat-menu-item\n                            [matMenuTriggerFor]=\"nestedmenu\"\n                          >\n                            <mat-icon>list_alt</mat-icon>\n                            <span> Nested Menu</span>\n                          </button>\n                        </ng-template>\n                      </mat-menu>\n                      <mat-menu #nestedmenu=\"matMenu\">\n                        <button mat-menu-item>\n                          <mat-icon>mail_outline</mat-icon>\n                          <span>Item 1</span>\n                        </button>\n                        <button mat-menu-item>\n                          <mat-icon>call</mat-icon>\n                          <span>Item 2</span>\n                        </button>\n                        <button mat-menu-item>\n                          <mat-icon>chat</mat-icon>\n                          <span>Item 3</span>\n                        </button>\n                      </mat-menu>\n                      <!-- context menu end -->\n                      <div\n                        *ngIf=\"!exampleDatabase.isTblLoading\"\n                        class=\"no-results\"\n                        [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\"\n                      >\n                        No results\n                      </div>\n                      <mat-paginator\n                        #paginator\n                        [length]=\"dataSource.filteredData.length\"\n                        [pageIndex]=\"0\"\n                        [pageSize]=\"10\"\n                        [pageSizeOptions]=\"[5, 10, 25, 100]\"\n                      >\n                      </mat-paginator>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </mat-tab>\n          <mat-tab>\n            <ng-template mat-tab-label>\n              <i class=\"material-icons-two-tone pr-3\">grid_on</i>\n              Chart View\n            </ng-template>\n            <div class=\"row\">\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                <div class=\"card\">\n                  <div class=\"header\">\n                    <h2>Day Wise Report</h2>\n                    <!-- <button mat-button [matMenuTriggerFor]=\"menu\" class=\"header-dropdown\">\n                      <mat-icon>more_vert</mat-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                      <button mat-menu-item>Action</button>\n                      <button mat-menu-item>Another action</button>\n                      <button mat-menu-item>Something else here</button>\n                    </mat-menu> -->\n                  </div>\n                  <div class=\"body\">\n                    <apx-chart [series]=\"barChartOptions1.series\" [chart]=\"barChartOptions1.chart\"\n                      [dataLabels]=\"barChartOptions1.dataLabels\" [plotOptions]=\"barChartOptions1.plotOptions\"\n                      [yaxis]=\"barChartOptions1.yaxis\" [xaxis]=\"barChartOptions1.xaxis\" [fill]=\"barChartOptions1.fill\"></apx-chart>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                <div class=\"card\">\n                  <div class=\"header\">\n                    <h2>Account Wise Report</h2>\n                    <!-- <button mat-button [matMenuTriggerFor]=\"menu\" class=\"header-dropdown\">\n                      <mat-icon>more_vert</mat-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                      <button mat-menu-item>Action</button>\n                      <button mat-menu-item>Another action</button>\n                      <button mat-menu-item>Something else here</button>\n                    </mat-menu> -->\n                  </div>\n                  <div class=\"body\">\n                    <apx-chart [series]=\"barChartOptions2.series\" [chart]=\"barChartOptions2.chart\"\n                      [dataLabels]=\"barChartOptions2.dataLabels\" [plotOptions]=\"barChartOptions2.plotOptions\"\n                      [yaxis]=\"barChartOptions2.yaxis\" [xaxis]=\"barChartOptions2.xaxis\" [fill]=\"barChartOptions2.fill\"></apx-chart>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </mat-tab>\n        </mat-tab-group>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { TeachersService } from '../../teachers.service';\nimport { AngularFirestore } from \"@angular/fire/firestore\";\n\n@Component({\n  selector: 'app-delete',\n  templateUrl: './delete.component.html',\n  styleUrls: ['./delete.component.sass']\n})\nexport class DeleteDialogComponent implements OnInit {\n  docId: string = \"\";\n\n  constructor(\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public teachersService: TeachersService,\n    private firestore: AngularFirestore\n  ) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  confirmDelete(): void {\n    this.firestore.collection('plreport').doc(this.docId).delete();\n    this.teachersService.deleteTeachers(this.data.id);\n  }\n\n  ngOnInit(): void {\n    console.log(this.data.id);\n    this.firestore\n      .collection(\"plreport\", (ref) =>\n        ref\n          .where(\"accountName\", \"==\", this.data.accountName)\n          .where(\"scriptType\", \"==\", this.data.scriptType)\n          .where(\"date\", \"==\", this.data.date)\n          .where(\"scriptName\", \"==\", this.data.scriptName)\n          .where(\"positionType\", \"==\", this.data.positionType)\n          .where(\"holdingPeriod\", \"==\", this.data.holdingPeriod)\n          .where(\"profitLoss\", \"==\", this.data.profitLoss)\n          .where(\"id\", \"==\", this.data.id)\n      )\n      .get()\n      .subscribe((ss) => {\n        ss.docs.forEach((doc) => {\n          this.docId = doc.id;\n        });\n      });\n  }\n\n}\n","<div class=\"container\">\n  <h3 mat-dialog-title>Are you sure?</h3>\n  <div mat-dialog-content>\n    <ul class=\"clearfix\">\n      <li>\n        <p><span class=\"font-weight-bold\"> Script Name: </span>{{data.scriptName}}</p>\n      </li>\n      <li>\n        <p><span class=\"font-weight-bold\"> Account Name: </span>{{ data.accountName }}</p>\n      </li>\n    </ul>\n  </div>\n  <div mat-dialog-actions class=\"mb-1\">\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\n      Delete\n    </button>\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Teachers } from './teachers.model';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { AngularFirestore } from \"@angular/fire/firestore\";\r\n@Injectable()\r\nexport class TeachersService {\r\n  private readonly API_URL = 'assets/data/teachers.json';\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<Teachers[]> = new BehaviorSubject<Teachers[]>([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  plreportData: any[] = [];\r\n  constructor(private httpClient: HttpClient, private firestore: AngularFirestore) {}\r\n  get data(): Teachers[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllTeacherss(): void {\r\n    this.firestore\r\n    .collection(\"plreport\")\r\n    .get()\r\n    .subscribe((ss) => {\r\n      ss.docs.forEach((doc) => {\r\n        this.plreportData.push(doc.data());\r\n        console.log(this.plreportData);\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(this.plreportData);\r\n      });\r\n    });\r\n    // this.httpClient.get<Teachers[]>(this.API_URL).subscribe(\r\n    //   (data) => {\r\n    //     this.isTblLoading = false;\r\n    //     this.dataChange.next(data);\r\n    //   },\r\n    //   (error: HttpErrorResponse) => {\r\n    //     this.isTblLoading = false;\r\n    //     console.log(error.name + ' ' + error.message);\r\n    //   }\r\n    // );\r\n  }\r\n  addTeachers(teachers: Teachers): void {\r\n    this.dialogData = teachers;\r\n\r\n    /*  this.httpClient.post(this.API_URL, teachers).subscribe(data => {\r\n      this.dialogData = teachers;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updateTeachers(teachers: Teachers): void {\r\n    this.dialogData = teachers;\r\n\r\n    /* this.httpClient.put(this.API_URL + teachers.id, teachers).subscribe(data => {\r\n      this.dialogData = teachers;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deleteTeachers(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","import { formatDate } from '@angular/common';\r\nexport class Teachers {\r\n  id: number;\r\n  date: string;\r\n  scriptType: string;\r\n  scriptName: string;\r\n  positionType: string;\r\n  holdingPeriod: string;\r\n  profitLoss: string;\r\n  accountName: string;\r\n  constructor(teachers) {\r\n    {\r\n      this.id = teachers.id || this.getRandomID();\r\n      this.date = formatDate(teachers.date ? teachers.date : new Date(), \"yyyy-MM-dd\", \"en\") || formatDate(new Date(), 'yyyy-MM-dd', 'en');\r\n      this.scriptType = teachers.scriptType || '';\r\n      this.scriptName = teachers.scriptName || '';\r\n      // this.date = formatDate(new Date(), 'yyyy-MM-dd', 'en') || '';\r\n      this.positionType = teachers.positionType || '';\r\n      this.holdingPeriod = teachers.holdingPeriod || '';\r\n      this.profitLoss = teachers.profitLoss || '';\r\n      this.accountName = teachers.accountName || '';\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { TeachersService } from '../../teachers.service';\nimport {\n  FormControl,\n  Validators,\n  FormGroup,\n  FormBuilder,\n} from '@angular/forms';\nimport { Teachers } from '../../teachers.model';\nimport { formatDate } from '@angular/common';\nimport { AngularFirestore } from \"@angular/fire/firestore\";\n\n\n@Component({\n  selector: 'app-form-dialog',\n  templateUrl: './form-dialog.component.html',\n  styleUrls: ['./form-dialog.component.sass']\n})\nexport class FormDialogComponent implements OnInit {\n  action: string;\n  dialogTitle: string;\n  teachers: Teachers;\n  docId: string = \"\";\n\n  proForm = new FormGroup({\n    date: new FormControl(\"date\"),\n    scriptType: new FormControl(\"scriptType\"),\n    scriptName: new FormControl(\"scriptName\"),\n    positionType: new FormControl(\"positionType\"),\n    holdingPeriod: new FormControl(\"holdingPeriod\"),\n    profitLoss: new FormControl(\"profitLoss\"),\n    accountName: new FormControl(\"accountName\"),\n  });\n\n  constructor(\n    public dialogRef: MatDialogRef<FormDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public teachersService: TeachersService,\n    private fb: FormBuilder,\n    private firestore: AngularFirestore\n  ) {\n    // Set the defaults\n    this.action = data.action;\n    if (this.action === 'edit') {\n      this.dialogTitle = data.teachers.scriptName;\n      this.teachers = data.teachers;\n      this.firestore\n        .collection(\"plreport\", (ref) =>\n          ref\n            .where(\"scriptType\", \"==\", data.teachers.scriptType)\n            .where(\"scriptName\", \"==\", data.teachers.scriptName)\n            .where(\"date\", \"==\", data.teachers.date)\n            .where(\"positionType\", \"==\", data.teachers.positionType)\n            .where(\"holdingPeriod\", \"==\", data.teachers.holdingPeriod)\n            .where(\"profitLoss\", \"==\", data.teachers.profitLoss)\n            .where(\"accountName\", \"==\", data.teachers.accountName)\n        )\n        .get()\n        .subscribe((ss) => {\n          ss.docs.forEach((doc) => {\n            this.docId = doc.id;\n          });\n        });\n    } else {\n      this.dialogTitle = 'New P&LReport';\n      this.teachers = new Teachers({});\n    }\n    this.proForm = this.createContactForm();\n  }\n  formControl = new FormControl('', [\n    Validators.required,\n    // Validators.email,\n  ]);\n  getErrorMessage() {\n    return this.formControl.hasError('required')\n      ? 'Required field'\n      : this.formControl.hasError('email')\n      ? 'Not a valid email'\n      : '';\n  }\n  createContactForm(): FormGroup {\n    return this.fb.group({\n      id: [this.teachers.id],\n      // email: [\n      //   this.teachers.email,\n      //   [Validators.required, Validators.email, Validators.minLength(5)],\n      // ],\n      date: [this.teachers.date],\n      scriptType: [this.teachers.scriptType],\n      scriptName: [this.teachers.scriptName],\n      positionType: [this.teachers.positionType],\n      holdingPeriod: [this.teachers.holdingPeriod],\n      profitLoss: [this.teachers.profitLoss],\n      accountName: [this.teachers.accountName],\n    });\n  }\n  submit() {\n    // emppty stuff\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  public confirmAdd(): void {\n    // console.log(this.proForm.value.date);\n    if (this.action === \"add\") {\n      this.firestore\n        .collection(\"plreport\")\n        .add({\n          id: this.teachers.id,\n          date: formatDate(this.proForm.value.date, \"yyyy-MM-dd\", \"en\"),\n          accountName: this.proForm.value.accountName,\n          scriptType: this.proForm.value.scriptType,\n          scriptName: this.proForm.value.scriptName,\n          positionType: this.proForm.value.positionType,\n          holdingPeriod: this.proForm.value.holdingPeriod,\n          profitLoss: this.proForm.value.profitLoss,\n        })\n        .then((res) => {\n          console.log(res);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n      this.teachersService.addTeachers(this.proForm.getRawValue());\n    } else if (this.action === \"edit\") {\n      this.firestore\n        .collection(\"plreport\")\n        .doc(this.docId)\n        .update({\n          id: this.teachers.id,\n          date: formatDate(this.proForm.value.date, \"yyyy-MM-dd\", \"en\"),\n          accountName: this.proForm.value.accountName,\n          scriptType: this.proForm.value.scriptType,\n          scriptName: this.proForm.value.scriptName,\n          positionType: this.proForm.value.positionType,\n          holdingPeriod: this.proForm.value.holdingPeriod,\n          profitLoss: this.proForm.value.profitLoss,\n        });\n      this.teachersService.addTeachers(this.proForm.getRawValue());\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"addContainer\">\n  <div class=\"modalHeader\">\n    <div class=\"editRowModal\">\n      <div class=\"modalHeader clearfix\">\n        <!-- <img [src]='teachers.img' alt=\"avatar\"> -->\n        <div class=\"modal-about\">\n          <div class=\"font-weight-bold p-t-5 font-17\">\n            {{dialogTitle}}</div>\n        </div>\n      </div>\n    </div>\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n  <div mat-dialog-content>\n    <form class=\"register-form m-4\" [formGroup]=\"proForm\" (ngSubmit)=\"submit\">\n      <div class=\"row\">\n        <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>S.NO</mat-label>\n            <input matInput formControlName=\"sno\" required>\n            <mat-icon matSuffix>note</mat-icon>\n            <mat-error *ngIf=\"proForm.get('sno')\">\n              sno is required\n            </mat-error>\n          </mat-form-field>\n        </div> -->\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Date</mat-label>\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"date\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n            <mat-error *ngIf=\"proForm.get('date')\">\n              Please select date\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Script Type</mat-label>\n            <mat-select formControlName=\"scriptType\" required>\n              <mat-option [value]=\"'Holdings'\">\n                Holdings\n              </mat-option>\n              <mat-option [value]=\"'Futures'\">\n                Futures\n              </mat-option>\n              <mat-option [value]=\"'Options'\">\n                Options\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"proForm.get('status')\">\n              Script Type is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Script Name</mat-label>\n            <mat-select formControlName=\"scriptName\" required>\n              <mat-option [value]=\"'IGL'\">\n                IGL\n              </mat-option>\n              <mat-option [value]=\"'LGBBRPSLTD'\">\n                LGBBROSLTD\n              </mat-option>\n              <mat-option [value]=\"'Options'\">\n                Options\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"proForm.get('scriptName')\">\n              Script Name is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Position Type</mat-label>\n            <mat-select formControlName=\"positionType\" required>\n              <mat-option [value]=\"'Buy'\">\n                Buy\n              </mat-option>\n              <mat-option [value]=\"'Sell'\">\n                Sell\n              </mat-option>\n              <mat-option [value]=\"'Long'\">\n                Long\n              </mat-option>\n              <mat-option [value]=\"'Short'\">\n                Short\n              </mat-option>\n              <mat-option [value]=\"'Call'\">\n                Call\n              </mat-option>\n              <mat-option [value]=\"'Put'\">\n                Put\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"proForm.get('positionType')\">\n              Position Type is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Holding Period</mat-label>\n            <input matInput formControlName=\"holdingPeriod\" required>\n            <mat-icon matSuffix>note</mat-icon>\n            <mat-error *ngIf=\"proForm.get('holdingPeriod')\">\n              Holding Period is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Profit/Loss</mat-label>\n            <input matInput formControlName=\"profitLoss\" required>\n            <mat-icon matSuffix>note</mat-icon>\n            <mat-error *ngIf=\"proForm.get('profitLoss')\">\n              Profit/Loss is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Account Name</mat-label>\n            <input matInput formControlName=\"accountName\" required>\n            <mat-icon matSuffix>face</mat-icon>\n            <mat-error *ngIf=\"proForm.get('accountName')\">\n              Account Name is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n          <div class=\"example-button-row\">\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!proForm.valid\" [mat-dialog-close]=\"1\"\n              (click)=\"confirmAdd()\">Save</button>\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { PlreportRoutingModule } from \"./plreport-routing.module\";\nimport { AllPlreportComponent } from \"./all-plreport/all-plreport.component\";\nimport { DeleteDialogComponent } from \"./all-plreport/dialogs/delete/delete.component\";\nimport { FormDialogComponent } from \"./all-plreport/dialogs/form-dialog/form-dialog.component\";\n\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MaterialFileInputModule } from \"ngx-material-file-input\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { MatTabsModule } from \"@angular/material/tabs\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { TeachersService } from \"./all-plreport/teachers.service\";\n\nimport { NgxEchartsModule } from 'ngx-echarts';\nimport { NgApexchartsModule } from 'ng-apexcharts';\n\n@NgModule({\n  declarations: [\n    AllPlreportComponent,\n    DeleteDialogComponent,\n    FormDialogComponent,\n  ],\n  imports: [\n    CommonModule,\n    PlreportRoutingModule,\n\n    FormsModule,\n    ReactiveFormsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDialogModule,\n    MatSortModule,\n    MatToolbarModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatCheckboxModule,\n    MatTabsModule,\n    MaterialFileInputModule,\n    MatMenuModule,\n    MatProgressSpinnerModule,\n\n    NgxEchartsModule.forRoot({\n      echarts: () => import('echarts'),\n    }),\n    NgApexchartsModule,\n  ],\n  providers: [TeachersService],\n})\nexport class PlreportModule {}\n"]}