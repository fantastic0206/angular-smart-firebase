{"version":3,"sources":["./src/app/usermanagement/usermanagement.component.ts","./src/app/usermanagement/usermanagement.component.html","./src/app/usermanagement/teachers.model.ts","./src/app/usermanagement/teachers.service.ts","./src/app/usermanagement/usermanagement.module.ts","./src/app/usermanagement/usermanagement-routing.module.ts","./src/app/usermanagement/dialogs/form-dialog/form-dialog.component.ts","./src/app/usermanagement/dialogs/form-dialog/form-dialog.component.html","./src/app/usermanagement/dialogs/delete/delete.component.ts","./src/app/usermanagement/dialogs/delete/delete.component.html"],"names":[],"mappings":"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","file":"usermanagement-usermanagement-module-es2015.js","sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { TeachersService } from './teachers.service';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { Teachers } from './teachers.model';\nimport { DataSource } from '@angular/cdk/collections';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FormDialogComponent } from './dialogs/form-dialog/form-dialog.component';\nimport { DeleteDialogComponent } from './dialogs/delete/delete.component';\n// import { MatMenuTrigger } from '@angular/material/menu';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { AngularFirestore } from \"@angular/fire/firestore\";\nimport { AuthService } from 'src/app/core/service/auth.service';\n\n@Component({\n  selector: 'app-usermanagement',\n  templateUrl: './usermanagement.component.html',\n  styleUrls: ['./usermanagement.component.sass']\n})\nexport class UsermanagementComponent implements OnInit {\n    displayedColumns = [\n      'select',\n      'date',\n      'fullname',\n      'username',\n      'password',\n      'uniqueID',\n      'status',\n      'role',\n      'actions',\n    ];\n    exampleDatabase: TeachersService | null;\n    dataSource: ExampleDataSource | null;\n    selection = new SelectionModel<Teachers>(true, []);\n    id: number;\n    teachers: Teachers | null;\n\n  constructor(\n    // private fb: FormBuilder,\n    public httpClient: HttpClient,\n    public dialog: MatDialog,\n    public teachersService: TeachersService,\n    private snackBar: MatSnackBar,\n    public firestore: AngularFirestore,\n    public authService: AuthService\n  ) { }\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild('filter', { static: true }) filter: ElementRef;\n  // @ViewChild(MatMenuTrigger)\n  // contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: '0px', y: '0px' };\n\n  userRole = this.authService.currentUserValue['role'];\n\n  isAdmin(): boolean {\n    if(this.userRole == 'Admin') {\n      return true ;\n    }\n  }\n\n  onSubmit() {\n    // console.log('Form Value', this.proForm.value);\n  }\n\n  ngOnInit(): void {\n    this.loadData();\n    this.isAdmin();\n  }\n  addNew() {\n    const dialogRef = this.dialog.open(FormDialogComponent, {\n      data: {\n        teachers: this.teachers,\n        action: 'add',\n      },\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        // After dialog is closed we're doing frontend updates\n        // For add we're just pushing a new row inside DataServicex\n        this.exampleDatabase.dataChange.value.unshift(\n          this.teachersService.getDialogData()\n        );\n        this.refreshTable();\n        this.showNotification(\n          'snackbar-success',\n          'Add Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  editCall(row) {\n    this.id = row.id;\n    const dialogRef = this.dialog.open(FormDialogComponent, {\n      data: {\n        teachers: row,\n        action: 'edit',\n      },\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        // When using an edit things are little different, firstly we find record inside DataService by id\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          (x) => x.id === this.id\n        );\n        // Then you update that record using data from dialogData (values you enetered)\n        this.exampleDatabase.dataChange.value[\n          foundIndex\n        ] = this.teachersService.getDialogData();\n        // And lastly refresh table\n        this.refreshTable();\n        this.showNotification(\n          'black',\n          'Edit Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  deleteItem(row) {\n    this.id = row.id;\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: row,\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          (x) => x.id === this.id\n        );\n        // for delete we use splice in order to remove single object from DataService\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\n        this.refreshTable();\n        this.showNotification(\n          'snackbar-danger',\n          'Delete Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  private refreshTable() {\n    this.paginator._changePageSize(this.paginator.pageSize);\n  }\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.renderedData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selection.clear()\n      : this.dataSource.renderedData.forEach((row) =>\n          this.selection.select(row)\n        );\n  }\n  removeSelectedRows() {\n    const totalSelect = this.selection.selected.length;\n    this.selection.selected.forEach((item) => {\n      const index: number = this.dataSource.renderedData.findIndex(\n        (d) => d === item\n      );\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\n      this.exampleDatabase.dataChange.value.splice(index, 1);\n      this.refreshTable();\n      this.selection = new SelectionModel<Teachers>(true, []);\n    });\n    this.showNotification(\n      'snackbar-danger',\n      totalSelect + ' Record Delete Successfully...!!!',\n      'bottom',\n      'center'\n    );\n  }\n  public loadData() {\n    this.exampleDatabase = new TeachersService(this.httpClient, this.firestore);\n    console.log(\"exampleDatabase\", this.exampleDatabase);\n    this.dataSource = new ExampleDataSource(\n      this.exampleDatabase,\n      this.paginator,\n      this.sort\n    );\n    console.log(\"dataSource\", this.dataSource);\n    fromEvent(this.filter.nativeElement, 'keyup').subscribe(() => {\n      if (!this.dataSource) {\n        return;\n      }\n      this.dataSource.filter = this.filter.nativeElement.value;\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this.snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName,\n    });\n  }\n  // context menu\n  onContextMenu(event: MouseEvent, item: Teachers) {\n    event.preventDefault();\n    this.contextMenuPosition.x = event.clientX + 'px';\n    this.contextMenuPosition.y = event.clientY + 'px';\n    // this.contextMenu.menuData = { item: item };\n    // this.contextMenu.menu.focusFirstItem('mouse');\n    // this.contextMenu.openMenu();\n  }\n}\nexport class ExampleDataSource extends DataSource<Teachers> {\n  filterChange = new BehaviorSubject('');\n  get filter(): string {\n    return this.filterChange.value;\n  }\n  set filter(filter: string) {\n    this.filterChange.next(filter);\n  }\n  filteredData: Teachers[] = [];\n  renderedData: Teachers[] = [];\n  constructor(\n    public exampleDatabase: TeachersService,\n    public paginator: MatPaginator,\n    public _sort: MatSort\n  ) {\n    super();\n    // Reset to the first page when the user changes the filter.\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\n  }\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<Teachers[]> {\n    // Listen for any changes in the base data, sorting, filtering, or pagination\n    const displayDataChanges = [\n      this.exampleDatabase.dataChange,\n      this._sort.sortChange,\n      this.filterChange,\n      this.paginator.page,\n    ];\n    this.exampleDatabase.getAllTeacherss();\n    return merge(...displayDataChanges).pipe(\n      map(() => {\n        // Filter data\n        this.filteredData = this.exampleDatabase.data\n          .slice()\n          .filter((teachers: Teachers) => {\n            const searchStr = (\n              teachers.fullname +\n              teachers.username +\n              teachers.password +\n              teachers.uniqueID +\n              teachers.status +\n              teachers.role\n            ).toLowerCase();\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\n          });\n        // Sort filtered data\n        const sortedData = this.sortData(this.filteredData.slice());\n        // Grab the page's slice of the filtered sorted data.\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        this.renderedData = sortedData.splice(\n          startIndex,\n          this.paginator.pageSize\n        );\n        return this.renderedData;\n      })\n    );\n  }\n  disconnect() {}\n  /** Returns a sorted copy of the database data. */\n  sortData(data: Teachers[]): Teachers[] {\n    if (!this._sort.active || this._sort.direction === '') {\n      return data;\n    }\n    return data.sort((a, b) => {\n      let propertyA: number | string = '';\n      let propertyB: number | string = '';\n      switch (this._sort.active) {\n        case 'id':\n          [propertyA, propertyB] = [a.id, b.id];\n          break;\n        case 'date':\n          [propertyA, propertyB] = [a.date, b.date];\n          break;\n        case 'fullname':\n          [propertyA, propertyB] = [a.fullname, b.fullname];\n          break;\n        case 'username':\n          [propertyA, propertyB] = [a.username, b.username];\n          break;\n        case 'password':\n          [propertyA, propertyB] = [a.password, b.password];\n          break;\n        case 'uniqueID':\n          [propertyA, propertyB] = [a.uniqueID, b.uniqueID];\n          break;\n        case 'status':\n          [propertyA, propertyB] = [a.status, b.status];\n          break;\n        case 'role':\n          [propertyA, propertyB] = [a.role, b.role];\n          break;\n      }\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n      return (\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\n      );\n    });\n  }\n}\n\n","<section class=\"content\" style=\"margin-top: 10px\">\n  <div class=\"container-fluid\">\n    <div class=\"block-header\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n          <ul class=\"breadcrumb breadcrumb-style \">\n            <li class=\"breadcrumb-item\">\n              <h4 class=\"page-title\">User Management</h4>\n            </li>\n            <li class=\"breadcrumb-item bcrumb-1\">\n              <a routerLink=\"/admin/dashboard/main\">\n                <i class=\"fas fa-home\"></i></a>\n            </li>\n            <a class=\"active\" style=\"color: #444444; padding: 3px 0;\">User Management</a>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n      <div class=\"card\">\n        <div class=\"body\">\n          <div class=\"table-responsive\">\n            <div class=\"materialTableHeader\">\n              <div class=\"row\">\n                <div class=\"col-8\">\n                  <ul class=\"header-buttons-left ml-0\">\n                    <!-- <li class=\"dropdown\">\n                      <h2>\n                        <strong>Teachers</strong></h2>\n                    </li> -->\n                    <li class=\"dropdown m-l-20\">\n                      <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                      <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\n                        aria-label=\"Search box\">\n                    </li>\n                    <li>\n                      <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\n                        <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\n                          <mat-icon class=\"col-white\">delete\n                          </mat-icon>\n                        </button>\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n                <div class=\"col-4\">\n                  <ul class=\"header-buttons\">\n                    <li *ngIf=\"isAdmin()\">\n                      <div class=\"icon-button-demo\">\n                        <button mat-raised-button color=\"primary\" (click)=\"addNew()\">\n                          <mat-icon class=\"col-white\" style=\"font-size: 16px; padding: 3px;\">add</mat-icon>Add\n                        </button>\n                      </div>\n                    </li>\n                    <!-- <li>\n                      <div class=\"icon-button-demo\">\n                        <button mat-mini-fab color=\"primary\">\n                          <mat-icon class=\"col-white\">refresh\n                          </mat-icon>\n                        </button>\n                      </div>\n                    </li> -->\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\n              <!-- Checkbox Column -->\n              <ng-container matColumnDef=\"select\">\n                <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\n                  <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\n                  </mat-checkbox>\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\n                  <mat-checkbox (click)=\"$event.stopPropagation()\"\n                    (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\n                    [ngClass]=\"'tbl-checkbox'\">\n                  </mat-checkbox>\n                </mat-cell>\n              </ng-container>\n              <!-- ID Column -->\n              <ng-container matColumnDef=\"id\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Id\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\n              </ng-container>\n              <ng-container matColumnDef=\"date\">\n                <mat-header-cell mat-header-cell *matHeaderCellDef> Date\n                </mat-header-cell>\n                <mat-cell mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"\n                class=\"table-img\"> {{row.date | date: 'yyyy-MM-dd'}}\n                </mat-cell>\n              </ng-container>\n              <ng-container matColumnDef=\"fullname\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Client Name\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"> {{row.fullname}}\n                </mat-cell>\n              </ng-container>\n              <ng-container matColumnDef=\"username\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header>User Name\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                  {{row.username}}</mat-cell>\n              </ng-container>\n              <ng-container matColumnDef=\"password\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Password\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"> {{row.password}}\n                </mat-cell>\n              </ng-container>\n              <ng-container matColumnDef=\"uniqueID\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header>UniqueID\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"> {{row.uniqueID}}\n                </mat-cell>\n              </ng-container>\n              <ng-container matColumnDef=\"status\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Status\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"> {{row.status}}\n                </mat-cell>\n              </ng-container>\n              <ng-container matColumnDef=\"role\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Role\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"> {{row.role}}\n                </mat-cell>\n              </ng-container>\n              <!-- actions -->\n              <ng-container matColumnDef=\"actions\">\n                <mat-header-cell class=\"pr-0\" *matHeaderCellDef><a *ngIf=\"isAdmin()\">Actions</a>\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\n                  <button *ngIf=\"isAdmin()\" mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\n                    (click)=\"editCall(row)\">\n                    <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\n                  </button>\n                  <button *ngIf=\"isAdmin()\" mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\n                    (click)=\"deleteItem(row)\">\n                    <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\n                  </button>\n                </mat-cell>\n              </ng-container>\n              <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n              </mat-header-row>\n              <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\n              <mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n                [style.cursor]=\"'pointer'\" matRipple>\n              </mat-row>\n            </mat-table>\n            <!-- Loading spinner -->\n            <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\n              <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n              </mat-progress-spinner>\n            </div>\n            <!-- context menu start -->\n            <div style=\"visibility: hidden; position: fixed\" [style.left]=\"contextMenuPosition.x\"\n              [style.top]=\"contextMenuPosition.y\" [matMenuTriggerFor]=\"contextMenu\">\n            </div>\n            <mat-menu #contextMenu=\"matMenu\">\n              <ng-template matMenuContent let-item=\"item\">\n                <button mat-menu-item (click)=\"addNew()\">\n                  <mat-icon>add_box</mat-icon>\n                  <span>Add Record</span>\n                </button>\n                <button mat-menu-item (click)=\"editCall(item)\">\n                  <mat-icon>create</mat-icon>\n                  <span>Edit Record</span>\n                </button>\n                <button mat-menu-item (click)=\"deleteItem(item)\">\n                  <mat-icon>delete</mat-icon>\n                  <span>Delete Record</span>\n                </button>\n                <button mat-menu-item (click)=\"refresh()\">\n                  <mat-icon>refresh</mat-icon>\n                  <span>Refresh Record</span>\n                </button>\n                <button mat-menu-item disabled>\n                  <mat-icon>no_encryption</mat-icon>\n                  <span>Disable</span>\n                </button>\n                <button mat-menu-item [matMenuTriggerFor]=\"nestedmenu\">\n                  <mat-icon>list_alt</mat-icon>\n                  <span> Nested Menu</span>\n                </button>\n              </ng-template>\n            </mat-menu>\n            <mat-menu #nestedmenu=\"matMenu\">\n              <button mat-menu-item>\n                <mat-icon>mail_outline</mat-icon>\n                <span>Item 1</span>\n              </button>\n              <button mat-menu-item>\n                <mat-icon>call</mat-icon>\n                <span>Item 2</span>\n              </button>\n              <button mat-menu-item>\n                <mat-icon>chat</mat-icon>\n                <span>Item 3</span>\n              </button>\n            </mat-menu>\n            <!-- context menu end -->\n            <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\n              [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\n              No results\n            </div>\n            <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\"\n              [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\">\n            </mat-paginator>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { formatDate } from '@angular/common';\r\nexport class Teachers {\r\n  id: number;\r\n  fullname: string;\r\n  username: string;\r\n  password: string;\r\n  uniqueID: string;\r\n  status: string;\r\n  role: string;\r\n  date: string;\r\n  email: string;\r\n  constructor(teachers) {\r\n    {\r\n      this.id = teachers.id || this.getRandomID();\r\n      // this.date = teachers.date || formatDate(new Date(), 'yyyy-MM-dd', 'en');\r\n      this.date = formatDate(teachers.date ? teachers.date : new Date(), \"yyyy-MM-dd\", \"en\") || formatDate(new Date(), 'yyyy-MM-dd', 'en');\r\n      this.fullname = teachers.fullname || '';\r\n      this.username = teachers.username || '';\r\n      this.password = teachers.password || '';\r\n      this.uniqueID = teachers.uniqueID || this.getRandomID();\r\n      this.status = teachers.status || '';\r\n      this.role = teachers.role || '';\r\n      this.email = teachers.email || '';\r\n      // this.date = teachers.date || '';\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Teachers } from './teachers.model';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { AngularFirestore } from \"@angular/fire/firestore\";\r\n@Injectable()\r\nexport class TeachersService {\r\n  private readonly API_URL = 'assets/data/usermanagement.json';\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<Teachers[]> = new BehaviorSubject<Teachers[]>([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  userData: any[] = [];\r\n  constructor(private httpClient: HttpClient, private firestore: AngularFirestore) {}\r\n  get data(): Teachers[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllTeacherss(): void {\r\n    this.firestore\r\n    .collection(\"userManagement\")\r\n    .get()\r\n    .subscribe((ss) => {\r\n      ss.docs.forEach((doc) => {\r\n        this.userData.push(doc.data());\r\n        console.log(this.userData);\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(this.userData);\r\n      });\r\n    });\r\n  }\r\n  addTeachers(teachers: Teachers): void {\r\n    this.dialogData = teachers;\r\n\r\n    /*  this.httpClient.post(this.API_URL, teachers).subscribe(data => {\r\n      this.dialogData = teachers;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updateTeachers(teachers: Teachers): void {\r\n    this.dialogData = teachers;\r\n\r\n    /* this.httpClient.put(this.API_URL + teachers.id, teachers).subscribe(data => {\r\n      this.dialogData = teachers;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deleteTeachers(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UsermanagementRoutingModule } from './usermanagement-routing.module';\nimport { UsermanagementComponent } from './usermanagement.component';\n\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { NgxEchartsModule } from 'ngx-echarts';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { DeleteDialogComponent } from './dialogs/delete/delete.component';\nimport { FormDialogComponent } from './dialogs/form-dialog/form-dialog.component';\n\nimport { TeachersService } from './teachers.service';\n\n\n@NgModule({\n  declarations: [UsermanagementComponent, DeleteDialogComponent, FormDialogComponent],\n  imports: [\n    CommonModule,\n    UsermanagementRoutingModule,\n    NgxEchartsModule.forRoot({\n      echarts: () => import('echarts'),\n    }),\n    NgApexchartsModule,\n    PerfectScrollbarModule,\n    MatTableModule,\n    MatPaginatorModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDialogModule,\n    MatSortModule,\n    MatToolbarModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatCheckboxModule,\n    MatTabsModule,\n    MaterialFileInputModule,\n    MatMenuModule,\n    MatProgressSpinnerModule,\n  ],\n  providers: [TeachersService],\n})\nexport class UsermanagementModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UsermanagementComponent } from './usermanagement.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UsermanagementComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UsermanagementRoutingModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { TeachersService } from '../../teachers.service';\nimport {\n  FormControl,\n  Validators,\n  FormGroup,\n  FormBuilder,\n} from '@angular/forms';\nimport { Teachers } from '../../teachers.model';\nimport { formatDate } from '@angular/common';\nimport { AngularFirestore } from \"@angular/fire/firestore\";\n\n@Component({\n  selector: 'app-form-dialog',\n  templateUrl: './form-dialog.component.html',\n  styleUrls: ['./form-dialog.component.sass']\n})\nexport class FormDialogComponent implements OnInit {\n  action: string;\n  dialogTitle: string;\n  teachers: Teachers;\n  docId: string = \"\";\n\n  proForm = new FormGroup({\n    date: new FormControl(\"date\"),\n    fullname: new FormControl(\"fullname\"),\n    username: new FormControl(\"username\"),\n    password: new FormControl(\"password\"),\n    status: new FormControl(\"status\"),\n    role: new FormControl(\"role\"),\n    email: new FormControl(\"email\")\n  });\n\n  constructor(\n    public dialogRef: MatDialogRef<FormDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public teachersService: TeachersService,\n    private fb: FormBuilder,\n    private firestore: AngularFirestore\n  ) {\n    // Set the defaults\n    this.action = data.action;\n    if (this.action === 'edit') {\n      this.dialogTitle = data.teachers.username;\n      this.teachers = data.teachers;\n      this.firestore\n        .collection(\"userManagement\", (ref) =>\n          ref\n            .where(\"fullname\", \"==\", data.teachers.fullname)\n            .where(\"username\", \"==\", data.teachers.username)\n            .where(\"date\", \"==\", data.teachers.date)\n            .where(\"status\", \"==\", data.teachers.status)\n            .where(\"email\", \"==\", data.teachers.email)\n            .where(\"password\", \"==\", data.teachers.password)\n            .where(\"role\", \"==\", data.teachers.role)\n            .where(\"uniqueID\", \"==\", data.teachers.uniqueID)\n            .where(\"id\", \"==\", data.teachers.id)\n        )\n        .get()\n        .subscribe((ss) => {\n          ss.docs.forEach((doc) => {\n            this.docId = doc.id;\n          });\n        });\n    } else {\n      this.dialogTitle = 'New Usermanagement';\n      this.teachers = new Teachers({});\n    }\n    this.proForm = this.createContactForm();\n  }\n  formControl = new FormControl('', [\n    Validators.required,\n    // Validators.email,\n  ]);\n  getErrorMessage() {\n    return this.formControl.hasError('required')\n      ? 'Required field'\n      : this.formControl.hasError('email')\n      ? 'Not a valid email'\n      : '';\n  }\n  createContactForm(): FormGroup {\n    return this.fb.group({\n      id: [this.teachers.id],\n      // email: [\n      //   this.teachers.email,\n      //   [Validators.required, Validators.email, Validators.minLength(5)],\n      // ],\n      // date: [\n      //   formatDate(this.teachers.date, 'yyyy-MM-dd', 'en'),\n      //   [Validators.required],\n      // ],\n      fullname: [this.teachers.fullname],\n      username: [this.teachers.username],\n      password: [this.teachers.password],\n      uniqueID: [this.teachers.uniqueID],\n      status: [this.teachers.status],\n      role: [this.teachers.role],\n      date: [this.teachers.date],\n      email: [this.teachers.email]\n    });\n  }\n  submit() {\n    // emppty stuff\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  public confirmAdd(): void {\n    if (this.action === \"add\") {\n      console.log(this.proForm.getRawValue());\n      this.firestore\n        .collection(\"userManagement\")\n        .add({\n          id: this.teachers.id,\n          date: formatDate(this.proForm.value.date, \"yyyy-MM-dd\", \"en\"),\n          fullname: this.proForm.value.fullname,\n          username: this.proForm.value.username,\n          password: this.proForm.value.password,\n          uniqueID: this.teachers.id,\n          status: this.proForm.value.status,\n          role: this.proForm.value.role,\n          email: this.proForm.value.email\n        })\n        .then((res) => {\n          console.log(res);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n      this.teachersService.addTeachers(this.proForm.getRawValue());\n    } else if (this.action === \"edit\") {\n      this.firestore\n        .collection(\"userManagement\")\n        .doc(this.docId)\n        .update({\n          id: this.teachers.id,\n          date: formatDate(this.proForm.value.date, \"yyyy-MM-dd\", \"en\"),\n          fullname: this.proForm.value.fullname,\n          username: this.proForm.value.username,\n          password: this.proForm.value.password,\n          email: this.proForm.value.email,\n          status: this.proForm.value.status,\n          role: this.proForm.value.role,\n          uniqueID: this.teachers.uniqueID,\n        });\n      this.teachersService.addTeachers(this.proForm.getRawValue());\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"addContainer\">\n  <div class=\"modalHeader\">\n    <div class=\"editRowModal\">\n      <div class=\"modalHeader clearfix\">\n        <!-- <img [src]='teachers.img' alt=\"avatar\"> -->\n        <div class=\"modal-about\">\n          <div class=\"font-weight-bold p-t-5 font-17\">\n            {{dialogTitle}}</div>\n        </div>\n      </div>\n    </div>\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n  <div mat-dialog-content>\n    <form class=\"register-form m-4\" [formGroup]=\"proForm\" (ngSubmit)=\"submit\">\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Date</mat-label>\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"date\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n            <mat-error *ngIf=\"proForm.get('date').hasError('required')\">\n              Please select date\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Client Name</mat-label>\n            <input matInput formControlName=\"fullname\" required>\n            <mat-icon matSuffix>face</mat-icon>\n            <mat-error *ngIf=\"proForm.get('fullname').hasError('required')\">\n              Client Name is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>User Name</mat-label>\n            <input matInput formControlName=\"username\" required>\n            <mat-icon matSuffix>face</mat-icon>\n            <mat-error *ngIf=\"proForm.get('username').hasError('required')\">\n              User Name is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Password</mat-label>\n            <input matInput formControlName=\"password\" required>\n            <mat-icon matSuffix>lock</mat-icon>\n            <mat-error *ngIf=\"proForm.get('password').hasError('required')\">\n              Password is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>UniqueID</mat-label>\n            <input matInput formControlName=\"uniqueID\" type=\"number\">\n            <mat-icon matSuffix>money</mat-icon>\n            <mat-error *ngIf=\"proForm.get('uniqueID').hasError('required')\">\n              UniqueID is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>status</mat-label>\n            <mat-select formControlName=\"status\" required>\n              <mat-option [value]=\"'Active'\">\n                Active\n              </mat-option>\n              <mat-option [value]=\"'Disabled'\">\n                Disabled\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"proForm.get('status').hasError('required')\">\n              Status is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Role</mat-label>\n            <mat-select formControlName=\"role\" required>\n              <mat-option [value]=\"'Admin'\">\n                Admin\n              </mat-option>\n              <mat-option [value]=\"'Moderator'\">\n                Moderator\n              </mat-option>\n              <mat-option [value]=\"'User'\">\n                User\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"proForm.get('role').hasError('required')\">\n              Role is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Email</mat-label>\n            <input matInput formControlName=\"email\" type=\"email\" required>\n            <mat-icon matSuffix>face</mat-icon>\n            <mat-error *ngIf=\"proForm.get('email').hasError('required')\">\n              Email is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n          <div class=\"example-button-row\">\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!proForm.valid\" [mat-dialog-close]=\"1\"\n              (click)=\"confirmAdd()\">Save</button>\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { TeachersService } from '../../teachers.service';\nimport { AngularFirestore } from \"@angular/fire/firestore\";\n\n@Component({\n  selector: 'app-delete',\n  templateUrl: './delete.component.html',\n  styleUrls: ['./delete.component.sass']\n})\nexport class DeleteDialogComponent implements OnInit {\n  docId: string = \"\";\n\n  constructor(\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public teachersService: TeachersService,\n    private firestore: AngularFirestore\n  ) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  confirmDelete(): void {\n    this.firestore.collection('userManagement').doc(this.docId).delete();\n    this.teachersService.deleteTeachers(this.data.id);\n  }\n\n  ngOnInit(): void {\n    console.log(this.data.id);\n    this.firestore\n      .collection(\"userManagement\", (ref) =>\n        ref\n          .where(\"fullname\", \"==\", this.data.fullname)\n          .where(\"username\", \"==\", this.data.username)\n          .where(\"date\", \"==\", this.data.date)\n          .where(\"status\", \"==\", this.data.status)\n          .where(\"email\", \"==\", this.data.email)\n          .where(\"password\", \"==\", this.data.password)\n          .where(\"uniqueID\", \"==\", this.data.uniqueID)\n          .where(\"role\", \"==\", this.data.role)\n      )\n      .get()\n      .subscribe((ss) => {\n        ss.docs.forEach((doc) => {\n          this.docId = doc.id;\n        });\n      });\n  }\n}\n","<div class=\"container\">\n  <h3 mat-dialog-title>Are you sure?</h3>\n  <div mat-dialog-content>\n    <ul class=\"clearfix\">\n      <li>\n        <p><span class=\"font-weight-bold\"> Client Name: </span>{{ data.fullname }}</p>\n      </li>\n      <li>\n        <p><span class=\"font-weight-bold\"> Status: </span>{{ data.status }}</p>\n      </li>\n    </ul>\n  </div>\n  <div mat-dialog-actions class=\"mb-1\">\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\n      Delete\n    </button>\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n  </div>\n</div>\n"],"sourceRoot":"webpack:///"}