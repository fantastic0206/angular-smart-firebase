{"version":3,"sources":["./src/app/admin/departments/all-departments/department.service.ts","./src/app/admin/departments/departments.module.ts","./src/app/admin/departments/all-departments/dialogs/delete/delete.component.ts","./src/app/admin/departments/all-departments/dialogs/delete/delete.component.html","./src/app/admin/departments/all-departments/dialogs/form-dialog/form-dialog.component.ts","./src/app/admin/departments/all-departments/dialogs/form-dialog/form-dialog.component.html","./src/app/admin/departments/departments-routing.module.ts","./src/app/admin/departments/all-departments/all-departments.component.ts","./src/app/admin/departments/all-departments/all-departments.component.html","./src/app/admin/departments/edit-department/edit-department.component.ts","./src/app/admin/departments/edit-department/edit-department.component.html","./src/app/admin/departments/all-departments/department.model.ts","./src/app/admin/departments/add-department/add-department.component.ts","./src/app/admin/departments/add-department/add-department.component.html"],"names":[],"mappings":"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","file":"departments-departments-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Department } from './department.model';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\n@Injectable()\r\nexport class DepartmentService {\r\n  private readonly API_URL = 'assets/data/department.json';\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<Department[]> = new BehaviorSubject<Department[]>(\r\n    []\r\n  );\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {}\r\n  get data(): Department[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllDepartments(): void {\r\n    this.httpClient.get<Department[]>(this.API_URL).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + ' ' + error.message);\r\n      }\r\n    );\r\n  }\r\n  addDepartment(department: Department): void {\r\n    this.dialogData = department;\r\n\r\n    /*  this.httpClient.post(this.API_URL, department).subscribe(data => {\r\n      this.dialogData = department;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updateDepartment(department: Department): void {\r\n    this.dialogData = department;\r\n\r\n    /* this.httpClient.put(this.API_URL + department.id, department).subscribe(data => {\r\n      this.dialogData = department;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deleteDepartment(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\n\r\nimport { DepartmentsRoutingModule } from './departments-routing.module';\r\nimport { AddDepartmentComponent } from './add-department/add-department.component';\r\nimport { EditDepartmentComponent } from './edit-department/edit-department.component';\r\nimport { AllDepartmentsComponent } from './all-departments/all-departments.component';\r\nimport { DeleteDialogComponent } from './all-departments/dialogs/delete/delete.component';\r\nimport { FormDialogComponent } from './all-departments/dialogs/form-dialog/form-dialog.component';\r\nimport { DepartmentService } from './all-departments/department.service';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AddDepartmentComponent,\r\n    EditDepartmentComponent,\r\n    AllDepartmentsComponent,\r\n    DeleteDialogComponent,\r\n    FormDialogComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSortModule,\r\n    MatCheckboxModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatSelectModule,\r\n    MaterialFileInputModule,\r\n    MatDatepickerModule,\r\n    MatMenuModule,\r\n    DepartmentsRoutingModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  providers: [DepartmentService],\r\n})\r\nexport class DepartmentsModule {}\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { DepartmentService } from '../../department.service';\r\n@Component({\r\n  selector: 'app-delete',\r\n  templateUrl: './delete.component.html',\r\n  styleUrls: ['./delete.component.sass']\r\n})\r\nexport class DeleteDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public departmentService: DepartmentService\r\n  ) {}\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    this.departmentService.deleteDepartment(this.data.id);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <h3 mat-dialog-title>Are you sure?</h3>\r\n    <div mat-dialog-content>\r\n        <ul class=\"clearfix\">\r\n            <li>\r\n                <p><span class=\"font-weight-bold\"> Department Name: </span>{{data.dName}}</p>\r\n            </li>\r\n            <li>\r\n                <p><span class=\"font-weight-bold\"> HOD: </span>{{ data.hod }}</p>\r\n            </li>\r\n            <li>\r\n                <p>\r\n                    <span class=\"font-weight-bold\">Mobile: </span>{{data.phone}}\r\n                </p>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div mat-dialog-actions class=\"mb-1\">\r\n        <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\r\n            Delete\r\n        </button>\r\n        <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n    </div>\r\n</div>","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { DepartmentService } from '../../department.service';\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormGroup,\r\n  FormBuilder\r\n} from '@angular/forms';\r\nimport { Department } from '../../department.model';\r\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\r\n@Component({\r\n  selector: 'app-form-dialog',\r\n  templateUrl: './form-dialog.component.html',\r\n  styleUrls: ['./form-dialog.component.sass'],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: 'en-GB' }]\r\n})\r\nexport class FormDialogComponent {\r\n  action: string;\r\n  dialogTitle: string;\r\n  departmentForm: FormGroup;\r\n  department: Department;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public departmentService: DepartmentService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === 'edit') {\r\n      this.dialogTitle = data.department.dName;\r\n      this.department = data.department;\r\n    } else {\r\n      this.dialogTitle = 'New Department';\r\n      this.department = new Department({});\r\n    }\r\n    this.departmentForm = this.createContactForm();\r\n  }\r\n  formControl = new FormControl('', [\r\n    Validators.required\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError('required')\r\n      ? 'Required field'\r\n      : this.formControl.hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      id: [this.department.id],\r\n      dName: [this.department.dName, [Validators.required]],\r\n      hod: [this.department.hod, [Validators.required]],\r\n      phone: [this.department.phone, [Validators.required]],\r\n      email: [\r\n        this.department.email,\r\n        [Validators.required, Validators.email, Validators.minLength(5)]\r\n      ],\r\n      sYear: [this.department.sYear, [Validators.required]],\r\n      sCapacity: [this.department.sCapacity, [Validators.required]]\r\n    });\r\n  }\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  public confirmAdd(): void {\r\n    this.departmentService.addDepartment(this.departmentForm.getRawValue());\r\n  }\r\n}\r\n","<div class=\"addContainer\">\r\n    <div class=\"modalHeader\">\r\n        <div class=\"editRowModal\">\r\n            <div class=\"modalHeader clearfix\">\r\n                <div class=\"modal-about\">\r\n                    <div class=\"font-weight-bold p-t-5 font-17\">\r\n                        {{dialogTitle}}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </div>\r\n    <div mat-dialog-content>\r\n        <form class=\"register-form m-4\" [formGroup]=\"departmentForm\" (ngSubmit)=\"submit\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Department</mat-label>\r\n                        <mat-select formControlName=\"dName\" required>\r\n                            <mat-option [value]=\"'mechanical'\">\r\n                                Mechanical\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'science'\">\r\n                                Science\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'mathematics'\">\r\n                                Mathematics\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'computer'\">\r\n                                Computer\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'civil'\">\r\n                                Civil\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'automobile'\">\r\n                                Automobile\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'management'\">\r\n                                Management\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"departmentForm.get('dName').hasError('required')\">\r\n                            Select Any Department\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Head Of Department</mat-label>\r\n                        <input matInput formControlName=\"hod\" required>\r\n                        <mat-icon matSuffix>person</mat-icon>\r\n                        <mat-error *ngIf=\"departmentForm.get('hod').hasError('required')\">\r\n                            HOD name required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Phone</mat-label>\r\n                        <input matInput formControlName=\"phone\">\r\n                        <mat-icon matSuffix>phone</mat-icon>\r\n                        <mat-error *ngIf=\"departmentForm.get('phone').hasError('required')\">\r\n                            Phone is required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Email</mat-label>\r\n                        <input matInput formControlName=\"email\" required>\r\n                        <mat-icon matSuffix>email</mat-icon>\r\n                        <mat-error\r\n                            *ngIf=\"departmentForm.get('email').hasError('required') || departmentForm.get('email').touched\">\r\n                            Please enter a valid email address\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Department Start Year</mat-label>\r\n                        <input matInput formControlName=\"sYear\" required>\r\n                        <mat-icon matSuffix>query_builder</mat-icon>\r\n                        <mat-error *ngIf=\"departmentForm.get('sYear').hasError('required')\">\r\n                            Department Start Year is required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Student Capacity</mat-label>\r\n                        <input matInput formControlName=\"sCapacity\" required>\r\n                        <mat-icon matSuffix>group</mat-icon>\r\n                        <mat-error *ngIf=\"departmentForm.get('sCapacity').hasError('required')\">\r\n                            Student Capacity is required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                    <div class=\"example-button-row\">\r\n                        <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!departmentForm.valid\"\r\n                            [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\r\n                        <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AllDepartmentsComponent } from './all-departments/all-departments.component';\r\nimport { AddDepartmentComponent } from './add-department/add-department.component';\r\nimport { EditDepartmentComponent } from './edit-department/edit-department.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'all-departments',\r\n    component: AllDepartmentsComponent\r\n  },\r\n  {\r\n    path: 'add-department',\r\n    component: AddDepartmentComponent\r\n  },\r\n  {\r\n    path: 'edit-department',\r\n    component: EditDepartmentComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DepartmentsRoutingModule {}\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { DepartmentService } from './department.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { Department } from './department.model';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { FormDialogComponent } from './dialogs/form-dialog/form-dialog.component';\r\nimport { DeleteDialogComponent } from './dialogs/delete/delete.component';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\n@Component({\r\n  selector: 'app-all-departments',\r\n  templateUrl: './all-departments.component.html',\r\n  styleUrls: ['./all-departments.component.sass'],\r\n})\r\nexport class AllDepartmentsComponent implements OnInit {\r\n  displayedColumns = [\r\n    'select',\r\n    'dName',\r\n    'hod',\r\n    'phone',\r\n    'email',\r\n    'sYear',\r\n    'sCapacity',\r\n    'actions',\r\n  ];\r\n  exampleDatabase: DepartmentService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<Department>(true, []);\r\n  id: number;\r\n  department: Department | null;\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public departmentService: DepartmentService,\r\n    private snackBar: MatSnackBar\r\n  ) {}\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild('filter', { static: true }) filter: ElementRef;\r\n  @ViewChild(MatMenuTrigger)\r\n  contextMenu: MatMenuTrigger;\r\n  contextMenuPosition = { x: '0px', y: '0px' };\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n  addNew() {\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        department: this.department,\r\n        action: 'add',\r\n      },\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // After dialog is closed we're doing frontend updates\r\n        // For add we're just pushing a new row inside DataService\r\n        this.exampleDatabase.dataChange.value.unshift(\r\n          this.departmentService.getDialogData()\r\n        );\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'snackbar-success',\r\n          'Add Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  editCall(row) {\r\n    this.id = row.id;\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        department: row,\r\n        action: 'edit',\r\n      },\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // When using an edit things are little different, firstly we find record inside DataService by id\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // Then you update that record using data from dialogData (values you enetered)\r\n        this.exampleDatabase.dataChange.value[\r\n          foundIndex\r\n        ] = this.departmentService.getDialogData();\r\n        // And lastly refresh table\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'black',\r\n          'Edit Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  deleteItem(row) {\r\n    this.id = row.id;\r\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: row,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // for delete we use splice in order to remove single object from DataService\r\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'snackbar-danger',\r\n          'Delete Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.renderedData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.renderedData.forEach((row) =>\r\n          this.selection.select(row)\r\n        );\r\n  }\r\n  removeSelectedRows() {\r\n    const totalSelect = this.selection.selected.length;\r\n    this.selection.selected.forEach((item) => {\r\n      const index: number = this.dataSource.renderedData.findIndex(\r\n        (d) => d === item\r\n      );\r\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\r\n      this.exampleDatabase.dataChange.value.splice(index, 1);\r\n      this.refreshTable();\r\n      this.selection = new SelectionModel<Department>(true, []);\r\n    });\r\n    this.showNotification(\r\n      'snackbar-danger',\r\n      totalSelect + ' Record Delete Successfully...!!!',\r\n      'bottom',\r\n      'center'\r\n    );\r\n  }\r\n  public loadData() {\r\n    this.exampleDatabase = new DepartmentService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    fromEvent(this.filter.nativeElement, 'keyup').subscribe(() => {\r\n      if (!this.dataSource) {\r\n        return;\r\n      }\r\n      this.dataSource.filter = this.filter.nativeElement.value;\r\n    });\r\n  }\r\n  showNotification(colorName, text, placementFrom, placementAlign) {\r\n    this.snackBar.open(text, '', {\r\n      duration: 2000,\r\n      verticalPosition: placementFrom,\r\n      horizontalPosition: placementAlign,\r\n      panelClass: colorName,\r\n    });\r\n  }\r\n  // context menu\r\n  onContextMenu(event: MouseEvent, item: Department) {\r\n    event.preventDefault();\r\n    this.contextMenuPosition.x = event.clientX + 'px';\r\n    this.contextMenuPosition.y = event.clientY + 'px';\r\n    this.contextMenu.menuData = { item: item };\r\n    this.contextMenu.menu.focusFirstItem('mouse');\r\n    this.contextMenu.openMenu();\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<Department> {\r\n  filterChange = new BehaviorSubject('');\r\n  get filter(): string {\r\n    return this.filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this.filterChange.next(filter);\r\n  }\r\n  filteredData: Department[] = [];\r\n  renderedData: Department[] = [];\r\n  constructor(\r\n    public exampleDatabase: DepartmentService,\r\n    public paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<Department[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this.exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this.filterChange,\r\n      this.paginator.page,\r\n    ];\r\n    this.exampleDatabase.getAllDepartments();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this.exampleDatabase.data\r\n          .slice()\r\n          .filter((department: Department) => {\r\n            const searchStr = (\r\n              department.dName +\r\n              department.hod +\r\n              department.phone +\r\n              department.email\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this.paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() {}\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: Department[]): Department[] {\r\n    if (!this._sort.active || this._sort.direction === '') {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = '';\r\n      let propertyB: number | string = '';\r\n      switch (this._sort.active) {\r\n        case 'id':\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case 'dName':\r\n          [propertyA, propertyB] = [a.dName, b.dName];\r\n          break;\r\n        case 'hod':\r\n          [propertyA, propertyB] = [a.hod, b.hod];\r\n          break;\r\n        // case 'date': [propertyA, propertyB] = [a.date, b.date]; break;\r\n        case 'phone':\r\n          [propertyA, propertyB] = [a.phone, b.phone];\r\n          break;\r\n        case 'email':\r\n          [propertyA, propertyB] = [a.email, b.email];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">All Departments</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Departments</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">All</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n        <div class=\"card\">\r\n          <div class=\"body\">\r\n            <div class=\"responsive_table\">\r\n              <div class=\"materialTableHeader\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-8\">\r\n                    <ul class=\"header-buttons-left ml-0\">\r\n                      <li class=\"dropdown\">\r\n                        <h2>\r\n                          <strong>Departments</strong></h2>\r\n                      </li>\r\n                      <li class=\"dropdown m-l-20\">\r\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\r\n                          aria-label=\"Search box\">\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\r\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\r\n                            <mat-icon class=\"col-white\">delete\r\n                            </mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div class=\"col-4\">\r\n                    <ul class=\"header-buttons\">\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\r\n                            <mat-icon class=\"col-white\">add</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\r\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\r\n                <!-- Checkbox Column -->\r\n                <ng-container matColumnDef=\"select\">\r\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\r\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"dName\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Department Name</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.dName}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"hod\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Head Of Department\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.hod}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"phone\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Phone</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.phone }}\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"email\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.email}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"sYear\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Start Year</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.sYear}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"sCapacity\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Students Capacity\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.sCapacity}}</mat-cell>\r\n                </ng-container>\r\n                <!-- actions -->\r\n                <ng-container matColumnDef=\"actions\">\r\n                  <mat-header-cell *matHeaderCellDef class=\"pr-0\">Actions</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"editCall(row)\">\r\n                      <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"deleteItem(row)\">\r\n                      <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\r\n                    </button>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\r\n                  [style.cursor]=\"'pointer'\" matRipple>\r\n                </mat-row>\r\n              </mat-table>\r\n              <!-- Loading spinner -->\r\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\r\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\r\n                </mat-progress-spinner>\r\n              </div>\r\n              <!-- context menu start -->\r\n              <div style=\"visibility: hidden; position: fixed\" [style.left]=\"contextMenuPosition.x\"\r\n                [style.top]=\"contextMenuPosition.y\" [matMenuTriggerFor]=\"contextMenu\">\r\n              </div>\r\n              <mat-menu #contextMenu=\"matMenu\">\r\n                <ng-template matMenuContent let-item=\"item\">\r\n                  <button mat-menu-item (click)=\"addNew()\">\r\n                    <mat-icon>add_box</mat-icon>\r\n                    <span>Add Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"editCall(item)\">\r\n                    <mat-icon>create</mat-icon>\r\n                    <span>Edit Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"deleteItem(item)\">\r\n                    <mat-icon>delete</mat-icon>\r\n                    <span>Delete Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"refresh()\">\r\n                    <mat-icon>refresh</mat-icon>\r\n                    <span>Refresh Record</span>\r\n                  </button>\r\n                  <button mat-menu-item disabled>\r\n                    <mat-icon>no_encryption</mat-icon>\r\n                    <span>Disable</span>\r\n                  </button>\r\n                  <button mat-menu-item [matMenuTriggerFor]=\"nestedmenu\">\r\n                    <mat-icon>list_alt</mat-icon>\r\n                    <span> Nested Menu</span>\r\n                  </button>\r\n                </ng-template>\r\n              </mat-menu>\r\n              <mat-menu #nestedmenu=\"matMenu\">\r\n                <button mat-menu-item>\r\n                  <mat-icon>mail_outline</mat-icon>\r\n                  <span>Item 1</span>\r\n                </button>\r\n                <button mat-menu-item>\r\n                  <mat-icon>call</mat-icon>\r\n                  <span>Item 2</span>\r\n                </button>\r\n                <button mat-menu-item>\r\n                  <mat-icon>chat</mat-icon>\r\n                  <span>Item 3</span>\r\n                </button>\r\n              </mat-menu>\r\n              <!-- context menu end -->\r\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\r\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\r\n                No results\r\n              </div>\r\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\r\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n              </mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-edit-department',\r\n  templateUrl: './edit-department.component.html',\r\n  styleUrls: ['./edit-department.component.sass']\r\n})\r\nexport class EditDepartmentComponent {\r\n  departmentForm: FormGroup;\r\n  formdata = {\r\n    dName: 'mathematics',\r\n    hod: 'Sanjay Shah',\r\n    phone: '123456789',\r\n    email: 'test@example.com',\r\n    sYear: '1987-02-17T14:22:18Z',\r\n    sCapacity: '230',\r\n    details: 'Learn fashion designing course with proper guideline.'\r\n  };\r\n  constructor(private fb: FormBuilder) {\r\n    this.departmentForm = this.createContactForm();\r\n  }\r\n  onSubmit() {\r\n    console.log('Form Value', this.departmentForm.value);\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      dName: [this.formdata.dName, [Validators.required]],\r\n      hod: [this.formdata.hod],\r\n      phone: [this.formdata.phone, [Validators.required]],\r\n      email: [\r\n        this.formdata.email,\r\n        [Validators.required, Validators.email, Validators.minLength(5)]\r\n      ],\r\n      sYear: [this.formdata.sYear],\r\n      sCapacity: [this.formdata.sCapacity],\r\n      details: [this.formdata.details]\r\n    });\r\n  }\r\n}\r\n","<section class=\"content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"block-header\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <ul class=\"breadcrumb breadcrumb-style \">\r\n                        <li class=\"breadcrumb-item\">\r\n                            <h4 class=\"page-title\">Department</h4>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-1\">\r\n                            <a routerLink=\"/admin/dashboard/main\">\r\n                                <i class=\"fas fa-home\"></i> Home</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-2\">\r\n                            <a href=\"#\" onClick=\"return false;\">Department</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item active\">Edit Department</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row clearfix\">\r\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"header\">\r\n                        <h2>Edit Department</h2>\r\n                        \r\n                    </div>\r\n                    <div class=\"body\">\r\n                        <form class=\"m-4\" [formGroup]=\"departmentForm\" (ngSubmit)=\"onSubmit()\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\">\r\n                                        <mat-label>Department</mat-label>\r\n                                        <mat-select formControlName=\"dName\" required>\r\n                                            <mat-option [value]=\"'mechanical'\">\r\n                                                Mechanical\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'science'\">\r\n                                                Science\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'mathematics'\">\r\n                                                Mathematics\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'computer'\">\r\n                                                Computer\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'civil'\">\r\n                                                Civil\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'automobile'\">\r\n                                                Automobile\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'management'\">\r\n                                                Management\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"departmentForm.get('dName').hasError('required')\">\r\n                                            Select Any Department\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\">\r\n                                        <mat-label>Head Of Department</mat-label>\r\n                                        <input matInput formControlName=\"hod\" required>\r\n                                        <mat-icon matSuffix>person</mat-icon>\r\n                                        <mat-error *ngIf=\"departmentForm.get('hod').hasError('required')\">\r\n                                            HOD name required\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\">\r\n                                        <mat-label>Phone</mat-label>\r\n                                        <input matInput formControlName=\"phone\">\r\n                                        <mat-icon matSuffix>phone</mat-icon>\r\n                                        <mat-error *ngIf=\"departmentForm.get('phone').hasError('required')\">\r\n                                            Phone is required\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\">\r\n                                        <mat-label>Email</mat-label>\r\n                                        <input matInput formControlName=\"email\" required>\r\n                                        <mat-icon matSuffix>email</mat-icon>\r\n                                        <mat-error\r\n                                            *ngIf=\"departmentForm.get('email').hasError('required') || departmentForm.get('email').touched\">\r\n                                            Please enter a valid email address\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\">\r\n                                        <mat-label>Department Start Date</mat-label>\r\n                                        <input matInput [matDatepicker]=\"picker\" formControlName=\"sYear\" required>\r\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                                        <mat-datepicker #picker></mat-datepicker>\r\n                                        <mat-error *ngIf=\"departmentForm.get('sYear').hasError('required')\">\r\n                                            Please select date\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\">\r\n                                        <mat-label>Student Capacity</mat-label>\r\n                                        <input matInput formControlName=\"sCapacity\" required>\r\n                                        <mat-icon matSuffix>group</mat-icon>\r\n                                        <mat-error *ngIf=\"departmentForm.get('sCapacity').hasError('required')\">\r\n                                            Student Capacity is required\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\">\r\n                                        <mat-label>Details</mat-label>\r\n                                        <textarea matInput formControlName=\"details\"></textarea>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <button class=\"mr-3\" [disabled]=\"!departmentForm.valid \" mat-raised-button\r\n                                        color=\"primary\">Submit</button>\r\n                                    <button type=\"button\" mat-button>Cancel</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","export class Department {\r\n  id: number;\r\n  dName: string;\r\n  hod: string;\r\n  phone: string;\r\n  email: string;\r\n  sYear: string;\r\n  sCapacity: string;\r\n  constructor(department) {\r\n    {\r\n      this.id = department.id || this.getRandomID();\r\n      this.dName = department.dName || '';\r\n      this.hod = department.hod || '';\r\n      this.phone = department.phone || '';\r\n      this.email = department.email || '';\r\n      this.sYear = department.sYear || '';\r\n      this.sCapacity = department.sCapacity || '';\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-add-department',\r\n  templateUrl: './add-department.component.html',\r\n  styleUrls: ['./add-department.component.sass']\r\n})\r\nexport class AddDepartmentComponent {\r\n  departmentForm: FormGroup;\r\n  constructor(private fb: FormBuilder) {\r\n    this.departmentForm = this.fb.group({\r\n      dName: ['', [Validators.required]],\r\n      hod: ['', [Validators.required]],\r\n      phone: ['', [Validators.required]],\r\n      email: [\r\n        '',\r\n        [Validators.required, Validators.email, Validators.minLength(5)]\r\n      ],\r\n      sYear: [''],\r\n      sCapacity: ['', [Validators.required]],\r\n      details: ['']\r\n    });\r\n  }\r\n  onSubmit() {\r\n    console.log('Form Value', this.departmentForm.value);\r\n  }\r\n}\r\n","<section class=\"content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"block-header\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <ul class=\"breadcrumb breadcrumb-style \">\r\n                        <li class=\"breadcrumb-item\">\r\n                            <h4 class=\"page-title\">Department</h4>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-1\">\r\n                            <a routerLink=\"/admin/dashboard/main\">\r\n                                <i class=\"fas fa-home\"></i> Home</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-2\">\r\n                            <a href=\"#\" onClick=\"return false;\">Department</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item active\">Add Department</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row clearfix\">\r\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"header\">\r\n                        <h2>Add Department</h2>\r\n                        \r\n                    </div>\r\n                    <div class=\"body\">\r\n                        <form class=\"m-4\" [formGroup]=\"departmentForm\" (ngSubmit)=\"onSubmit()\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\">\r\n                                        <mat-label>Department</mat-label>\r\n                                        <mat-select formControlName=\"dName\" required>\r\n                                            <mat-option [value]=\"'mechanical'\">\r\n                                                Mechanical\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'science'\">\r\n                                                Science\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'mathematics'\">\r\n                                                Mathematics\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'computer'\">\r\n                                                Computer\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'civil'\">\r\n                                                Civil\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'automobile'\">\r\n                                                Automobile\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'management'\">\r\n                                                Management\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"departmentForm.get('dName').hasError('required')\">\r\n                                            Select Any Department\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\">\r\n                                        <mat-label>Head Of Department</mat-label>\r\n                                        <input matInput formControlName=\"hod\" required>\r\n                                        <mat-icon matSuffix>person</mat-icon>\r\n                                        <mat-error *ngIf=\"departmentForm.get('hod').hasError('required')\">\r\n                                            HOD name required\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\">\r\n                                        <mat-label>Phone</mat-label>\r\n                                        <input matInput formControlName=\"phone\">\r\n                                        <mat-icon matSuffix>phone</mat-icon>\r\n                                        <mat-error *ngIf=\"departmentForm.get('phone').hasError('required')\">\r\n                                            Phone is required\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\">\r\n                                        <mat-label>Email</mat-label>\r\n                                        <input matInput formControlName=\"email\" required>\r\n                                        <mat-icon matSuffix>email</mat-icon>\r\n                                        <mat-error\r\n                                            *ngIf=\"departmentForm.get('email').hasError('required') || departmentForm.get('email').touched\">\r\n                                            Please enter a valid email address\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\">\r\n                                        <mat-label>Department Start Date</mat-label>\r\n                                        <input matInput [matDatepicker]=\"picker\" formControlName=\"sYear\" required>\r\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                                        <mat-datepicker #picker></mat-datepicker>\r\n                                        <mat-error *ngIf=\"departmentForm.get('sYear').hasError('required')\">\r\n                                            Please select date\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\">\r\n                                        <mat-label>Student Capacity</mat-label>\r\n                                        <input matInput formControlName=\"sCapacity\" required>\r\n                                        <mat-icon matSuffix>group</mat-icon>\r\n                                        <mat-error *ngIf=\"departmentForm.get('sCapacity').hasError('required')\">\r\n                                            Student Capacity is required\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\">\r\n                                        <mat-label>Details</mat-label>\r\n                                        <textarea matInput formControlName=\"details\"></textarea>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <button class=\"mr-3\" [disabled]=\"!departmentForm.valid \" mat-raised-button\r\n                                        color=\"primary\">Submit</button>\r\n                                    <button type=\"button\" mat-button>Cancel</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>"],"sourceRoot":"webpack:///"}